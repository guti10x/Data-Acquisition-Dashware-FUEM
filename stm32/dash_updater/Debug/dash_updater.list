
dash_updater.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004590  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001fc  08004730  08004730  00005730  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800492c  0800492c  00006088  2**0
                  CONTENTS
  4 .ARM          00000008  0800492c  0800492c  0000592c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004934  08004934  00006088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004934  08004934  00005934  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004938  08004938  00005938  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000088  20000000  0800493c  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000200  20000088  080049c4  00006088  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000288  080049c4  00006288  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00006088  2**0
                  CONTENTS, READONLY
 12 .debug_info   00007c6c  00000000  00000000  000060b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000015c5  00000000  00000000  0000dd24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000720  00000000  00000000  0000f2f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000567  00000000  00000000  0000fa10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000165f1  00000000  00000000  0000ff77  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00008b2b  00000000  00000000  00026568  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00087f04  00000000  00000000  0002f093  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b6f97  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000028d0  00000000  00000000  000b6fdc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007f  00000000  00000000  000b98ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000088 	.word	0x20000088
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004718 	.word	0x08004718

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000008c 	.word	0x2000008c
 80001dc:	08004718 	.word	0x08004718

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__aeabi_d2iz>:
 8000a1c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a20:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a24:	d215      	bcs.n	8000a52 <__aeabi_d2iz+0x36>
 8000a26:	d511      	bpl.n	8000a4c <__aeabi_d2iz+0x30>
 8000a28:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a2c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a30:	d912      	bls.n	8000a58 <__aeabi_d2iz+0x3c>
 8000a32:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a36:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a3a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a3e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a42:	fa23 f002 	lsr.w	r0, r3, r2
 8000a46:	bf18      	it	ne
 8000a48:	4240      	negne	r0, r0
 8000a4a:	4770      	bx	lr
 8000a4c:	f04f 0000 	mov.w	r0, #0
 8000a50:	4770      	bx	lr
 8000a52:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a56:	d105      	bne.n	8000a64 <__aeabi_d2iz+0x48>
 8000a58:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a5c:	bf08      	it	eq
 8000a5e:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a62:	4770      	bx	lr
 8000a64:	f04f 0000 	mov.w	r0, #0
 8000a68:	4770      	bx	lr
 8000a6a:	bf00      	nop

08000a6c <__aeabi_uldivmod>:
 8000a6c:	b953      	cbnz	r3, 8000a84 <__aeabi_uldivmod+0x18>
 8000a6e:	b94a      	cbnz	r2, 8000a84 <__aeabi_uldivmod+0x18>
 8000a70:	2900      	cmp	r1, #0
 8000a72:	bf08      	it	eq
 8000a74:	2800      	cmpeq	r0, #0
 8000a76:	bf1c      	itt	ne
 8000a78:	f04f 31ff 	movne.w	r1, #4294967295
 8000a7c:	f04f 30ff 	movne.w	r0, #4294967295
 8000a80:	f000 b96a 	b.w	8000d58 <__aeabi_idiv0>
 8000a84:	f1ad 0c08 	sub.w	ip, sp, #8
 8000a88:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000a8c:	f000 f806 	bl	8000a9c <__udivmoddi4>
 8000a90:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000a94:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000a98:	b004      	add	sp, #16
 8000a9a:	4770      	bx	lr

08000a9c <__udivmoddi4>:
 8000a9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000aa0:	9d08      	ldr	r5, [sp, #32]
 8000aa2:	460c      	mov	r4, r1
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	d14e      	bne.n	8000b46 <__udivmoddi4+0xaa>
 8000aa8:	4694      	mov	ip, r2
 8000aaa:	458c      	cmp	ip, r1
 8000aac:	4686      	mov	lr, r0
 8000aae:	fab2 f282 	clz	r2, r2
 8000ab2:	d962      	bls.n	8000b7a <__udivmoddi4+0xde>
 8000ab4:	b14a      	cbz	r2, 8000aca <__udivmoddi4+0x2e>
 8000ab6:	f1c2 0320 	rsb	r3, r2, #32
 8000aba:	4091      	lsls	r1, r2
 8000abc:	fa20 f303 	lsr.w	r3, r0, r3
 8000ac0:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ac4:	4319      	orrs	r1, r3
 8000ac6:	fa00 fe02 	lsl.w	lr, r0, r2
 8000aca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ace:	fa1f f68c 	uxth.w	r6, ip
 8000ad2:	fbb1 f4f7 	udiv	r4, r1, r7
 8000ad6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000ada:	fb07 1114 	mls	r1, r7, r4, r1
 8000ade:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ae2:	fb04 f106 	mul.w	r1, r4, r6
 8000ae6:	4299      	cmp	r1, r3
 8000ae8:	d90a      	bls.n	8000b00 <__udivmoddi4+0x64>
 8000aea:	eb1c 0303 	adds.w	r3, ip, r3
 8000aee:	f104 30ff 	add.w	r0, r4, #4294967295
 8000af2:	f080 8112 	bcs.w	8000d1a <__udivmoddi4+0x27e>
 8000af6:	4299      	cmp	r1, r3
 8000af8:	f240 810f 	bls.w	8000d1a <__udivmoddi4+0x27e>
 8000afc:	3c02      	subs	r4, #2
 8000afe:	4463      	add	r3, ip
 8000b00:	1a59      	subs	r1, r3, r1
 8000b02:	fa1f f38e 	uxth.w	r3, lr
 8000b06:	fbb1 f0f7 	udiv	r0, r1, r7
 8000b0a:	fb07 1110 	mls	r1, r7, r0, r1
 8000b0e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000b12:	fb00 f606 	mul.w	r6, r0, r6
 8000b16:	429e      	cmp	r6, r3
 8000b18:	d90a      	bls.n	8000b30 <__udivmoddi4+0x94>
 8000b1a:	eb1c 0303 	adds.w	r3, ip, r3
 8000b1e:	f100 31ff 	add.w	r1, r0, #4294967295
 8000b22:	f080 80fc 	bcs.w	8000d1e <__udivmoddi4+0x282>
 8000b26:	429e      	cmp	r6, r3
 8000b28:	f240 80f9 	bls.w	8000d1e <__udivmoddi4+0x282>
 8000b2c:	4463      	add	r3, ip
 8000b2e:	3802      	subs	r0, #2
 8000b30:	1b9b      	subs	r3, r3, r6
 8000b32:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000b36:	2100      	movs	r1, #0
 8000b38:	b11d      	cbz	r5, 8000b42 <__udivmoddi4+0xa6>
 8000b3a:	40d3      	lsrs	r3, r2
 8000b3c:	2200      	movs	r2, #0
 8000b3e:	e9c5 3200 	strd	r3, r2, [r5]
 8000b42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b46:	428b      	cmp	r3, r1
 8000b48:	d905      	bls.n	8000b56 <__udivmoddi4+0xba>
 8000b4a:	b10d      	cbz	r5, 8000b50 <__udivmoddi4+0xb4>
 8000b4c:	e9c5 0100 	strd	r0, r1, [r5]
 8000b50:	2100      	movs	r1, #0
 8000b52:	4608      	mov	r0, r1
 8000b54:	e7f5      	b.n	8000b42 <__udivmoddi4+0xa6>
 8000b56:	fab3 f183 	clz	r1, r3
 8000b5a:	2900      	cmp	r1, #0
 8000b5c:	d146      	bne.n	8000bec <__udivmoddi4+0x150>
 8000b5e:	42a3      	cmp	r3, r4
 8000b60:	d302      	bcc.n	8000b68 <__udivmoddi4+0xcc>
 8000b62:	4290      	cmp	r0, r2
 8000b64:	f0c0 80f0 	bcc.w	8000d48 <__udivmoddi4+0x2ac>
 8000b68:	1a86      	subs	r6, r0, r2
 8000b6a:	eb64 0303 	sbc.w	r3, r4, r3
 8000b6e:	2001      	movs	r0, #1
 8000b70:	2d00      	cmp	r5, #0
 8000b72:	d0e6      	beq.n	8000b42 <__udivmoddi4+0xa6>
 8000b74:	e9c5 6300 	strd	r6, r3, [r5]
 8000b78:	e7e3      	b.n	8000b42 <__udivmoddi4+0xa6>
 8000b7a:	2a00      	cmp	r2, #0
 8000b7c:	f040 8090 	bne.w	8000ca0 <__udivmoddi4+0x204>
 8000b80:	eba1 040c 	sub.w	r4, r1, ip
 8000b84:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000b88:	fa1f f78c 	uxth.w	r7, ip
 8000b8c:	2101      	movs	r1, #1
 8000b8e:	fbb4 f6f8 	udiv	r6, r4, r8
 8000b92:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000b96:	fb08 4416 	mls	r4, r8, r6, r4
 8000b9a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000b9e:	fb07 f006 	mul.w	r0, r7, r6
 8000ba2:	4298      	cmp	r0, r3
 8000ba4:	d908      	bls.n	8000bb8 <__udivmoddi4+0x11c>
 8000ba6:	eb1c 0303 	adds.w	r3, ip, r3
 8000baa:	f106 34ff 	add.w	r4, r6, #4294967295
 8000bae:	d202      	bcs.n	8000bb6 <__udivmoddi4+0x11a>
 8000bb0:	4298      	cmp	r0, r3
 8000bb2:	f200 80cd 	bhi.w	8000d50 <__udivmoddi4+0x2b4>
 8000bb6:	4626      	mov	r6, r4
 8000bb8:	1a1c      	subs	r4, r3, r0
 8000bba:	fa1f f38e 	uxth.w	r3, lr
 8000bbe:	fbb4 f0f8 	udiv	r0, r4, r8
 8000bc2:	fb08 4410 	mls	r4, r8, r0, r4
 8000bc6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000bca:	fb00 f707 	mul.w	r7, r0, r7
 8000bce:	429f      	cmp	r7, r3
 8000bd0:	d908      	bls.n	8000be4 <__udivmoddi4+0x148>
 8000bd2:	eb1c 0303 	adds.w	r3, ip, r3
 8000bd6:	f100 34ff 	add.w	r4, r0, #4294967295
 8000bda:	d202      	bcs.n	8000be2 <__udivmoddi4+0x146>
 8000bdc:	429f      	cmp	r7, r3
 8000bde:	f200 80b0 	bhi.w	8000d42 <__udivmoddi4+0x2a6>
 8000be2:	4620      	mov	r0, r4
 8000be4:	1bdb      	subs	r3, r3, r7
 8000be6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000bea:	e7a5      	b.n	8000b38 <__udivmoddi4+0x9c>
 8000bec:	f1c1 0620 	rsb	r6, r1, #32
 8000bf0:	408b      	lsls	r3, r1
 8000bf2:	fa22 f706 	lsr.w	r7, r2, r6
 8000bf6:	431f      	orrs	r7, r3
 8000bf8:	fa20 fc06 	lsr.w	ip, r0, r6
 8000bfc:	fa04 f301 	lsl.w	r3, r4, r1
 8000c00:	ea43 030c 	orr.w	r3, r3, ip
 8000c04:	40f4      	lsrs	r4, r6
 8000c06:	fa00 f801 	lsl.w	r8, r0, r1
 8000c0a:	0c38      	lsrs	r0, r7, #16
 8000c0c:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000c10:	fbb4 fef0 	udiv	lr, r4, r0
 8000c14:	fa1f fc87 	uxth.w	ip, r7
 8000c18:	fb00 441e 	mls	r4, r0, lr, r4
 8000c1c:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000c20:	fb0e f90c 	mul.w	r9, lr, ip
 8000c24:	45a1      	cmp	r9, r4
 8000c26:	fa02 f201 	lsl.w	r2, r2, r1
 8000c2a:	d90a      	bls.n	8000c42 <__udivmoddi4+0x1a6>
 8000c2c:	193c      	adds	r4, r7, r4
 8000c2e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000c32:	f080 8084 	bcs.w	8000d3e <__udivmoddi4+0x2a2>
 8000c36:	45a1      	cmp	r9, r4
 8000c38:	f240 8081 	bls.w	8000d3e <__udivmoddi4+0x2a2>
 8000c3c:	f1ae 0e02 	sub.w	lr, lr, #2
 8000c40:	443c      	add	r4, r7
 8000c42:	eba4 0409 	sub.w	r4, r4, r9
 8000c46:	fa1f f983 	uxth.w	r9, r3
 8000c4a:	fbb4 f3f0 	udiv	r3, r4, r0
 8000c4e:	fb00 4413 	mls	r4, r0, r3, r4
 8000c52:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000c56:	fb03 fc0c 	mul.w	ip, r3, ip
 8000c5a:	45a4      	cmp	ip, r4
 8000c5c:	d907      	bls.n	8000c6e <__udivmoddi4+0x1d2>
 8000c5e:	193c      	adds	r4, r7, r4
 8000c60:	f103 30ff 	add.w	r0, r3, #4294967295
 8000c64:	d267      	bcs.n	8000d36 <__udivmoddi4+0x29a>
 8000c66:	45a4      	cmp	ip, r4
 8000c68:	d965      	bls.n	8000d36 <__udivmoddi4+0x29a>
 8000c6a:	3b02      	subs	r3, #2
 8000c6c:	443c      	add	r4, r7
 8000c6e:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000c72:	fba0 9302 	umull	r9, r3, r0, r2
 8000c76:	eba4 040c 	sub.w	r4, r4, ip
 8000c7a:	429c      	cmp	r4, r3
 8000c7c:	46ce      	mov	lr, r9
 8000c7e:	469c      	mov	ip, r3
 8000c80:	d351      	bcc.n	8000d26 <__udivmoddi4+0x28a>
 8000c82:	d04e      	beq.n	8000d22 <__udivmoddi4+0x286>
 8000c84:	b155      	cbz	r5, 8000c9c <__udivmoddi4+0x200>
 8000c86:	ebb8 030e 	subs.w	r3, r8, lr
 8000c8a:	eb64 040c 	sbc.w	r4, r4, ip
 8000c8e:	fa04 f606 	lsl.w	r6, r4, r6
 8000c92:	40cb      	lsrs	r3, r1
 8000c94:	431e      	orrs	r6, r3
 8000c96:	40cc      	lsrs	r4, r1
 8000c98:	e9c5 6400 	strd	r6, r4, [r5]
 8000c9c:	2100      	movs	r1, #0
 8000c9e:	e750      	b.n	8000b42 <__udivmoddi4+0xa6>
 8000ca0:	f1c2 0320 	rsb	r3, r2, #32
 8000ca4:	fa20 f103 	lsr.w	r1, r0, r3
 8000ca8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000cac:	fa24 f303 	lsr.w	r3, r4, r3
 8000cb0:	4094      	lsls	r4, r2
 8000cb2:	430c      	orrs	r4, r1
 8000cb4:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cb8:	fa00 fe02 	lsl.w	lr, r0, r2
 8000cbc:	fa1f f78c 	uxth.w	r7, ip
 8000cc0:	fbb3 f0f8 	udiv	r0, r3, r8
 8000cc4:	fb08 3110 	mls	r1, r8, r0, r3
 8000cc8:	0c23      	lsrs	r3, r4, #16
 8000cca:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cce:	fb00 f107 	mul.w	r1, r0, r7
 8000cd2:	4299      	cmp	r1, r3
 8000cd4:	d908      	bls.n	8000ce8 <__udivmoddi4+0x24c>
 8000cd6:	eb1c 0303 	adds.w	r3, ip, r3
 8000cda:	f100 36ff 	add.w	r6, r0, #4294967295
 8000cde:	d22c      	bcs.n	8000d3a <__udivmoddi4+0x29e>
 8000ce0:	4299      	cmp	r1, r3
 8000ce2:	d92a      	bls.n	8000d3a <__udivmoddi4+0x29e>
 8000ce4:	3802      	subs	r0, #2
 8000ce6:	4463      	add	r3, ip
 8000ce8:	1a5b      	subs	r3, r3, r1
 8000cea:	b2a4      	uxth	r4, r4
 8000cec:	fbb3 f1f8 	udiv	r1, r3, r8
 8000cf0:	fb08 3311 	mls	r3, r8, r1, r3
 8000cf4:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000cf8:	fb01 f307 	mul.w	r3, r1, r7
 8000cfc:	42a3      	cmp	r3, r4
 8000cfe:	d908      	bls.n	8000d12 <__udivmoddi4+0x276>
 8000d00:	eb1c 0404 	adds.w	r4, ip, r4
 8000d04:	f101 36ff 	add.w	r6, r1, #4294967295
 8000d08:	d213      	bcs.n	8000d32 <__udivmoddi4+0x296>
 8000d0a:	42a3      	cmp	r3, r4
 8000d0c:	d911      	bls.n	8000d32 <__udivmoddi4+0x296>
 8000d0e:	3902      	subs	r1, #2
 8000d10:	4464      	add	r4, ip
 8000d12:	1ae4      	subs	r4, r4, r3
 8000d14:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000d18:	e739      	b.n	8000b8e <__udivmoddi4+0xf2>
 8000d1a:	4604      	mov	r4, r0
 8000d1c:	e6f0      	b.n	8000b00 <__udivmoddi4+0x64>
 8000d1e:	4608      	mov	r0, r1
 8000d20:	e706      	b.n	8000b30 <__udivmoddi4+0x94>
 8000d22:	45c8      	cmp	r8, r9
 8000d24:	d2ae      	bcs.n	8000c84 <__udivmoddi4+0x1e8>
 8000d26:	ebb9 0e02 	subs.w	lr, r9, r2
 8000d2a:	eb63 0c07 	sbc.w	ip, r3, r7
 8000d2e:	3801      	subs	r0, #1
 8000d30:	e7a8      	b.n	8000c84 <__udivmoddi4+0x1e8>
 8000d32:	4631      	mov	r1, r6
 8000d34:	e7ed      	b.n	8000d12 <__udivmoddi4+0x276>
 8000d36:	4603      	mov	r3, r0
 8000d38:	e799      	b.n	8000c6e <__udivmoddi4+0x1d2>
 8000d3a:	4630      	mov	r0, r6
 8000d3c:	e7d4      	b.n	8000ce8 <__udivmoddi4+0x24c>
 8000d3e:	46d6      	mov	lr, sl
 8000d40:	e77f      	b.n	8000c42 <__udivmoddi4+0x1a6>
 8000d42:	4463      	add	r3, ip
 8000d44:	3802      	subs	r0, #2
 8000d46:	e74d      	b.n	8000be4 <__udivmoddi4+0x148>
 8000d48:	4606      	mov	r6, r0
 8000d4a:	4623      	mov	r3, r4
 8000d4c:	4608      	mov	r0, r1
 8000d4e:	e70f      	b.n	8000b70 <__udivmoddi4+0xd4>
 8000d50:	3e02      	subs	r6, #2
 8000d52:	4463      	add	r3, ip
 8000d54:	e730      	b.n	8000bb8 <__udivmoddi4+0x11c>
 8000d56:	bf00      	nop

08000d58 <__aeabi_idiv0>:
 8000d58:	4770      	bx	lr
 8000d5a:	bf00      	nop

08000d5c <NEXTION_SendText>:
//Variable para indicar el final del mensaje
uint8_t Cmd_End[3]= {0xff,0xff,0xff};


// Función para actualizar objeto obj de la interfaz con un valor text
void NEXTION_SendText(char *obj, char *text, char *units) {
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	b088      	sub	sp, #32
 8000d60:	af02      	add	r7, sp, #8
 8000d62:	60f8      	str	r0, [r7, #12]
 8000d64:	60b9      	str	r1, [r7, #8]
 8000d66:	607a      	str	r2, [r7, #4]

	uint8_t *buffer = malloc(50 * sizeof(char)); // Reserva memoria para un buffer de 50 bytes
 8000d68:	2032      	movs	r0, #50	@ 0x32
 8000d6a:	f002 fa57 	bl	800321c <malloc>
 8000d6e:	4603      	mov	r3, r0
 8000d70:	613b      	str	r3, [r7, #16]

	int len = 0;
 8000d72:	2300      	movs	r3, #0
 8000d74:	617b      	str	r3, [r7, #20]

	if (units == NULL || units[0] == '\0') {
 8000d76:	687b      	ldr	r3, [r7, #4]
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	d003      	beq.n	8000d84 <NEXTION_SendText+0x28>
 8000d7c:	687b      	ldr	r3, [r7, #4]
 8000d7e:	781b      	ldrb	r3, [r3, #0]
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d107      	bne.n	8000d94 <NEXTION_SendText+0x38>
		len = sprintf((char *)buffer, "%s.txt=\"%s\"", obj, text);  // Agregar el texto al objeto
 8000d84:	68bb      	ldr	r3, [r7, #8]
 8000d86:	68fa      	ldr	r2, [r7, #12]
 8000d88:	4911      	ldr	r1, [pc, #68]	@ (8000dd0 <NEXTION_SendText+0x74>)
 8000d8a:	6938      	ldr	r0, [r7, #16]
 8000d8c:	f002 fc90 	bl	80036b0 <siprintf>
 8000d90:	6178      	str	r0, [r7, #20]
 8000d92:	e008      	b.n	8000da6 <NEXTION_SendText+0x4a>

	}else {
		len = sprintf((char *)buffer, "%s.txt=\"%s%s\"", obj, text, units); // Agrega las unidades al texto del objeto
 8000d94:	687b      	ldr	r3, [r7, #4]
 8000d96:	9300      	str	r3, [sp, #0]
 8000d98:	68bb      	ldr	r3, [r7, #8]
 8000d9a:	68fa      	ldr	r2, [r7, #12]
 8000d9c:	490d      	ldr	r1, [pc, #52]	@ (8000dd4 <NEXTION_SendText+0x78>)
 8000d9e:	6938      	ldr	r0, [r7, #16]
 8000da0:	f002 fc86 	bl	80036b0 <siprintf>
 8000da4:	6178      	str	r0, [r7, #20]
	}

    HAL_UART_Transmit(&huart1, buffer, len, 1000); // Transmite el buffer a través de UART
 8000da6:	697b      	ldr	r3, [r7, #20]
 8000da8:	b29a      	uxth	r2, r3
 8000daa:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000dae:	6939      	ldr	r1, [r7, #16]
 8000db0:	4809      	ldr	r0, [pc, #36]	@ (8000dd8 <NEXTION_SendText+0x7c>)
 8000db2:	f001 fe77 	bl	8002aa4 <HAL_UART_Transmit>
    HAL_UART_Transmit(&huart1, Cmd_End, 3, 100); // Transmite Cmd_End para indicar que finalizó el mensaje
 8000db6:	2364      	movs	r3, #100	@ 0x64
 8000db8:	2203      	movs	r2, #3
 8000dba:	4908      	ldr	r1, [pc, #32]	@ (8000ddc <NEXTION_SendText+0x80>)
 8000dbc:	4806      	ldr	r0, [pc, #24]	@ (8000dd8 <NEXTION_SendText+0x7c>)
 8000dbe:	f001 fe71 	bl	8002aa4 <HAL_UART_Transmit>
    free(buffer); // Libera la memoria asignada al buffer
 8000dc2:	6938      	ldr	r0, [r7, #16]
 8000dc4:	f002 fa32 	bl	800322c <free>
}
 8000dc8:	bf00      	nop
 8000dca:	3718      	adds	r7, #24
 8000dcc:	46bd      	mov	sp, r7
 8000dce:	bd80      	pop	{r7, pc}
 8000dd0:	0800476c 	.word	0x0800476c
 8000dd4:	08004778 	.word	0x08004778
 8000dd8:	200000a4 	.word	0x200000a4
 8000ddc:	2000001c 	.word	0x2000001c

08000de0 <NEXTION_SendNumber>:

// Actualiza valores de las barras de frenado, aceleración y revoluciones
void NEXTION_SendNumber(char *obj, int number) {
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b084      	sub	sp, #16
 8000de4:	af00      	add	r7, sp, #0
 8000de6:	6078      	str	r0, [r7, #4]
 8000de8:	6039      	str	r1, [r7, #0]
    uint8_t *buffer = malloc(50 * sizeof(char)); // Reserva memoria para un buffer de 50 bytes
 8000dea:	2032      	movs	r0, #50	@ 0x32
 8000dec:	f002 fa16 	bl	800321c <malloc>
 8000df0:	4603      	mov	r3, r0
 8000df2:	60fb      	str	r3, [r7, #12]
    int len = sprintf((char *)buffer, "%s.val=%d", obj, number); // Inicializa el buffer con el objeto y el valor a inicializar
 8000df4:	683b      	ldr	r3, [r7, #0]
 8000df6:	687a      	ldr	r2, [r7, #4]
 8000df8:	490c      	ldr	r1, [pc, #48]	@ (8000e2c <NEXTION_SendNumber+0x4c>)
 8000dfa:	68f8      	ldr	r0, [r7, #12]
 8000dfc:	f002 fc58 	bl	80036b0 <siprintf>
 8000e00:	60b8      	str	r0, [r7, #8]
    HAL_UART_Transmit(&huart1, buffer, len, 1000); // Transmite el buffer a través de UART
 8000e02:	68bb      	ldr	r3, [r7, #8]
 8000e04:	b29a      	uxth	r2, r3
 8000e06:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000e0a:	68f9      	ldr	r1, [r7, #12]
 8000e0c:	4808      	ldr	r0, [pc, #32]	@ (8000e30 <NEXTION_SendNumber+0x50>)
 8000e0e:	f001 fe49 	bl	8002aa4 <HAL_UART_Transmit>
    HAL_UART_Transmit(&huart1, Cmd_End, 3, 100); // Transmite Cmd_End para indicar que finalizó el mensaje
 8000e12:	2364      	movs	r3, #100	@ 0x64
 8000e14:	2203      	movs	r2, #3
 8000e16:	4907      	ldr	r1, [pc, #28]	@ (8000e34 <NEXTION_SendNumber+0x54>)
 8000e18:	4805      	ldr	r0, [pc, #20]	@ (8000e30 <NEXTION_SendNumber+0x50>)
 8000e1a:	f001 fe43 	bl	8002aa4 <HAL_UART_Transmit>
    free(buffer); // Libera la memoria asignada al buffer
 8000e1e:	68f8      	ldr	r0, [r7, #12]
 8000e20:	f002 fa04 	bl	800322c <free>
}
 8000e24:	bf00      	nop
 8000e26:	3710      	adds	r7, #16
 8000e28:	46bd      	mov	sp, r7
 8000e2a:	bd80      	pop	{r7, pc}
 8000e2c:	08004788 	.word	0x08004788
 8000e30:	200000a4 	.word	0x200000a4
 8000e34:	2000001c 	.word	0x2000001c

08000e38 <NEXTION_Send_Revs>:

// Función para actualizar los indicadores de revoluviones del dash
void NEXTION_Send_Revs(int val) {
 8000e38:	b580      	push	{r7, lr}
 8000e3a:	b086      	sub	sp, #24
 8000e3c:	af00      	add	r7, sp, #0
 8000e3e:	6078      	str	r0, [r7, #4]
    int resultado1 = 0;
 8000e40:	2300      	movs	r3, #0
 8000e42:	617b      	str	r3, [r7, #20]
    int resultado2 = 0;
 8000e44:	2300      	movs	r3, #0
 8000e46:	613b      	str	r3, [r7, #16]
    int resultado3 = 0;
 8000e48:	2300      	movs	r3, #0
 8000e4a:	60fb      	str	r3, [r7, #12]

    if (val >= 0 && val < 3000) {
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	2b00      	cmp	r3, #0
 8000e50:	db26      	blt.n	8000ea0 <NEXTION_Send_Revs+0x68>
 8000e52:	687b      	ldr	r3, [r7, #4]
 8000e54:	f640 32b7 	movw	r2, #2999	@ 0xbb7
 8000e58:	4293      	cmp	r3, r2
 8000e5a:	dc21      	bgt.n	8000ea0 <NEXTION_Send_Revs+0x68>
        resultado1 = val / 30.0; // Rango 0-3000
 8000e5c:	6878      	ldr	r0, [r7, #4]
 8000e5e:	f7ff fb61 	bl	8000524 <__aeabi_i2d>
 8000e62:	f04f 0200 	mov.w	r2, #0
 8000e66:	4b45      	ldr	r3, [pc, #276]	@ (8000f7c <NEXTION_Send_Revs+0x144>)
 8000e68:	f7ff fcf0 	bl	800084c <__aeabi_ddiv>
 8000e6c:	4602      	mov	r2, r0
 8000e6e:	460b      	mov	r3, r1
 8000e70:	4610      	mov	r0, r2
 8000e72:	4619      	mov	r1, r3
 8000e74:	f7ff fdd2 	bl	8000a1c <__aeabi_d2iz>
 8000e78:	4603      	mov	r3, r0
 8000e7a:	617b      	str	r3, [r7, #20]
        resultado1 = (resultado1 + 10) / 20 * 20;
 8000e7c:	697b      	ldr	r3, [r7, #20]
 8000e7e:	330a      	adds	r3, #10
 8000e80:	4a3f      	ldr	r2, [pc, #252]	@ (8000f80 <NEXTION_Send_Revs+0x148>)
 8000e82:	fb82 1203 	smull	r1, r2, r2, r3
 8000e86:	10d2      	asrs	r2, r2, #3
 8000e88:	17db      	asrs	r3, r3, #31
 8000e8a:	1ad2      	subs	r2, r2, r3
 8000e8c:	4613      	mov	r3, r2
 8000e8e:	009b      	lsls	r3, r3, #2
 8000e90:	4413      	add	r3, r2
 8000e92:	009b      	lsls	r3, r3, #2
 8000e94:	617b      	str	r3, [r7, #20]
        resultado2 = 0;
 8000e96:	2300      	movs	r3, #0
 8000e98:	613b      	str	r3, [r7, #16]
        resultado3 = 0;
 8000e9a:	2300      	movs	r3, #0
 8000e9c:	60fb      	str	r3, [r7, #12]
 8000e9e:	e05d      	b.n	8000f5c <NEXTION_Send_Revs+0x124>
    } else if (val >= 3000 && val < 6000) {
 8000ea0:	687b      	ldr	r3, [r7, #4]
 8000ea2:	f640 32b7 	movw	r2, #2999	@ 0xbb7
 8000ea6:	4293      	cmp	r3, r2
 8000ea8:	dd29      	ble.n	8000efe <NEXTION_Send_Revs+0xc6>
 8000eaa:	687b      	ldr	r3, [r7, #4]
 8000eac:	f241 726f 	movw	r2, #5999	@ 0x176f
 8000eb0:	4293      	cmp	r3, r2
 8000eb2:	dc24      	bgt.n	8000efe <NEXTION_Send_Revs+0xc6>
        resultado1 = 100;
 8000eb4:	2364      	movs	r3, #100	@ 0x64
 8000eb6:	617b      	str	r3, [r7, #20]
        resultado2 = (val - 3000) / 30.0; // Rango 3000-6000
 8000eb8:	687b      	ldr	r3, [r7, #4]
 8000eba:	f6a3 33b8 	subw	r3, r3, #3000	@ 0xbb8
 8000ebe:	4618      	mov	r0, r3
 8000ec0:	f7ff fb30 	bl	8000524 <__aeabi_i2d>
 8000ec4:	f04f 0200 	mov.w	r2, #0
 8000ec8:	4b2c      	ldr	r3, [pc, #176]	@ (8000f7c <NEXTION_Send_Revs+0x144>)
 8000eca:	f7ff fcbf 	bl	800084c <__aeabi_ddiv>
 8000ece:	4602      	mov	r2, r0
 8000ed0:	460b      	mov	r3, r1
 8000ed2:	4610      	mov	r0, r2
 8000ed4:	4619      	mov	r1, r3
 8000ed6:	f7ff fda1 	bl	8000a1c <__aeabi_d2iz>
 8000eda:	4603      	mov	r3, r0
 8000edc:	613b      	str	r3, [r7, #16]
        resultado2 = (resultado2 + 10) / 20 * 20;
 8000ede:	693b      	ldr	r3, [r7, #16]
 8000ee0:	330a      	adds	r3, #10
 8000ee2:	4a27      	ldr	r2, [pc, #156]	@ (8000f80 <NEXTION_Send_Revs+0x148>)
 8000ee4:	fb82 1203 	smull	r1, r2, r2, r3
 8000ee8:	10d2      	asrs	r2, r2, #3
 8000eea:	17db      	asrs	r3, r3, #31
 8000eec:	1ad2      	subs	r2, r2, r3
 8000eee:	4613      	mov	r3, r2
 8000ef0:	009b      	lsls	r3, r3, #2
 8000ef2:	4413      	add	r3, r2
 8000ef4:	009b      	lsls	r3, r3, #2
 8000ef6:	613b      	str	r3, [r7, #16]

        resultado3 = 0;
 8000ef8:	2300      	movs	r3, #0
 8000efa:	60fb      	str	r3, [r7, #12]
 8000efc:	e02e      	b.n	8000f5c <NEXTION_Send_Revs+0x124>
    } else if (val >= 6000 && val <= 9000) {
 8000efe:	687b      	ldr	r3, [r7, #4]
 8000f00:	f241 726f 	movw	r2, #5999	@ 0x176f
 8000f04:	4293      	cmp	r3, r2
 8000f06:	dd29      	ble.n	8000f5c <NEXTION_Send_Revs+0x124>
 8000f08:	687b      	ldr	r3, [r7, #4]
 8000f0a:	f242 3228 	movw	r2, #9000	@ 0x2328
 8000f0e:	4293      	cmp	r3, r2
 8000f10:	dc24      	bgt.n	8000f5c <NEXTION_Send_Revs+0x124>
        resultado1 = 100;
 8000f12:	2364      	movs	r3, #100	@ 0x64
 8000f14:	617b      	str	r3, [r7, #20]
        resultado2 = 100;
 8000f16:	2364      	movs	r3, #100	@ 0x64
 8000f18:	613b      	str	r3, [r7, #16]
        resultado3 = (val - 6000) / 30.0; // Rango 6000-9000
 8000f1a:	687b      	ldr	r3, [r7, #4]
 8000f1c:	f5a3 53bb 	sub.w	r3, r3, #5984	@ 0x1760
 8000f20:	3b10      	subs	r3, #16
 8000f22:	4618      	mov	r0, r3
 8000f24:	f7ff fafe 	bl	8000524 <__aeabi_i2d>
 8000f28:	f04f 0200 	mov.w	r2, #0
 8000f2c:	4b13      	ldr	r3, [pc, #76]	@ (8000f7c <NEXTION_Send_Revs+0x144>)
 8000f2e:	f7ff fc8d 	bl	800084c <__aeabi_ddiv>
 8000f32:	4602      	mov	r2, r0
 8000f34:	460b      	mov	r3, r1
 8000f36:	4610      	mov	r0, r2
 8000f38:	4619      	mov	r1, r3
 8000f3a:	f7ff fd6f 	bl	8000a1c <__aeabi_d2iz>
 8000f3e:	4603      	mov	r3, r0
 8000f40:	60fb      	str	r3, [r7, #12]
        resultado3 = (resultado3 + 10) / 20 * 20;
 8000f42:	68fb      	ldr	r3, [r7, #12]
 8000f44:	330a      	adds	r3, #10
 8000f46:	4a0e      	ldr	r2, [pc, #56]	@ (8000f80 <NEXTION_Send_Revs+0x148>)
 8000f48:	fb82 1203 	smull	r1, r2, r2, r3
 8000f4c:	10d2      	asrs	r2, r2, #3
 8000f4e:	17db      	asrs	r3, r3, #31
 8000f50:	1ad2      	subs	r2, r2, r3
 8000f52:	4613      	mov	r3, r2
 8000f54:	009b      	lsls	r3, r3, #2
 8000f56:	4413      	add	r3, r2
 8000f58:	009b      	lsls	r3, r3, #2
 8000f5a:	60fb      	str	r3, [r7, #12]

    }

    // Envía los resultados a las barras correspondientes
    NEXTION_SendNumber("led1", resultado1);
 8000f5c:	6979      	ldr	r1, [r7, #20]
 8000f5e:	4809      	ldr	r0, [pc, #36]	@ (8000f84 <NEXTION_Send_Revs+0x14c>)
 8000f60:	f7ff ff3e 	bl	8000de0 <NEXTION_SendNumber>
    NEXTION_SendNumber("led2", resultado2);
 8000f64:	6939      	ldr	r1, [r7, #16]
 8000f66:	4808      	ldr	r0, [pc, #32]	@ (8000f88 <NEXTION_Send_Revs+0x150>)
 8000f68:	f7ff ff3a 	bl	8000de0 <NEXTION_SendNumber>
    NEXTION_SendNumber("led3", resultado3);
 8000f6c:	68f9      	ldr	r1, [r7, #12]
 8000f6e:	4807      	ldr	r0, [pc, #28]	@ (8000f8c <NEXTION_Send_Revs+0x154>)
 8000f70:	f7ff ff36 	bl	8000de0 <NEXTION_SendNumber>
}
 8000f74:	bf00      	nop
 8000f76:	3718      	adds	r7, #24
 8000f78:	46bd      	mov	sp, r7
 8000f7a:	bd80      	pop	{r7, pc}
 8000f7c:	403e0000 	.word	0x403e0000
 8000f80:	66666667 	.word	0x66666667
 8000f84:	08004794 	.word	0x08004794
 8000f88:	0800479c 	.word	0x0800479c
 8000f8c:	080047a4 	.word	0x080047a4

08000f90 <NEXTION_SendPageChange>:

//Función para realizar la transicción de la landing view al dash
void NEXTION_SendPageChange(char *page_name) {
 8000f90:	b580      	push	{r7, lr}
 8000f92:	b084      	sub	sp, #16
 8000f94:	af00      	add	r7, sp, #0
 8000f96:	6078      	str	r0, [r7, #4]
    // Reserva memoria para un buffer de 50 bytes
    uint8_t *buffer = malloc(50 * sizeof(char));
 8000f98:	2032      	movs	r0, #50	@ 0x32
 8000f9a:	f002 f93f 	bl	800321c <malloc>
 8000f9e:	4603      	mov	r3, r0
 8000fa0:	60fb      	str	r3, [r7, #12]
    // Inicializa el buffer con la instrucción para cambiar de página
    int len = sprintf((char *)buffer, "page %s", page_name);
 8000fa2:	687a      	ldr	r2, [r7, #4]
 8000fa4:	490c      	ldr	r1, [pc, #48]	@ (8000fd8 <NEXTION_SendPageChange+0x48>)
 8000fa6:	68f8      	ldr	r0, [r7, #12]
 8000fa8:	f002 fb82 	bl	80036b0 <siprintf>
 8000fac:	60b8      	str	r0, [r7, #8]
    // Transmite el buffer a través de UART
    HAL_UART_Transmit(&huart1, buffer, len, 1000);
 8000fae:	68bb      	ldr	r3, [r7, #8]
 8000fb0:	b29a      	uxth	r2, r3
 8000fb2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000fb6:	68f9      	ldr	r1, [r7, #12]
 8000fb8:	4808      	ldr	r0, [pc, #32]	@ (8000fdc <NEXTION_SendPageChange+0x4c>)
 8000fba:	f001 fd73 	bl	8002aa4 <HAL_UART_Transmit>
    // Transmite un comando para indicar el final del mensaje
    HAL_UART_Transmit(&huart1, Cmd_End, 3, 100);
 8000fbe:	2364      	movs	r3, #100	@ 0x64
 8000fc0:	2203      	movs	r2, #3
 8000fc2:	4907      	ldr	r1, [pc, #28]	@ (8000fe0 <NEXTION_SendPageChange+0x50>)
 8000fc4:	4805      	ldr	r0, [pc, #20]	@ (8000fdc <NEXTION_SendPageChange+0x4c>)
 8000fc6:	f001 fd6d 	bl	8002aa4 <HAL_UART_Transmit>
    // Libera la memoria asignada al buffer
    free(buffer);
 8000fca:	68f8      	ldr	r0, [r7, #12]
 8000fcc:	f002 f92e 	bl	800322c <free>
}
 8000fd0:	bf00      	nop
 8000fd2:	3710      	adds	r7, #16
 8000fd4:	46bd      	mov	sp, r7
 8000fd6:	bd80      	pop	{r7, pc}
 8000fd8:	080047ac 	.word	0x080047ac
 8000fdc:	200000a4 	.word	0x200000a4
 8000fe0:	2000001c 	.word	0x2000001c

08000fe4 <NEXTION_Alert>:

//Función para actualizar todos los colores de los elementos a rojo por temperatura del motor o voltaje bateria elevados
void NEXTION_Alert(int color) {
 8000fe4:	b580      	push	{r7, lr}
 8000fe6:	b086      	sub	sp, #24
 8000fe8:	af00      	add	r7, sp, #0
 8000fea:	6078      	str	r0, [r7, #4]

	uint8_t *buffer = malloc(50 * sizeof(char));
 8000fec:	2032      	movs	r0, #50	@ 0x32
 8000fee:	f002 f915 	bl	800321c <malloc>
 8000ff2:	4603      	mov	r3, r0
 8000ff4:	613b      	str	r3, [r7, #16]

    for (int i = 0; i < 7; i++) {
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	617b      	str	r3, [r7, #20]
 8000ffa:	e01d      	b.n	8001038 <NEXTION_Alert+0x54>

        // Formatea y transmite el mensaje para el elemento actual
        int len = sprintf((char *)buffer, "%s.bco=%d", array_elementos_a_poner_rojo_por_alerta[i], color);
 8000ffc:	4a12      	ldr	r2, [pc, #72]	@ (8001048 <NEXTION_Alert+0x64>)
 8000ffe:	697b      	ldr	r3, [r7, #20]
 8001000:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8001004:	687b      	ldr	r3, [r7, #4]
 8001006:	4911      	ldr	r1, [pc, #68]	@ (800104c <NEXTION_Alert+0x68>)
 8001008:	6938      	ldr	r0, [r7, #16]
 800100a:	f002 fb51 	bl	80036b0 <siprintf>
 800100e:	60f8      	str	r0, [r7, #12]

        HAL_UART_Transmit(&huart1, buffer, len, 1000);
 8001010:	68fb      	ldr	r3, [r7, #12]
 8001012:	b29a      	uxth	r2, r3
 8001014:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001018:	6939      	ldr	r1, [r7, #16]
 800101a:	480d      	ldr	r0, [pc, #52]	@ (8001050 <NEXTION_Alert+0x6c>)
 800101c:	f001 fd42 	bl	8002aa4 <HAL_UART_Transmit>
        HAL_UART_Transmit(&huart1, Cmd_End, 3, 100);
 8001020:	2364      	movs	r3, #100	@ 0x64
 8001022:	2203      	movs	r2, #3
 8001024:	490b      	ldr	r1, [pc, #44]	@ (8001054 <NEXTION_Alert+0x70>)
 8001026:	480a      	ldr	r0, [pc, #40]	@ (8001050 <NEXTION_Alert+0x6c>)
 8001028:	f001 fd3c 	bl	8002aa4 <HAL_UART_Transmit>

        // Libera el buffer
        free(buffer);
 800102c:	6938      	ldr	r0, [r7, #16]
 800102e:	f002 f8fd 	bl	800322c <free>
    for (int i = 0; i < 7; i++) {
 8001032:	697b      	ldr	r3, [r7, #20]
 8001034:	3301      	adds	r3, #1
 8001036:	617b      	str	r3, [r7, #20]
 8001038:	697b      	ldr	r3, [r7, #20]
 800103a:	2b06      	cmp	r3, #6
 800103c:	ddde      	ble.n	8000ffc <NEXTION_Alert+0x18>
    }
}
 800103e:	bf00      	nop
 8001040:	bf00      	nop
 8001042:	3718      	adds	r7, #24
 8001044:	46bd      	mov	sp, r7
 8001046:	bd80      	pop	{r7, pc}
 8001048:	20000000 	.word	0x20000000
 800104c:	080047b4 	.word	0x080047b4
 8001050:	200000a4 	.word	0x200000a4
 8001054:	2000001c 	.word	0x2000001c

08001058 <NEXTION_estado_color>:

//Función para actualizar color estado de voltaje bateria y temperatura del motor
void NEXTION_estado_color(char *obj, int color) {
 8001058:	b580      	push	{r7, lr}
 800105a:	b084      	sub	sp, #16
 800105c:	af00      	add	r7, sp, #0
 800105e:	6078      	str	r0, [r7, #4]
 8001060:	6039      	str	r1, [r7, #0]

	uint8_t *buffer = malloc(50 * sizeof(char));
 8001062:	2032      	movs	r0, #50	@ 0x32
 8001064:	f002 f8da 	bl	800321c <malloc>
 8001068:	4603      	mov	r3, r0
 800106a:	60fb      	str	r3, [r7, #12]

	// Formatea y transmite el mensaje para el elemento actual
	int len = sprintf((char *)buffer, "%s.bco=%d", obj, color);
 800106c:	683b      	ldr	r3, [r7, #0]
 800106e:	687a      	ldr	r2, [r7, #4]
 8001070:	490c      	ldr	r1, [pc, #48]	@ (80010a4 <NEXTION_estado_color+0x4c>)
 8001072:	68f8      	ldr	r0, [r7, #12]
 8001074:	f002 fb1c 	bl	80036b0 <siprintf>
 8001078:	60b8      	str	r0, [r7, #8]

    HAL_UART_Transmit(&huart1, buffer, len, 1000);
 800107a:	68bb      	ldr	r3, [r7, #8]
 800107c:	b29a      	uxth	r2, r3
 800107e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001082:	68f9      	ldr	r1, [r7, #12]
 8001084:	4808      	ldr	r0, [pc, #32]	@ (80010a8 <NEXTION_estado_color+0x50>)
 8001086:	f001 fd0d 	bl	8002aa4 <HAL_UART_Transmit>
    HAL_UART_Transmit(&huart1, Cmd_End, 3, 100);
 800108a:	2364      	movs	r3, #100	@ 0x64
 800108c:	2203      	movs	r2, #3
 800108e:	4907      	ldr	r1, [pc, #28]	@ (80010ac <NEXTION_estado_color+0x54>)
 8001090:	4805      	ldr	r0, [pc, #20]	@ (80010a8 <NEXTION_estado_color+0x50>)
 8001092:	f001 fd07 	bl	8002aa4 <HAL_UART_Transmit>

    // Libera el buffer
    free(buffer);
 8001096:	68f8      	ldr	r0, [r7, #12]
 8001098:	f002 f8c8 	bl	800322c <free>
}
 800109c:	bf00      	nop
 800109e:	3710      	adds	r7, #16
 80010a0:	46bd      	mov	sp, r7
 80010a2:	bd80      	pop	{r7, pc}
 80010a4:	080047b4 	.word	0x080047b4
 80010a8:	200000a4 	.word	0x200000a4
 80010ac:	2000001c 	.word	0x2000001c

080010b0 <procesarReceivedCan>:



void procesarReceivedCan(uint16_t valor) {
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b086      	sub	sp, #24
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	4603      	mov	r3, r0
 80010b8:	80fb      	strh	r3, [r7, #6]
    // Generar un número aleatorio entre 0 y 9
    int random_value = rand() % 100;
 80010ba:	f002 f99b 	bl	80033f4 <rand>
 80010be:	4603      	mov	r3, r0
 80010c0:	4a8e      	ldr	r2, [pc, #568]	@ (80012fc <procesarReceivedCan+0x24c>)
 80010c2:	fb82 1203 	smull	r1, r2, r2, r3
 80010c6:	1151      	asrs	r1, r2, #5
 80010c8:	17da      	asrs	r2, r3, #31
 80010ca:	1a8a      	subs	r2, r1, r2
 80010cc:	2164      	movs	r1, #100	@ 0x64
 80010ce:	fb01 f202 	mul.w	r2, r1, r2
 80010d2:	1a9b      	subs	r3, r3, r2
 80010d4:	617b      	str	r3, [r7, #20]
    int rev = rand() % 9000;
 80010d6:	f002 f98d 	bl	80033f4 <rand>
 80010da:	4603      	mov	r3, r0
 80010dc:	4a88      	ldr	r2, [pc, #544]	@ (8001300 <procesarReceivedCan+0x250>)
 80010de:	fb82 1203 	smull	r1, r2, r2, r3
 80010e2:	1311      	asrs	r1, r2, #12
 80010e4:	17da      	asrs	r2, r3, #31
 80010e6:	1a8a      	subs	r2, r1, r2
 80010e8:	f242 3128 	movw	r1, #9000	@ 0x2328
 80010ec:	fb01 f202 	mul.w	r2, r1, r2
 80010f0:	1a9b      	subs	r3, r3, r2
 80010f2:	613b      	str	r3, [r7, #16]

    char text[4]; // Suponiendo que los valores aleatorios solo van de 0 a 9
    sprintf(text, "%d", random_value);
 80010f4:	f107 030c 	add.w	r3, r7, #12
 80010f8:	697a      	ldr	r2, [r7, #20]
 80010fa:	4982      	ldr	r1, [pc, #520]	@ (8001304 <procesarReceivedCan+0x254>)
 80010fc:	4618      	mov	r0, r3
 80010fe:	f002 fad7 	bl	80036b0 <siprintf>

    // Añadir un retraso de 10ms
    HAL_Delay(10);
 8001102:	200a      	movs	r0, #10
 8001104:	f000 fd3e 	bl	8001b84 <HAL_Delay>

    switch(valor) {
 8001108:	88fb      	ldrh	r3, [r7, #6]
 800110a:	f240 6255 	movw	r2, #1621	@ 0x655
 800110e:	4293      	cmp	r3, r2
 8001110:	f300 80ea 	bgt.w	80012e8 <procesarReceivedCan+0x238>
 8001114:	f5b3 6fc8 	cmp.w	r3, #1600	@ 0x640
 8001118:	da06      	bge.n	8001128 <procesarReceivedCan+0x78>
 800111a:	f5b3 7f88 	cmp.w	r3, #272	@ 0x110
 800111e:	d037      	beq.n	8001190 <procesarReceivedCan+0xe0>
 8001120:	f5b3 7f90 	cmp.w	r3, #288	@ 0x120
 8001124:	d03c      	beq.n	80011a0 <procesarReceivedCan+0xf0>

        case 0x648:
        	NEXTION_Send_Revs(rev);
            break;
        default:
            break;
 8001126:	e0df      	b.n	80012e8 <procesarReceivedCan+0x238>
    switch(valor) {
 8001128:	f5a3 63c8 	sub.w	r3, r3, #1600	@ 0x640
 800112c:	2b15      	cmp	r3, #21
 800112e:	f200 80db 	bhi.w	80012e8 <procesarReceivedCan+0x238>
 8001132:	a201      	add	r2, pc, #4	@ (adr r2, 8001138 <procesarReceivedCan+0x88>)
 8001134:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001138:	08001211 	.word	0x08001211
 800113c:	08001221 	.word	0x08001221
 8001140:	08001231 	.word	0x08001231
 8001144:	0800123b 	.word	0x0800123b
 8001148:	0800124b 	.word	0x0800124b
 800114c:	0800125b 	.word	0x0800125b
 8001150:	0800126b 	.word	0x0800126b
 8001154:	0800127b 	.word	0x0800127b
 8001158:	080012e1 	.word	0x080012e1
 800115c:	080012e9 	.word	0x080012e9
 8001160:	080012e9 	.word	0x080012e9
 8001164:	080012e9 	.word	0x080012e9
 8001168:	080012e9 	.word	0x080012e9
 800116c:	080012e9 	.word	0x080012e9
 8001170:	080012e9 	.word	0x080012e9
 8001174:	080012e9 	.word	0x080012e9
 8001178:	080012e9 	.word	0x080012e9
 800117c:	080012e9 	.word	0x080012e9
 8001180:	080012e9 	.word	0x080012e9
 8001184:	080012e9 	.word	0x080012e9
 8001188:	080012e9 	.word	0x080012e9
 800118c:	08001207 	.word	0x08001207
        	NEXTION_SendText("speed", text, NULL);
 8001190:	f107 030c 	add.w	r3, r7, #12
 8001194:	2200      	movs	r2, #0
 8001196:	4619      	mov	r1, r3
 8001198:	485b      	ldr	r0, [pc, #364]	@ (8001308 <procesarReceivedCan+0x258>)
 800119a:	f7ff fddf 	bl	8000d5c <NEXTION_SendText>
            break;
 800119e:	e0a8      	b.n	80012f2 <procesarReceivedCan+0x242>
        	NEXTION_SendText("voltage", text, "V");
 80011a0:	f107 030c 	add.w	r3, r7, #12
 80011a4:	4a59      	ldr	r2, [pc, #356]	@ (800130c <procesarReceivedCan+0x25c>)
 80011a6:	4619      	mov	r1, r3
 80011a8:	4859      	ldr	r0, [pc, #356]	@ (8001310 <procesarReceivedCan+0x260>)
 80011aa:	f7ff fdd7 	bl	8000d5c <NEXTION_SendText>
        	if (random_value > 0 && random_value <= 50) {
 80011ae:	697b      	ldr	r3, [r7, #20]
 80011b0:	2b00      	cmp	r3, #0
 80011b2:	dd0b      	ble.n	80011cc <procesarReceivedCan+0x11c>
 80011b4:	697b      	ldr	r3, [r7, #20]
 80011b6:	2b32      	cmp	r3, #50	@ 0x32
 80011b8:	dc08      	bgt.n	80011cc <procesarReceivedCan+0x11c>
        	    NEXTION_Alert(0); //black
 80011ba:	2000      	movs	r0, #0
 80011bc:	f7ff ff12 	bl	8000fe4 <NEXTION_Alert>
        	    NEXTION_estado_color("voltage", 36609);  //green
 80011c0:	f648 7101 	movw	r1, #36609	@ 0x8f01
 80011c4:	4852      	ldr	r0, [pc, #328]	@ (8001310 <procesarReceivedCan+0x260>)
 80011c6:	f7ff ff47 	bl	8001058 <NEXTION_estado_color>
 80011ca:	e01b      	b.n	8001204 <procesarReceivedCan+0x154>
        	} else if (random_value > 50 && random_value <= 80) {
 80011cc:	697b      	ldr	r3, [r7, #20]
 80011ce:	2b32      	cmp	r3, #50	@ 0x32
 80011d0:	dd0b      	ble.n	80011ea <procesarReceivedCan+0x13a>
 80011d2:	697b      	ldr	r3, [r7, #20]
 80011d4:	2b50      	cmp	r3, #80	@ 0x50
 80011d6:	dc08      	bgt.n	80011ea <procesarReceivedCan+0x13a>
        	    NEXTION_Alert(0); //black
 80011d8:	2000      	movs	r0, #0
 80011da:	f7ff ff03 	bl	8000fe4 <NEXTION_Alert>
        	    NEXTION_estado_color("voltage", 64520); //orange
 80011de:	f64f 4108 	movw	r1, #64520	@ 0xfc08
 80011e2:	484b      	ldr	r0, [pc, #300]	@ (8001310 <procesarReceivedCan+0x260>)
 80011e4:	f7ff ff38 	bl	8001058 <NEXTION_estado_color>
 80011e8:	e00c      	b.n	8001204 <procesarReceivedCan+0x154>
        	} else if (random_value > 91) {
 80011ea:	697b      	ldr	r3, [r7, #20]
 80011ec:	2b5b      	cmp	r3, #91	@ 0x5b
 80011ee:	dd7d      	ble.n	80012ec <procesarReceivedCan+0x23c>
        	    NEXTION_Alert(63488); // red
 80011f0:	f44f 4078 	mov.w	r0, #63488	@ 0xf800
 80011f4:	f7ff fef6 	bl	8000fe4 <NEXTION_Alert>
        	    NEXTION_estado_color("voltage", 63488); //red
 80011f8:	f44f 4178 	mov.w	r1, #63488	@ 0xf800
 80011fc:	4844      	ldr	r0, [pc, #272]	@ (8001310 <procesarReceivedCan+0x260>)
 80011fe:	f7ff ff2b 	bl	8001058 <NEXTION_estado_color>
            break;
 8001202:	e073      	b.n	80012ec <procesarReceivedCan+0x23c>
 8001204:	e072      	b.n	80012ec <procesarReceivedCan+0x23c>
        	NEXTION_SendNumber("brakePedal", random_value);
 8001206:	6979      	ldr	r1, [r7, #20]
 8001208:	4842      	ldr	r0, [pc, #264]	@ (8001314 <procesarReceivedCan+0x264>)
 800120a:	f7ff fde9 	bl	8000de0 <NEXTION_SendNumber>
            break;
 800120e:	e070      	b.n	80012f2 <procesarReceivedCan+0x242>
        	NEXTION_SendText("revValue", text, " RPM");
 8001210:	f107 030c 	add.w	r3, r7, #12
 8001214:	4a40      	ldr	r2, [pc, #256]	@ (8001318 <procesarReceivedCan+0x268>)
 8001216:	4619      	mov	r1, r3
 8001218:	4840      	ldr	r0, [pc, #256]	@ (800131c <procesarReceivedCan+0x26c>)
 800121a:	f7ff fd9f 	bl	8000d5c <NEXTION_SendText>
            break;
 800121e:	e068      	b.n	80012f2 <procesarReceivedCan+0x242>
        	NEXTION_SendText("gear", text, NULL);
 8001220:	f107 030c 	add.w	r3, r7, #12
 8001224:	2200      	movs	r2, #0
 8001226:	4619      	mov	r1, r3
 8001228:	483d      	ldr	r0, [pc, #244]	@ (8001320 <procesarReceivedCan+0x270>)
 800122a:	f7ff fd97 	bl	8000d5c <NEXTION_SendText>
            break;
 800122e:	e060      	b.n	80012f2 <procesarReceivedCan+0x242>
        	NEXTION_SendNumber("acePedal", random_value);
 8001230:	6979      	ldr	r1, [r7, #20]
 8001232:	483c      	ldr	r0, [pc, #240]	@ (8001324 <procesarReceivedCan+0x274>)
 8001234:	f7ff fdd4 	bl	8000de0 <NEXTION_SendNumber>
            break;
 8001238:	e05b      	b.n	80012f2 <procesarReceivedCan+0x242>
        	NEXTION_SendText("brake1", text, "\xB0");
 800123a:	f107 030c 	add.w	r3, r7, #12
 800123e:	4a3a      	ldr	r2, [pc, #232]	@ (8001328 <procesarReceivedCan+0x278>)
 8001240:	4619      	mov	r1, r3
 8001242:	483a      	ldr	r0, [pc, #232]	@ (800132c <procesarReceivedCan+0x27c>)
 8001244:	f7ff fd8a 	bl	8000d5c <NEXTION_SendText>
            break;
 8001248:	e053      	b.n	80012f2 <procesarReceivedCan+0x242>
        	NEXTION_SendText("brake2", text, "\xB0");
 800124a:	f107 030c 	add.w	r3, r7, #12
 800124e:	4a36      	ldr	r2, [pc, #216]	@ (8001328 <procesarReceivedCan+0x278>)
 8001250:	4619      	mov	r1, r3
 8001252:	4837      	ldr	r0, [pc, #220]	@ (8001330 <procesarReceivedCan+0x280>)
 8001254:	f7ff fd82 	bl	8000d5c <NEXTION_SendText>
            break;
 8001258:	e04b      	b.n	80012f2 <procesarReceivedCan+0x242>
        	NEXTION_SendText("brake3", text, "\xB0");
 800125a:	f107 030c 	add.w	r3, r7, #12
 800125e:	4a32      	ldr	r2, [pc, #200]	@ (8001328 <procesarReceivedCan+0x278>)
 8001260:	4619      	mov	r1, r3
 8001262:	4834      	ldr	r0, [pc, #208]	@ (8001334 <procesarReceivedCan+0x284>)
 8001264:	f7ff fd7a 	bl	8000d5c <NEXTION_SendText>
            break;
 8001268:	e043      	b.n	80012f2 <procesarReceivedCan+0x242>
        	NEXTION_SendText("brake4", text, "\xB0");
 800126a:	f107 030c 	add.w	r3, r7, #12
 800126e:	4a2e      	ldr	r2, [pc, #184]	@ (8001328 <procesarReceivedCan+0x278>)
 8001270:	4619      	mov	r1, r3
 8001272:	4831      	ldr	r0, [pc, #196]	@ (8001338 <procesarReceivedCan+0x288>)
 8001274:	f7ff fd72 	bl	8000d5c <NEXTION_SendText>
            break;
 8001278:	e03b      	b.n	80012f2 <procesarReceivedCan+0x242>
        	NEXTION_SendText("engineTemp", text, "\xB0");
 800127a:	f107 030c 	add.w	r3, r7, #12
 800127e:	4a2a      	ldr	r2, [pc, #168]	@ (8001328 <procesarReceivedCan+0x278>)
 8001280:	4619      	mov	r1, r3
 8001282:	482e      	ldr	r0, [pc, #184]	@ (800133c <procesarReceivedCan+0x28c>)
 8001284:	f7ff fd6a 	bl	8000d5c <NEXTION_SendText>
        	if (random_value > 0 && random_value <= 50) {
 8001288:	697b      	ldr	r3, [r7, #20]
 800128a:	2b00      	cmp	r3, #0
 800128c:	dd0b      	ble.n	80012a6 <procesarReceivedCan+0x1f6>
 800128e:	697b      	ldr	r3, [r7, #20]
 8001290:	2b32      	cmp	r3, #50	@ 0x32
 8001292:	dc08      	bgt.n	80012a6 <procesarReceivedCan+0x1f6>
        	    NEXTION_Alert(0); //black
 8001294:	2000      	movs	r0, #0
 8001296:	f7ff fea5 	bl	8000fe4 <NEXTION_Alert>
        	    NEXTION_estado_color("engineTemp", 36609);  //green
 800129a:	f648 7101 	movw	r1, #36609	@ 0x8f01
 800129e:	4827      	ldr	r0, [pc, #156]	@ (800133c <procesarReceivedCan+0x28c>)
 80012a0:	f7ff feda 	bl	8001058 <NEXTION_estado_color>
 80012a4:	e01b      	b.n	80012de <procesarReceivedCan+0x22e>
        	} else if (random_value > 50 && random_value <= 80) {
 80012a6:	697b      	ldr	r3, [r7, #20]
 80012a8:	2b32      	cmp	r3, #50	@ 0x32
 80012aa:	dd0b      	ble.n	80012c4 <procesarReceivedCan+0x214>
 80012ac:	697b      	ldr	r3, [r7, #20]
 80012ae:	2b50      	cmp	r3, #80	@ 0x50
 80012b0:	dc08      	bgt.n	80012c4 <procesarReceivedCan+0x214>
        	    NEXTION_Alert(0);
 80012b2:	2000      	movs	r0, #0
 80012b4:	f7ff fe96 	bl	8000fe4 <NEXTION_Alert>
        	    NEXTION_estado_color("engineTemp", 64520); //orange
 80012b8:	f64f 4108 	movw	r1, #64520	@ 0xfc08
 80012bc:	481f      	ldr	r0, [pc, #124]	@ (800133c <procesarReceivedCan+0x28c>)
 80012be:	f7ff fecb 	bl	8001058 <NEXTION_estado_color>
 80012c2:	e00c      	b.n	80012de <procesarReceivedCan+0x22e>
        	} else if (random_value > 91) {
 80012c4:	697b      	ldr	r3, [r7, #20]
 80012c6:	2b5b      	cmp	r3, #91	@ 0x5b
 80012c8:	dd12      	ble.n	80012f0 <procesarReceivedCan+0x240>
        	    NEXTION_Alert(63488); // red
 80012ca:	f44f 4078 	mov.w	r0, #63488	@ 0xf800
 80012ce:	f7ff fe89 	bl	8000fe4 <NEXTION_Alert>
        	    NEXTION_estado_color("engineTemp", 63488); // red
 80012d2:	f44f 4178 	mov.w	r1, #63488	@ 0xf800
 80012d6:	4819      	ldr	r0, [pc, #100]	@ (800133c <procesarReceivedCan+0x28c>)
 80012d8:	f7ff febe 	bl	8001058 <NEXTION_estado_color>
			break;
 80012dc:	e008      	b.n	80012f0 <procesarReceivedCan+0x240>
 80012de:	e007      	b.n	80012f0 <procesarReceivedCan+0x240>
        	NEXTION_Send_Revs(rev);
 80012e0:	6938      	ldr	r0, [r7, #16]
 80012e2:	f7ff fda9 	bl	8000e38 <NEXTION_Send_Revs>
            break;
 80012e6:	e004      	b.n	80012f2 <procesarReceivedCan+0x242>
            break;
 80012e8:	bf00      	nop
 80012ea:	e002      	b.n	80012f2 <procesarReceivedCan+0x242>
            break;
 80012ec:	bf00      	nop
 80012ee:	e000      	b.n	80012f2 <procesarReceivedCan+0x242>
			break;
 80012f0:	bf00      	nop
    }
}
 80012f2:	bf00      	nop
 80012f4:	3718      	adds	r7, #24
 80012f6:	46bd      	mov	sp, r7
 80012f8:	bd80      	pop	{r7, pc}
 80012fa:	bf00      	nop
 80012fc:	51eb851f 	.word	0x51eb851f
 8001300:	7482296b 	.word	0x7482296b
 8001304:	080047c0 	.word	0x080047c0
 8001308:	08004730 	.word	0x08004730
 800130c:	080047c4 	.word	0x080047c4
 8001310:	080047c8 	.word	0x080047c8
 8001314:	080047d0 	.word	0x080047d0
 8001318:	080047dc 	.word	0x080047dc
 800131c:	08004738 	.word	0x08004738
 8001320:	08004744 	.word	0x08004744
 8001324:	080047e4 	.word	0x080047e4
 8001328:	080047f0 	.word	0x080047f0
 800132c:	0800474c 	.word	0x0800474c
 8001330:	08004754 	.word	0x08004754
 8001334:	0800475c 	.word	0x0800475c
 8001338:	08004764 	.word	0x08004764
 800133c:	080047f4 	.word	0x080047f4

08001340 <main>:


int main(void)
{
 8001340:	b580      	push	{r7, lr}
 8001342:	b088      	sub	sp, #32
 8001344:	af00      	add	r7, sp, #0

  // Semilla para la generación de números aleatorios
  srand(time(NULL));
 8001346:	2000      	movs	r0, #0
 8001348:	f002 fab2 	bl	80038b0 <time>
 800134c:	4602      	mov	r2, r0
 800134e:	460b      	mov	r3, r1
 8001350:	4613      	mov	r3, r2
 8001352:	4618      	mov	r0, r3
 8001354:	f002 f820 	bl	8003398 <srand>

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001358:	f000 fba2 	bl	8001aa0 <HAL_Init>

  /* Configure the system clock */
  SystemClock_Config();
 800135c:	f000 f898 	bl	8001490 <SystemClock_Config>

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001360:	f000 f954 	bl	800160c <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8001364:	f000 f928 	bl	80015b8 <MX_USART2_UART_Init>
  MX_USART1_UART_Init();
 8001368:	f000 f8fc 	bl	8001564 <MX_USART1_UART_Init>

  NEXTION_SendPageChange("page0");
 800136c:	4843      	ldr	r0, [pc, #268]	@ (800147c <main+0x13c>)
 800136e:	f7ff fe0f 	bl	8000f90 <NEXTION_SendPageChange>
  HAL_Delay(2800);
 8001372:	f44f 602f 	mov.w	r0, #2800	@ 0xaf0
 8001376:	f000 fc05 	bl	8001b84 <HAL_Delay>

  NEXTION_SendPageChange("page1");
 800137a:	4841      	ldr	r0, [pc, #260]	@ (8001480 <main+0x140>)
 800137c:	f7ff fe08 	bl	8000f90 <NEXTION_SendPageChange>

  //Inicializar interfaz a negro (por si se quedó con estilos a rojo por NEXTION_Alert())
  NEXTION_Alert(0);
 8001380:	2000      	movs	r0, #0
 8001382:	f7ff fe2f 	bl	8000fe4 <NEXTION_Alert>

  /* Infinite loop */
  while (1)
  {

	HAL_Delay(400);
 8001386:	f44f 70c8 	mov.w	r0, #400	@ 0x190
 800138a:	f000 fbfb 	bl	8001b84 <HAL_Delay>
	int randoom_value = 2;
 800138e:	2302      	movs	r3, #2
 8001390:	61fb      	str	r3, [r7, #28]
	char text[20]; // Declarar variable donde alamcenar la conversión
	sprintf(text, "%d", randoom_value); //Inicializar la conversión
 8001392:	1d3b      	adds	r3, r7, #4
 8001394:	69fa      	ldr	r2, [r7, #28]
 8001396:	493b      	ldr	r1, [pc, #236]	@ (8001484 <main+0x144>)
 8001398:	4618      	mov	r0, r3
 800139a:	f002 f989 	bl	80036b0 <siprintf>

	// Generar valor aleatorio entre 0 y 9
	int random_value = rand() % 12;
 800139e:	f002 f829 	bl	80033f4 <rand>
 80013a2:	4602      	mov	r2, r0
 80013a4:	4b38      	ldr	r3, [pc, #224]	@ (8001488 <main+0x148>)
 80013a6:	fb83 1302 	smull	r1, r3, r3, r2
 80013aa:	1059      	asrs	r1, r3, #1
 80013ac:	17d3      	asrs	r3, r2, #31
 80013ae:	1ac9      	subs	r1, r1, r3
 80013b0:	460b      	mov	r3, r1
 80013b2:	005b      	lsls	r3, r3, #1
 80013b4:	440b      	add	r3, r1
 80013b6:	009b      	lsls	r3, r3, #2
 80013b8:	1ad3      	subs	r3, r2, r3
 80013ba:	61bb      	str	r3, [r7, #24]

	switch(random_value) {
 80013bc:	69bb      	ldr	r3, [r7, #24]
 80013be:	2b0b      	cmp	r3, #11
 80013c0:	d856      	bhi.n	8001470 <main+0x130>
 80013c2:	a201      	add	r2, pc, #4	@ (adr r2, 80013c8 <main+0x88>)
 80013c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80013c8:	080013f9 	.word	0x080013f9
 80013cc:	08001403 	.word	0x08001403
 80013d0:	0800140d 	.word	0x0800140d
 80013d4:	08001417 	.word	0x08001417
 80013d8:	08001421 	.word	0x08001421
 80013dc:	0800142b 	.word	0x0800142b
 80013e0:	08001435 	.word	0x08001435
 80013e4:	0800143f 	.word	0x0800143f
 80013e8:	08001449 	.word	0x08001449
 80013ec:	08001453 	.word	0x08001453
 80013f0:	0800145d 	.word	0x0800145d
 80013f4:	08001467 	.word	0x08001467
		case 0:
			procesarReceivedCan(0x110);
 80013f8:	f44f 7088 	mov.w	r0, #272	@ 0x110
 80013fc:	f7ff fe58 	bl	80010b0 <procesarReceivedCan>
			break;
 8001400:	e03a      	b.n	8001478 <main+0x138>
		case 1:
			procesarReceivedCan(0x120);
 8001402:	f44f 7090 	mov.w	r0, #288	@ 0x120
 8001406:	f7ff fe53 	bl	80010b0 <procesarReceivedCan>
			break;
 800140a:	e035      	b.n	8001478 <main+0x138>
		case 2:
			procesarReceivedCan(0x655);
 800140c:	f240 6055 	movw	r0, #1621	@ 0x655
 8001410:	f7ff fe4e 	bl	80010b0 <procesarReceivedCan>
			break;
 8001414:	e030      	b.n	8001478 <main+0x138>
		case 3:
			procesarReceivedCan(0x640);
 8001416:	f44f 60c8 	mov.w	r0, #1600	@ 0x640
 800141a:	f7ff fe49 	bl	80010b0 <procesarReceivedCan>
			break;
 800141e:	e02b      	b.n	8001478 <main+0x138>
		case 4:
			procesarReceivedCan(0x641);
 8001420:	f240 6041 	movw	r0, #1601	@ 0x641
 8001424:	f7ff fe44 	bl	80010b0 <procesarReceivedCan>
			break;
 8001428:	e026      	b.n	8001478 <main+0x138>
		case 5:
			procesarReceivedCan(0x642);
 800142a:	f240 6042 	movw	r0, #1602	@ 0x642
 800142e:	f7ff fe3f 	bl	80010b0 <procesarReceivedCan>
			break;
 8001432:	e021      	b.n	8001478 <main+0x138>
		case 6:
			procesarReceivedCan(0x643);
 8001434:	f240 6043 	movw	r0, #1603	@ 0x643
 8001438:	f7ff fe3a 	bl	80010b0 <procesarReceivedCan>
			break;
 800143c:	e01c      	b.n	8001478 <main+0x138>
		case 7:
			procesarReceivedCan(0x644);
 800143e:	f240 6044 	movw	r0, #1604	@ 0x644
 8001442:	f7ff fe35 	bl	80010b0 <procesarReceivedCan>
			break;
 8001446:	e017      	b.n	8001478 <main+0x138>
		case 8:
			procesarReceivedCan(0x645);
 8001448:	f240 6045 	movw	r0, #1605	@ 0x645
 800144c:	f7ff fe30 	bl	80010b0 <procesarReceivedCan>
			break;
 8001450:	e012      	b.n	8001478 <main+0x138>
		case 9:
			procesarReceivedCan(0x646);
 8001452:	f240 6046 	movw	r0, #1606	@ 0x646
 8001456:	f7ff fe2b 	bl	80010b0 <procesarReceivedCan>
			break;
 800145a:	e00d      	b.n	8001478 <main+0x138>
		case 10:
			procesarReceivedCan(0x647);
 800145c:	f240 6047 	movw	r0, #1607	@ 0x647
 8001460:	f7ff fe26 	bl	80010b0 <procesarReceivedCan>
			break;
 8001464:	e008      	b.n	8001478 <main+0x138>
		case 11:
			procesarReceivedCan(0x648);
 8001466:	f44f 60c9 	mov.w	r0, #1608	@ 0x648
 800146a:	f7ff fe21 	bl	80010b0 <procesarReceivedCan>
			break;
 800146e:	e003      	b.n	8001478 <main+0x138>
		default:
			printf("Número aleatorio fuera de rango\n");
 8001470:	4806      	ldr	r0, [pc, #24]	@ (800148c <main+0x14c>)
 8001472:	f002 f915 	bl	80036a0 <puts>
			break;
 8001476:	bf00      	nop
  {
 8001478:	e785      	b.n	8001386 <main+0x46>
 800147a:	bf00      	nop
 800147c:	08004800 	.word	0x08004800
 8001480:	08004808 	.word	0x08004808
 8001484:	080047c0 	.word	0x080047c0
 8001488:	2aaaaaab 	.word	0x2aaaaaab
 800148c:	08004810 	.word	0x08004810

08001490 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001490:	b580      	push	{r7, lr}
 8001492:	b094      	sub	sp, #80	@ 0x50
 8001494:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001496:	f107 0320 	add.w	r3, r7, #32
 800149a:	2230      	movs	r2, #48	@ 0x30
 800149c:	2100      	movs	r1, #0
 800149e:	4618      	mov	r0, r3
 80014a0:	f002 f9fe 	bl	80038a0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80014a4:	f107 030c 	add.w	r3, r7, #12
 80014a8:	2200      	movs	r2, #0
 80014aa:	601a      	str	r2, [r3, #0]
 80014ac:	605a      	str	r2, [r3, #4]
 80014ae:	609a      	str	r2, [r3, #8]
 80014b0:	60da      	str	r2, [r3, #12]
 80014b2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80014b4:	2300      	movs	r3, #0
 80014b6:	60bb      	str	r3, [r7, #8]
 80014b8:	4b28      	ldr	r3, [pc, #160]	@ (800155c <SystemClock_Config+0xcc>)
 80014ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80014bc:	4a27      	ldr	r2, [pc, #156]	@ (800155c <SystemClock_Config+0xcc>)
 80014be:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80014c2:	6413      	str	r3, [r2, #64]	@ 0x40
 80014c4:	4b25      	ldr	r3, [pc, #148]	@ (800155c <SystemClock_Config+0xcc>)
 80014c6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80014c8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80014cc:	60bb      	str	r3, [r7, #8]
 80014ce:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80014d0:	2300      	movs	r3, #0
 80014d2:	607b      	str	r3, [r7, #4]
 80014d4:	4b22      	ldr	r3, [pc, #136]	@ (8001560 <SystemClock_Config+0xd0>)
 80014d6:	681b      	ldr	r3, [r3, #0]
 80014d8:	4a21      	ldr	r2, [pc, #132]	@ (8001560 <SystemClock_Config+0xd0>)
 80014da:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80014de:	6013      	str	r3, [r2, #0]
 80014e0:	4b1f      	ldr	r3, [pc, #124]	@ (8001560 <SystemClock_Config+0xd0>)
 80014e2:	681b      	ldr	r3, [r3, #0]
 80014e4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80014e8:	607b      	str	r3, [r7, #4]
 80014ea:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80014ec:	2302      	movs	r3, #2
 80014ee:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80014f0:	2301      	movs	r3, #1
 80014f2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80014f4:	2310      	movs	r3, #16
 80014f6:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80014f8:	2302      	movs	r3, #2
 80014fa:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80014fc:	2300      	movs	r3, #0
 80014fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 16;
 8001500:	2310      	movs	r3, #16
 8001502:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001504:	f44f 73a8 	mov.w	r3, #336	@ 0x150
 8001508:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 800150a:	2304      	movs	r3, #4
 800150c:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800150e:	2304      	movs	r3, #4
 8001510:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001512:	f107 0320 	add.w	r3, r7, #32
 8001516:	4618      	mov	r0, r3
 8001518:	f000 fddc 	bl	80020d4 <HAL_RCC_OscConfig>
 800151c:	4603      	mov	r3, r0
 800151e:	2b00      	cmp	r3, #0
 8001520:	d001      	beq.n	8001526 <SystemClock_Config+0x96>
  {
    Error_Handler();
 8001522:	f000 f8e1 	bl	80016e8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001526:	230f      	movs	r3, #15
 8001528:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800152a:	2302      	movs	r3, #2
 800152c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800152e:	2300      	movs	r3, #0
 8001530:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001532:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001536:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001538:	2300      	movs	r3, #0
 800153a:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800153c:	f107 030c 	add.w	r3, r7, #12
 8001540:	2102      	movs	r1, #2
 8001542:	4618      	mov	r0, r3
 8001544:	f001 f83e 	bl	80025c4 <HAL_RCC_ClockConfig>
 8001548:	4603      	mov	r3, r0
 800154a:	2b00      	cmp	r3, #0
 800154c:	d001      	beq.n	8001552 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 800154e:	f000 f8cb 	bl	80016e8 <Error_Handler>
  }
}
 8001552:	bf00      	nop
 8001554:	3750      	adds	r7, #80	@ 0x50
 8001556:	46bd      	mov	sp, r7
 8001558:	bd80      	pop	{r7, pc}
 800155a:	bf00      	nop
 800155c:	40023800 	.word	0x40023800
 8001560:	40007000 	.word	0x40007000

08001564 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001564:	b580      	push	{r7, lr}
 8001566:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001568:	4b11      	ldr	r3, [pc, #68]	@ (80015b0 <MX_USART1_UART_Init+0x4c>)
 800156a:	4a12      	ldr	r2, [pc, #72]	@ (80015b4 <MX_USART1_UART_Init+0x50>)
 800156c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 800156e:	4b10      	ldr	r3, [pc, #64]	@ (80015b0 <MX_USART1_UART_Init+0x4c>)
 8001570:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8001574:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001576:	4b0e      	ldr	r3, [pc, #56]	@ (80015b0 <MX_USART1_UART_Init+0x4c>)
 8001578:	2200      	movs	r2, #0
 800157a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800157c:	4b0c      	ldr	r3, [pc, #48]	@ (80015b0 <MX_USART1_UART_Init+0x4c>)
 800157e:	2200      	movs	r2, #0
 8001580:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001582:	4b0b      	ldr	r3, [pc, #44]	@ (80015b0 <MX_USART1_UART_Init+0x4c>)
 8001584:	2200      	movs	r2, #0
 8001586:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001588:	4b09      	ldr	r3, [pc, #36]	@ (80015b0 <MX_USART1_UART_Init+0x4c>)
 800158a:	220c      	movs	r2, #12
 800158c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800158e:	4b08      	ldr	r3, [pc, #32]	@ (80015b0 <MX_USART1_UART_Init+0x4c>)
 8001590:	2200      	movs	r2, #0
 8001592:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001594:	4b06      	ldr	r3, [pc, #24]	@ (80015b0 <MX_USART1_UART_Init+0x4c>)
 8001596:	2200      	movs	r2, #0
 8001598:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800159a:	4805      	ldr	r0, [pc, #20]	@ (80015b0 <MX_USART1_UART_Init+0x4c>)
 800159c:	f001 fa32 	bl	8002a04 <HAL_UART_Init>
 80015a0:	4603      	mov	r3, r0
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	d001      	beq.n	80015aa <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80015a6:	f000 f89f 	bl	80016e8 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80015aa:	bf00      	nop
 80015ac:	bd80      	pop	{r7, pc}
 80015ae:	bf00      	nop
 80015b0:	200000a4 	.word	0x200000a4
 80015b4:	40011000 	.word	0x40011000

080015b8 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80015b8:	b580      	push	{r7, lr}
 80015ba:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80015bc:	4b11      	ldr	r3, [pc, #68]	@ (8001604 <MX_USART2_UART_Init+0x4c>)
 80015be:	4a12      	ldr	r2, [pc, #72]	@ (8001608 <MX_USART2_UART_Init+0x50>)
 80015c0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80015c2:	4b10      	ldr	r3, [pc, #64]	@ (8001604 <MX_USART2_UART_Init+0x4c>)
 80015c4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80015c8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80015ca:	4b0e      	ldr	r3, [pc, #56]	@ (8001604 <MX_USART2_UART_Init+0x4c>)
 80015cc:	2200      	movs	r2, #0
 80015ce:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80015d0:	4b0c      	ldr	r3, [pc, #48]	@ (8001604 <MX_USART2_UART_Init+0x4c>)
 80015d2:	2200      	movs	r2, #0
 80015d4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80015d6:	4b0b      	ldr	r3, [pc, #44]	@ (8001604 <MX_USART2_UART_Init+0x4c>)
 80015d8:	2200      	movs	r2, #0
 80015da:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80015dc:	4b09      	ldr	r3, [pc, #36]	@ (8001604 <MX_USART2_UART_Init+0x4c>)
 80015de:	220c      	movs	r2, #12
 80015e0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80015e2:	4b08      	ldr	r3, [pc, #32]	@ (8001604 <MX_USART2_UART_Init+0x4c>)
 80015e4:	2200      	movs	r2, #0
 80015e6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80015e8:	4b06      	ldr	r3, [pc, #24]	@ (8001604 <MX_USART2_UART_Init+0x4c>)
 80015ea:	2200      	movs	r2, #0
 80015ec:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80015ee:	4805      	ldr	r0, [pc, #20]	@ (8001604 <MX_USART2_UART_Init+0x4c>)
 80015f0:	f001 fa08 	bl	8002a04 <HAL_UART_Init>
 80015f4:	4603      	mov	r3, r0
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	d001      	beq.n	80015fe <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80015fa:	f000 f875 	bl	80016e8 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80015fe:	bf00      	nop
 8001600:	bd80      	pop	{r7, pc}
 8001602:	bf00      	nop
 8001604:	200000ec 	.word	0x200000ec
 8001608:	40004400 	.word	0x40004400

0800160c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800160c:	b580      	push	{r7, lr}
 800160e:	b08a      	sub	sp, #40	@ 0x28
 8001610:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001612:	f107 0314 	add.w	r3, r7, #20
 8001616:	2200      	movs	r2, #0
 8001618:	601a      	str	r2, [r3, #0]
 800161a:	605a      	str	r2, [r3, #4]
 800161c:	609a      	str	r2, [r3, #8]
 800161e:	60da      	str	r2, [r3, #12]
 8001620:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001622:	2300      	movs	r3, #0
 8001624:	613b      	str	r3, [r7, #16]
 8001626:	4b2d      	ldr	r3, [pc, #180]	@ (80016dc <MX_GPIO_Init+0xd0>)
 8001628:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800162a:	4a2c      	ldr	r2, [pc, #176]	@ (80016dc <MX_GPIO_Init+0xd0>)
 800162c:	f043 0304 	orr.w	r3, r3, #4
 8001630:	6313      	str	r3, [r2, #48]	@ 0x30
 8001632:	4b2a      	ldr	r3, [pc, #168]	@ (80016dc <MX_GPIO_Init+0xd0>)
 8001634:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001636:	f003 0304 	and.w	r3, r3, #4
 800163a:	613b      	str	r3, [r7, #16]
 800163c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800163e:	2300      	movs	r3, #0
 8001640:	60fb      	str	r3, [r7, #12]
 8001642:	4b26      	ldr	r3, [pc, #152]	@ (80016dc <MX_GPIO_Init+0xd0>)
 8001644:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001646:	4a25      	ldr	r2, [pc, #148]	@ (80016dc <MX_GPIO_Init+0xd0>)
 8001648:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800164c:	6313      	str	r3, [r2, #48]	@ 0x30
 800164e:	4b23      	ldr	r3, [pc, #140]	@ (80016dc <MX_GPIO_Init+0xd0>)
 8001650:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001652:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001656:	60fb      	str	r3, [r7, #12]
 8001658:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800165a:	2300      	movs	r3, #0
 800165c:	60bb      	str	r3, [r7, #8]
 800165e:	4b1f      	ldr	r3, [pc, #124]	@ (80016dc <MX_GPIO_Init+0xd0>)
 8001660:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001662:	4a1e      	ldr	r2, [pc, #120]	@ (80016dc <MX_GPIO_Init+0xd0>)
 8001664:	f043 0301 	orr.w	r3, r3, #1
 8001668:	6313      	str	r3, [r2, #48]	@ 0x30
 800166a:	4b1c      	ldr	r3, [pc, #112]	@ (80016dc <MX_GPIO_Init+0xd0>)
 800166c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800166e:	f003 0301 	and.w	r3, r3, #1
 8001672:	60bb      	str	r3, [r7, #8]
 8001674:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001676:	2300      	movs	r3, #0
 8001678:	607b      	str	r3, [r7, #4]
 800167a:	4b18      	ldr	r3, [pc, #96]	@ (80016dc <MX_GPIO_Init+0xd0>)
 800167c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800167e:	4a17      	ldr	r2, [pc, #92]	@ (80016dc <MX_GPIO_Init+0xd0>)
 8001680:	f043 0302 	orr.w	r3, r3, #2
 8001684:	6313      	str	r3, [r2, #48]	@ 0x30
 8001686:	4b15      	ldr	r3, [pc, #84]	@ (80016dc <MX_GPIO_Init+0xd0>)
 8001688:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800168a:	f003 0302 	and.w	r3, r3, #2
 800168e:	607b      	str	r3, [r7, #4]
 8001690:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8001692:	2200      	movs	r2, #0
 8001694:	2120      	movs	r1, #32
 8001696:	4812      	ldr	r0, [pc, #72]	@ (80016e0 <MX_GPIO_Init+0xd4>)
 8001698:	f000 fd02 	bl	80020a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 800169c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80016a0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80016a2:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80016a6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016a8:	2300      	movs	r3, #0
 80016aa:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80016ac:	f107 0314 	add.w	r3, r7, #20
 80016b0:	4619      	mov	r1, r3
 80016b2:	480c      	ldr	r0, [pc, #48]	@ (80016e4 <MX_GPIO_Init+0xd8>)
 80016b4:	f000 fb70 	bl	8001d98 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 80016b8:	2320      	movs	r3, #32
 80016ba:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016bc:	2301      	movs	r3, #1
 80016be:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016c0:	2300      	movs	r3, #0
 80016c2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016c4:	2300      	movs	r3, #0
 80016c6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 80016c8:	f107 0314 	add.w	r3, r7, #20
 80016cc:	4619      	mov	r1, r3
 80016ce:	4804      	ldr	r0, [pc, #16]	@ (80016e0 <MX_GPIO_Init+0xd4>)
 80016d0:	f000 fb62 	bl	8001d98 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80016d4:	bf00      	nop
 80016d6:	3728      	adds	r7, #40	@ 0x28
 80016d8:	46bd      	mov	sp, r7
 80016da:	bd80      	pop	{r7, pc}
 80016dc:	40023800 	.word	0x40023800
 80016e0:	40020000 	.word	0x40020000
 80016e4:	40020800 	.word	0x40020800

080016e8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80016e8:	b480      	push	{r7}
 80016ea:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80016ec:	b672      	cpsid	i
}
 80016ee:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80016f0:	bf00      	nop
 80016f2:	e7fd      	b.n	80016f0 <Error_Handler+0x8>

080016f4 <HAL_MspInit>:
 80016f4:	b580      	push	{r7, lr}
 80016f6:	b082      	sub	sp, #8
 80016f8:	af00      	add	r7, sp, #0
 80016fa:	2300      	movs	r3, #0
 80016fc:	607b      	str	r3, [r7, #4]
 80016fe:	4b10      	ldr	r3, [pc, #64]	@ (8001740 <HAL_MspInit+0x4c>)
 8001700:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001702:	4a0f      	ldr	r2, [pc, #60]	@ (8001740 <HAL_MspInit+0x4c>)
 8001704:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001708:	6453      	str	r3, [r2, #68]	@ 0x44
 800170a:	4b0d      	ldr	r3, [pc, #52]	@ (8001740 <HAL_MspInit+0x4c>)
 800170c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800170e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001712:	607b      	str	r3, [r7, #4]
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	2300      	movs	r3, #0
 8001718:	603b      	str	r3, [r7, #0]
 800171a:	4b09      	ldr	r3, [pc, #36]	@ (8001740 <HAL_MspInit+0x4c>)
 800171c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800171e:	4a08      	ldr	r2, [pc, #32]	@ (8001740 <HAL_MspInit+0x4c>)
 8001720:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001724:	6413      	str	r3, [r2, #64]	@ 0x40
 8001726:	4b06      	ldr	r3, [pc, #24]	@ (8001740 <HAL_MspInit+0x4c>)
 8001728:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800172a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800172e:	603b      	str	r3, [r7, #0]
 8001730:	683b      	ldr	r3, [r7, #0]
 8001732:	2007      	movs	r0, #7
 8001734:	f000 fafc 	bl	8001d30 <HAL_NVIC_SetPriorityGrouping>
 8001738:	bf00      	nop
 800173a:	3708      	adds	r7, #8
 800173c:	46bd      	mov	sp, r7
 800173e:	bd80      	pop	{r7, pc}
 8001740:	40023800 	.word	0x40023800

08001744 <HAL_UART_MspInit>:
 8001744:	b580      	push	{r7, lr}
 8001746:	b08c      	sub	sp, #48	@ 0x30
 8001748:	af00      	add	r7, sp, #0
 800174a:	6078      	str	r0, [r7, #4]
 800174c:	f107 031c 	add.w	r3, r7, #28
 8001750:	2200      	movs	r2, #0
 8001752:	601a      	str	r2, [r3, #0]
 8001754:	605a      	str	r2, [r3, #4]
 8001756:	609a      	str	r2, [r3, #8]
 8001758:	60da      	str	r2, [r3, #12]
 800175a:	611a      	str	r2, [r3, #16]
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	681b      	ldr	r3, [r3, #0]
 8001760:	4a32      	ldr	r2, [pc, #200]	@ (800182c <HAL_UART_MspInit+0xe8>)
 8001762:	4293      	cmp	r3, r2
 8001764:	d12d      	bne.n	80017c2 <HAL_UART_MspInit+0x7e>
 8001766:	2300      	movs	r3, #0
 8001768:	61bb      	str	r3, [r7, #24]
 800176a:	4b31      	ldr	r3, [pc, #196]	@ (8001830 <HAL_UART_MspInit+0xec>)
 800176c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800176e:	4a30      	ldr	r2, [pc, #192]	@ (8001830 <HAL_UART_MspInit+0xec>)
 8001770:	f043 0310 	orr.w	r3, r3, #16
 8001774:	6453      	str	r3, [r2, #68]	@ 0x44
 8001776:	4b2e      	ldr	r3, [pc, #184]	@ (8001830 <HAL_UART_MspInit+0xec>)
 8001778:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800177a:	f003 0310 	and.w	r3, r3, #16
 800177e:	61bb      	str	r3, [r7, #24]
 8001780:	69bb      	ldr	r3, [r7, #24]
 8001782:	2300      	movs	r3, #0
 8001784:	617b      	str	r3, [r7, #20]
 8001786:	4b2a      	ldr	r3, [pc, #168]	@ (8001830 <HAL_UART_MspInit+0xec>)
 8001788:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800178a:	4a29      	ldr	r2, [pc, #164]	@ (8001830 <HAL_UART_MspInit+0xec>)
 800178c:	f043 0301 	orr.w	r3, r3, #1
 8001790:	6313      	str	r3, [r2, #48]	@ 0x30
 8001792:	4b27      	ldr	r3, [pc, #156]	@ (8001830 <HAL_UART_MspInit+0xec>)
 8001794:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001796:	f003 0301 	and.w	r3, r3, #1
 800179a:	617b      	str	r3, [r7, #20]
 800179c:	697b      	ldr	r3, [r7, #20]
 800179e:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80017a2:	61fb      	str	r3, [r7, #28]
 80017a4:	2302      	movs	r3, #2
 80017a6:	623b      	str	r3, [r7, #32]
 80017a8:	2300      	movs	r3, #0
 80017aa:	627b      	str	r3, [r7, #36]	@ 0x24
 80017ac:	2303      	movs	r3, #3
 80017ae:	62bb      	str	r3, [r7, #40]	@ 0x28
 80017b0:	2307      	movs	r3, #7
 80017b2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80017b4:	f107 031c 	add.w	r3, r7, #28
 80017b8:	4619      	mov	r1, r3
 80017ba:	481e      	ldr	r0, [pc, #120]	@ (8001834 <HAL_UART_MspInit+0xf0>)
 80017bc:	f000 faec 	bl	8001d98 <HAL_GPIO_Init>
 80017c0:	e030      	b.n	8001824 <HAL_UART_MspInit+0xe0>
 80017c2:	687b      	ldr	r3, [r7, #4]
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	4a1c      	ldr	r2, [pc, #112]	@ (8001838 <HAL_UART_MspInit+0xf4>)
 80017c8:	4293      	cmp	r3, r2
 80017ca:	d12b      	bne.n	8001824 <HAL_UART_MspInit+0xe0>
 80017cc:	2300      	movs	r3, #0
 80017ce:	613b      	str	r3, [r7, #16]
 80017d0:	4b17      	ldr	r3, [pc, #92]	@ (8001830 <HAL_UART_MspInit+0xec>)
 80017d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017d4:	4a16      	ldr	r2, [pc, #88]	@ (8001830 <HAL_UART_MspInit+0xec>)
 80017d6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80017da:	6413      	str	r3, [r2, #64]	@ 0x40
 80017dc:	4b14      	ldr	r3, [pc, #80]	@ (8001830 <HAL_UART_MspInit+0xec>)
 80017de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80017e0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80017e4:	613b      	str	r3, [r7, #16]
 80017e6:	693b      	ldr	r3, [r7, #16]
 80017e8:	2300      	movs	r3, #0
 80017ea:	60fb      	str	r3, [r7, #12]
 80017ec:	4b10      	ldr	r3, [pc, #64]	@ (8001830 <HAL_UART_MspInit+0xec>)
 80017ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017f0:	4a0f      	ldr	r2, [pc, #60]	@ (8001830 <HAL_UART_MspInit+0xec>)
 80017f2:	f043 0301 	orr.w	r3, r3, #1
 80017f6:	6313      	str	r3, [r2, #48]	@ 0x30
 80017f8:	4b0d      	ldr	r3, [pc, #52]	@ (8001830 <HAL_UART_MspInit+0xec>)
 80017fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80017fc:	f003 0301 	and.w	r3, r3, #1
 8001800:	60fb      	str	r3, [r7, #12]
 8001802:	68fb      	ldr	r3, [r7, #12]
 8001804:	230c      	movs	r3, #12
 8001806:	61fb      	str	r3, [r7, #28]
 8001808:	2302      	movs	r3, #2
 800180a:	623b      	str	r3, [r7, #32]
 800180c:	2300      	movs	r3, #0
 800180e:	627b      	str	r3, [r7, #36]	@ 0x24
 8001810:	2303      	movs	r3, #3
 8001812:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001814:	2307      	movs	r3, #7
 8001816:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001818:	f107 031c 	add.w	r3, r7, #28
 800181c:	4619      	mov	r1, r3
 800181e:	4805      	ldr	r0, [pc, #20]	@ (8001834 <HAL_UART_MspInit+0xf0>)
 8001820:	f000 faba 	bl	8001d98 <HAL_GPIO_Init>
 8001824:	bf00      	nop
 8001826:	3730      	adds	r7, #48	@ 0x30
 8001828:	46bd      	mov	sp, r7
 800182a:	bd80      	pop	{r7, pc}
 800182c:	40011000 	.word	0x40011000
 8001830:	40023800 	.word	0x40023800
 8001834:	40020000 	.word	0x40020000
 8001838:	40004400 	.word	0x40004400

0800183c <NMI_Handler>:
 800183c:	b480      	push	{r7}
 800183e:	af00      	add	r7, sp, #0
 8001840:	bf00      	nop
 8001842:	e7fd      	b.n	8001840 <NMI_Handler+0x4>

08001844 <HardFault_Handler>:
 8001844:	b480      	push	{r7}
 8001846:	af00      	add	r7, sp, #0
 8001848:	bf00      	nop
 800184a:	e7fd      	b.n	8001848 <HardFault_Handler+0x4>

0800184c <MemManage_Handler>:
 800184c:	b480      	push	{r7}
 800184e:	af00      	add	r7, sp, #0
 8001850:	bf00      	nop
 8001852:	e7fd      	b.n	8001850 <MemManage_Handler+0x4>

08001854 <BusFault_Handler>:
 8001854:	b480      	push	{r7}
 8001856:	af00      	add	r7, sp, #0
 8001858:	bf00      	nop
 800185a:	e7fd      	b.n	8001858 <BusFault_Handler+0x4>

0800185c <UsageFault_Handler>:
 800185c:	b480      	push	{r7}
 800185e:	af00      	add	r7, sp, #0
 8001860:	bf00      	nop
 8001862:	e7fd      	b.n	8001860 <UsageFault_Handler+0x4>

08001864 <SVC_Handler>:
 8001864:	b480      	push	{r7}
 8001866:	af00      	add	r7, sp, #0
 8001868:	bf00      	nop
 800186a:	46bd      	mov	sp, r7
 800186c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001870:	4770      	bx	lr

08001872 <DebugMon_Handler>:
 8001872:	b480      	push	{r7}
 8001874:	af00      	add	r7, sp, #0
 8001876:	bf00      	nop
 8001878:	46bd      	mov	sp, r7
 800187a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800187e:	4770      	bx	lr

08001880 <PendSV_Handler>:
 8001880:	b480      	push	{r7}
 8001882:	af00      	add	r7, sp, #0
 8001884:	bf00      	nop
 8001886:	46bd      	mov	sp, r7
 8001888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800188c:	4770      	bx	lr

0800188e <SysTick_Handler>:
 800188e:	b580      	push	{r7, lr}
 8001890:	af00      	add	r7, sp, #0
 8001892:	f000 f957 	bl	8001b44 <HAL_IncTick>
 8001896:	bf00      	nop
 8001898:	bd80      	pop	{r7, pc}

0800189a <_getpid>:
 800189a:	b480      	push	{r7}
 800189c:	af00      	add	r7, sp, #0
 800189e:	2301      	movs	r3, #1
 80018a0:	4618      	mov	r0, r3
 80018a2:	46bd      	mov	sp, r7
 80018a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018a8:	4770      	bx	lr

080018aa <_kill>:
 80018aa:	b580      	push	{r7, lr}
 80018ac:	b082      	sub	sp, #8
 80018ae:	af00      	add	r7, sp, #0
 80018b0:	6078      	str	r0, [r7, #4]
 80018b2:	6039      	str	r1, [r7, #0]
 80018b4:	f002 f880 	bl	80039b8 <__errno>
 80018b8:	4603      	mov	r3, r0
 80018ba:	2216      	movs	r2, #22
 80018bc:	601a      	str	r2, [r3, #0]
 80018be:	f04f 33ff 	mov.w	r3, #4294967295
 80018c2:	4618      	mov	r0, r3
 80018c4:	3708      	adds	r7, #8
 80018c6:	46bd      	mov	sp, r7
 80018c8:	bd80      	pop	{r7, pc}

080018ca <_exit>:
 80018ca:	b580      	push	{r7, lr}
 80018cc:	b082      	sub	sp, #8
 80018ce:	af00      	add	r7, sp, #0
 80018d0:	6078      	str	r0, [r7, #4]
 80018d2:	f04f 31ff 	mov.w	r1, #4294967295
 80018d6:	6878      	ldr	r0, [r7, #4]
 80018d8:	f7ff ffe7 	bl	80018aa <_kill>
 80018dc:	bf00      	nop
 80018de:	e7fd      	b.n	80018dc <_exit+0x12>

080018e0 <_read>:
 80018e0:	b580      	push	{r7, lr}
 80018e2:	b086      	sub	sp, #24
 80018e4:	af00      	add	r7, sp, #0
 80018e6:	60f8      	str	r0, [r7, #12]
 80018e8:	60b9      	str	r1, [r7, #8]
 80018ea:	607a      	str	r2, [r7, #4]
 80018ec:	2300      	movs	r3, #0
 80018ee:	617b      	str	r3, [r7, #20]
 80018f0:	e00a      	b.n	8001908 <_read+0x28>
 80018f2:	f3af 8000 	nop.w
 80018f6:	4601      	mov	r1, r0
 80018f8:	68bb      	ldr	r3, [r7, #8]
 80018fa:	1c5a      	adds	r2, r3, #1
 80018fc:	60ba      	str	r2, [r7, #8]
 80018fe:	b2ca      	uxtb	r2, r1
 8001900:	701a      	strb	r2, [r3, #0]
 8001902:	697b      	ldr	r3, [r7, #20]
 8001904:	3301      	adds	r3, #1
 8001906:	617b      	str	r3, [r7, #20]
 8001908:	697a      	ldr	r2, [r7, #20]
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	429a      	cmp	r2, r3
 800190e:	dbf0      	blt.n	80018f2 <_read+0x12>
 8001910:	687b      	ldr	r3, [r7, #4]
 8001912:	4618      	mov	r0, r3
 8001914:	3718      	adds	r7, #24
 8001916:	46bd      	mov	sp, r7
 8001918:	bd80      	pop	{r7, pc}

0800191a <_write>:
 800191a:	b580      	push	{r7, lr}
 800191c:	b086      	sub	sp, #24
 800191e:	af00      	add	r7, sp, #0
 8001920:	60f8      	str	r0, [r7, #12]
 8001922:	60b9      	str	r1, [r7, #8]
 8001924:	607a      	str	r2, [r7, #4]
 8001926:	2300      	movs	r3, #0
 8001928:	617b      	str	r3, [r7, #20]
 800192a:	e009      	b.n	8001940 <_write+0x26>
 800192c:	68bb      	ldr	r3, [r7, #8]
 800192e:	1c5a      	adds	r2, r3, #1
 8001930:	60ba      	str	r2, [r7, #8]
 8001932:	781b      	ldrb	r3, [r3, #0]
 8001934:	4618      	mov	r0, r3
 8001936:	f3af 8000 	nop.w
 800193a:	697b      	ldr	r3, [r7, #20]
 800193c:	3301      	adds	r3, #1
 800193e:	617b      	str	r3, [r7, #20]
 8001940:	697a      	ldr	r2, [r7, #20]
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	429a      	cmp	r2, r3
 8001946:	dbf1      	blt.n	800192c <_write+0x12>
 8001948:	687b      	ldr	r3, [r7, #4]
 800194a:	4618      	mov	r0, r3
 800194c:	3718      	adds	r7, #24
 800194e:	46bd      	mov	sp, r7
 8001950:	bd80      	pop	{r7, pc}

08001952 <_close>:
 8001952:	b480      	push	{r7}
 8001954:	b083      	sub	sp, #12
 8001956:	af00      	add	r7, sp, #0
 8001958:	6078      	str	r0, [r7, #4]
 800195a:	f04f 33ff 	mov.w	r3, #4294967295
 800195e:	4618      	mov	r0, r3
 8001960:	370c      	adds	r7, #12
 8001962:	46bd      	mov	sp, r7
 8001964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001968:	4770      	bx	lr

0800196a <_fstat>:
 800196a:	b480      	push	{r7}
 800196c:	b083      	sub	sp, #12
 800196e:	af00      	add	r7, sp, #0
 8001970:	6078      	str	r0, [r7, #4]
 8001972:	6039      	str	r1, [r7, #0]
 8001974:	683b      	ldr	r3, [r7, #0]
 8001976:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800197a:	605a      	str	r2, [r3, #4]
 800197c:	2300      	movs	r3, #0
 800197e:	4618      	mov	r0, r3
 8001980:	370c      	adds	r7, #12
 8001982:	46bd      	mov	sp, r7
 8001984:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001988:	4770      	bx	lr

0800198a <_isatty>:
 800198a:	b480      	push	{r7}
 800198c:	b083      	sub	sp, #12
 800198e:	af00      	add	r7, sp, #0
 8001990:	6078      	str	r0, [r7, #4]
 8001992:	2301      	movs	r3, #1
 8001994:	4618      	mov	r0, r3
 8001996:	370c      	adds	r7, #12
 8001998:	46bd      	mov	sp, r7
 800199a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800199e:	4770      	bx	lr

080019a0 <_lseek>:
 80019a0:	b480      	push	{r7}
 80019a2:	b085      	sub	sp, #20
 80019a4:	af00      	add	r7, sp, #0
 80019a6:	60f8      	str	r0, [r7, #12]
 80019a8:	60b9      	str	r1, [r7, #8]
 80019aa:	607a      	str	r2, [r7, #4]
 80019ac:	2300      	movs	r3, #0
 80019ae:	4618      	mov	r0, r3
 80019b0:	3714      	adds	r7, #20
 80019b2:	46bd      	mov	sp, r7
 80019b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b8:	4770      	bx	lr
	...

080019bc <_sbrk>:
 80019bc:	b580      	push	{r7, lr}
 80019be:	b086      	sub	sp, #24
 80019c0:	af00      	add	r7, sp, #0
 80019c2:	6078      	str	r0, [r7, #4]
 80019c4:	4a14      	ldr	r2, [pc, #80]	@ (8001a18 <_sbrk+0x5c>)
 80019c6:	4b15      	ldr	r3, [pc, #84]	@ (8001a1c <_sbrk+0x60>)
 80019c8:	1ad3      	subs	r3, r2, r3
 80019ca:	617b      	str	r3, [r7, #20]
 80019cc:	697b      	ldr	r3, [r7, #20]
 80019ce:	613b      	str	r3, [r7, #16]
 80019d0:	4b13      	ldr	r3, [pc, #76]	@ (8001a20 <_sbrk+0x64>)
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	2b00      	cmp	r3, #0
 80019d6:	d102      	bne.n	80019de <_sbrk+0x22>
 80019d8:	4b11      	ldr	r3, [pc, #68]	@ (8001a20 <_sbrk+0x64>)
 80019da:	4a12      	ldr	r2, [pc, #72]	@ (8001a24 <_sbrk+0x68>)
 80019dc:	601a      	str	r2, [r3, #0]
 80019de:	4b10      	ldr	r3, [pc, #64]	@ (8001a20 <_sbrk+0x64>)
 80019e0:	681a      	ldr	r2, [r3, #0]
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	4413      	add	r3, r2
 80019e6:	693a      	ldr	r2, [r7, #16]
 80019e8:	429a      	cmp	r2, r3
 80019ea:	d207      	bcs.n	80019fc <_sbrk+0x40>
 80019ec:	f001 ffe4 	bl	80039b8 <__errno>
 80019f0:	4603      	mov	r3, r0
 80019f2:	220c      	movs	r2, #12
 80019f4:	601a      	str	r2, [r3, #0]
 80019f6:	f04f 33ff 	mov.w	r3, #4294967295
 80019fa:	e009      	b.n	8001a10 <_sbrk+0x54>
 80019fc:	4b08      	ldr	r3, [pc, #32]	@ (8001a20 <_sbrk+0x64>)
 80019fe:	681b      	ldr	r3, [r3, #0]
 8001a00:	60fb      	str	r3, [r7, #12]
 8001a02:	4b07      	ldr	r3, [pc, #28]	@ (8001a20 <_sbrk+0x64>)
 8001a04:	681a      	ldr	r2, [r3, #0]
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	4413      	add	r3, r2
 8001a0a:	4a05      	ldr	r2, [pc, #20]	@ (8001a20 <_sbrk+0x64>)
 8001a0c:	6013      	str	r3, [r2, #0]
 8001a0e:	68fb      	ldr	r3, [r7, #12]
 8001a10:	4618      	mov	r0, r3
 8001a12:	3718      	adds	r7, #24
 8001a14:	46bd      	mov	sp, r7
 8001a16:	bd80      	pop	{r7, pc}
 8001a18:	20020000 	.word	0x20020000
 8001a1c:	00000400 	.word	0x00000400
 8001a20:	20000134 	.word	0x20000134
 8001a24:	20000288 	.word	0x20000288

08001a28 <SystemInit>:
 8001a28:	b480      	push	{r7}
 8001a2a:	af00      	add	r7, sp, #0
 8001a2c:	4b06      	ldr	r3, [pc, #24]	@ (8001a48 <SystemInit+0x20>)
 8001a2e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001a32:	4a05      	ldr	r2, [pc, #20]	@ (8001a48 <SystemInit+0x20>)
 8001a34:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001a38:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001a3c:	bf00      	nop
 8001a3e:	46bd      	mov	sp, r7
 8001a40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a44:	4770      	bx	lr
 8001a46:	bf00      	nop
 8001a48:	e000ed00 	.word	0xe000ed00

08001a4c <Reset_Handler>:
 8001a4c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001a84 <LoopFillZerobss+0xe>
 8001a50:	f7ff ffea 	bl	8001a28 <SystemInit>
 8001a54:	480c      	ldr	r0, [pc, #48]	@ (8001a88 <LoopFillZerobss+0x12>)
 8001a56:	490d      	ldr	r1, [pc, #52]	@ (8001a8c <LoopFillZerobss+0x16>)
 8001a58:	4a0d      	ldr	r2, [pc, #52]	@ (8001a90 <LoopFillZerobss+0x1a>)
 8001a5a:	2300      	movs	r3, #0
 8001a5c:	e002      	b.n	8001a64 <LoopCopyDataInit>

08001a5e <CopyDataInit>:
 8001a5e:	58d4      	ldr	r4, [r2, r3]
 8001a60:	50c4      	str	r4, [r0, r3]
 8001a62:	3304      	adds	r3, #4

08001a64 <LoopCopyDataInit>:
 8001a64:	18c4      	adds	r4, r0, r3
 8001a66:	428c      	cmp	r4, r1
 8001a68:	d3f9      	bcc.n	8001a5e <CopyDataInit>
 8001a6a:	4a0a      	ldr	r2, [pc, #40]	@ (8001a94 <LoopFillZerobss+0x1e>)
 8001a6c:	4c0a      	ldr	r4, [pc, #40]	@ (8001a98 <LoopFillZerobss+0x22>)
 8001a6e:	2300      	movs	r3, #0
 8001a70:	e001      	b.n	8001a76 <LoopFillZerobss>

08001a72 <FillZerobss>:
 8001a72:	6013      	str	r3, [r2, #0]
 8001a74:	3204      	adds	r2, #4

08001a76 <LoopFillZerobss>:
 8001a76:	42a2      	cmp	r2, r4
 8001a78:	d3fb      	bcc.n	8001a72 <FillZerobss>
 8001a7a:	f001 ffa3 	bl	80039c4 <__libc_init_array>
 8001a7e:	f7ff fc5f 	bl	8001340 <main>
 8001a82:	4770      	bx	lr
 8001a84:	20020000 	.word	0x20020000
 8001a88:	20000000 	.word	0x20000000
 8001a8c:	20000088 	.word	0x20000088
 8001a90:	0800493c 	.word	0x0800493c
 8001a94:	20000088 	.word	0x20000088
 8001a98:	20000288 	.word	0x20000288

08001a9c <ADC_IRQHandler>:
 8001a9c:	e7fe      	b.n	8001a9c <ADC_IRQHandler>
	...

08001aa0 <HAL_Init>:
 8001aa0:	b580      	push	{r7, lr}
 8001aa2:	af00      	add	r7, sp, #0
 8001aa4:	4b0e      	ldr	r3, [pc, #56]	@ (8001ae0 <HAL_Init+0x40>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
 8001aa8:	4a0d      	ldr	r2, [pc, #52]	@ (8001ae0 <HAL_Init+0x40>)
 8001aaa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001aae:	6013      	str	r3, [r2, #0]
 8001ab0:	4b0b      	ldr	r3, [pc, #44]	@ (8001ae0 <HAL_Init+0x40>)
 8001ab2:	681b      	ldr	r3, [r3, #0]
 8001ab4:	4a0a      	ldr	r2, [pc, #40]	@ (8001ae0 <HAL_Init+0x40>)
 8001ab6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001aba:	6013      	str	r3, [r2, #0]
 8001abc:	4b08      	ldr	r3, [pc, #32]	@ (8001ae0 <HAL_Init+0x40>)
 8001abe:	681b      	ldr	r3, [r3, #0]
 8001ac0:	4a07      	ldr	r2, [pc, #28]	@ (8001ae0 <HAL_Init+0x40>)
 8001ac2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001ac6:	6013      	str	r3, [r2, #0]
 8001ac8:	2003      	movs	r0, #3
 8001aca:	f000 f931 	bl	8001d30 <HAL_NVIC_SetPriorityGrouping>
 8001ace:	2000      	movs	r0, #0
 8001ad0:	f000 f808 	bl	8001ae4 <HAL_InitTick>
 8001ad4:	f7ff fe0e 	bl	80016f4 <HAL_MspInit>
 8001ad8:	2300      	movs	r3, #0
 8001ada:	4618      	mov	r0, r3
 8001adc:	bd80      	pop	{r7, pc}
 8001ade:	bf00      	nop
 8001ae0:	40023c00 	.word	0x40023c00

08001ae4 <HAL_InitTick>:
 8001ae4:	b580      	push	{r7, lr}
 8001ae6:	b082      	sub	sp, #8
 8001ae8:	af00      	add	r7, sp, #0
 8001aea:	6078      	str	r0, [r7, #4]
 8001aec:	4b12      	ldr	r3, [pc, #72]	@ (8001b38 <HAL_InitTick+0x54>)
 8001aee:	681a      	ldr	r2, [r3, #0]
 8001af0:	4b12      	ldr	r3, [pc, #72]	@ (8001b3c <HAL_InitTick+0x58>)
 8001af2:	781b      	ldrb	r3, [r3, #0]
 8001af4:	4619      	mov	r1, r3
 8001af6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001afa:	fbb3 f3f1 	udiv	r3, r3, r1
 8001afe:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b02:	4618      	mov	r0, r3
 8001b04:	f000 f93b 	bl	8001d7e <HAL_SYSTICK_Config>
 8001b08:	4603      	mov	r3, r0
 8001b0a:	2b00      	cmp	r3, #0
 8001b0c:	d001      	beq.n	8001b12 <HAL_InitTick+0x2e>
 8001b0e:	2301      	movs	r3, #1
 8001b10:	e00e      	b.n	8001b30 <HAL_InitTick+0x4c>
 8001b12:	687b      	ldr	r3, [r7, #4]
 8001b14:	2b0f      	cmp	r3, #15
 8001b16:	d80a      	bhi.n	8001b2e <HAL_InitTick+0x4a>
 8001b18:	2200      	movs	r2, #0
 8001b1a:	6879      	ldr	r1, [r7, #4]
 8001b1c:	f04f 30ff 	mov.w	r0, #4294967295
 8001b20:	f000 f911 	bl	8001d46 <HAL_NVIC_SetPriority>
 8001b24:	4a06      	ldr	r2, [pc, #24]	@ (8001b40 <HAL_InitTick+0x5c>)
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	6013      	str	r3, [r2, #0]
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	e000      	b.n	8001b30 <HAL_InitTick+0x4c>
 8001b2e:	2301      	movs	r3, #1
 8001b30:	4618      	mov	r0, r3
 8001b32:	3708      	adds	r7, #8
 8001b34:	46bd      	mov	sp, r7
 8001b36:	bd80      	pop	{r7, pc}
 8001b38:	20000020 	.word	0x20000020
 8001b3c:	20000028 	.word	0x20000028
 8001b40:	20000024 	.word	0x20000024

08001b44 <HAL_IncTick>:
 8001b44:	b480      	push	{r7}
 8001b46:	af00      	add	r7, sp, #0
 8001b48:	4b06      	ldr	r3, [pc, #24]	@ (8001b64 <HAL_IncTick+0x20>)
 8001b4a:	781b      	ldrb	r3, [r3, #0]
 8001b4c:	461a      	mov	r2, r3
 8001b4e:	4b06      	ldr	r3, [pc, #24]	@ (8001b68 <HAL_IncTick+0x24>)
 8001b50:	681b      	ldr	r3, [r3, #0]
 8001b52:	4413      	add	r3, r2
 8001b54:	4a04      	ldr	r2, [pc, #16]	@ (8001b68 <HAL_IncTick+0x24>)
 8001b56:	6013      	str	r3, [r2, #0]
 8001b58:	bf00      	nop
 8001b5a:	46bd      	mov	sp, r7
 8001b5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b60:	4770      	bx	lr
 8001b62:	bf00      	nop
 8001b64:	20000028 	.word	0x20000028
 8001b68:	20000138 	.word	0x20000138

08001b6c <HAL_GetTick>:
 8001b6c:	b480      	push	{r7}
 8001b6e:	af00      	add	r7, sp, #0
 8001b70:	4b03      	ldr	r3, [pc, #12]	@ (8001b80 <HAL_GetTick+0x14>)
 8001b72:	681b      	ldr	r3, [r3, #0]
 8001b74:	4618      	mov	r0, r3
 8001b76:	46bd      	mov	sp, r7
 8001b78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b7c:	4770      	bx	lr
 8001b7e:	bf00      	nop
 8001b80:	20000138 	.word	0x20000138

08001b84 <HAL_Delay>:
 8001b84:	b580      	push	{r7, lr}
 8001b86:	b084      	sub	sp, #16
 8001b88:	af00      	add	r7, sp, #0
 8001b8a:	6078      	str	r0, [r7, #4]
 8001b8c:	f7ff ffee 	bl	8001b6c <HAL_GetTick>
 8001b90:	60b8      	str	r0, [r7, #8]
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	60fb      	str	r3, [r7, #12]
 8001b96:	68fb      	ldr	r3, [r7, #12]
 8001b98:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001b9c:	d005      	beq.n	8001baa <HAL_Delay+0x26>
 8001b9e:	4b0a      	ldr	r3, [pc, #40]	@ (8001bc8 <HAL_Delay+0x44>)
 8001ba0:	781b      	ldrb	r3, [r3, #0]
 8001ba2:	461a      	mov	r2, r3
 8001ba4:	68fb      	ldr	r3, [r7, #12]
 8001ba6:	4413      	add	r3, r2
 8001ba8:	60fb      	str	r3, [r7, #12]
 8001baa:	bf00      	nop
 8001bac:	f7ff ffde 	bl	8001b6c <HAL_GetTick>
 8001bb0:	4602      	mov	r2, r0
 8001bb2:	68bb      	ldr	r3, [r7, #8]
 8001bb4:	1ad3      	subs	r3, r2, r3
 8001bb6:	68fa      	ldr	r2, [r7, #12]
 8001bb8:	429a      	cmp	r2, r3
 8001bba:	d8f7      	bhi.n	8001bac <HAL_Delay+0x28>
 8001bbc:	bf00      	nop
 8001bbe:	bf00      	nop
 8001bc0:	3710      	adds	r7, #16
 8001bc2:	46bd      	mov	sp, r7
 8001bc4:	bd80      	pop	{r7, pc}
 8001bc6:	bf00      	nop
 8001bc8:	20000028 	.word	0x20000028

08001bcc <__NVIC_SetPriorityGrouping>:
 8001bcc:	b480      	push	{r7}
 8001bce:	b085      	sub	sp, #20
 8001bd0:	af00      	add	r7, sp, #0
 8001bd2:	6078      	str	r0, [r7, #4]
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	f003 0307 	and.w	r3, r3, #7
 8001bda:	60fb      	str	r3, [r7, #12]
 8001bdc:	4b0c      	ldr	r3, [pc, #48]	@ (8001c10 <__NVIC_SetPriorityGrouping+0x44>)
 8001bde:	68db      	ldr	r3, [r3, #12]
 8001be0:	60bb      	str	r3, [r7, #8]
 8001be2:	68ba      	ldr	r2, [r7, #8]
 8001be4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001be8:	4013      	ands	r3, r2
 8001bea:	60bb      	str	r3, [r7, #8]
 8001bec:	68fb      	ldr	r3, [r7, #12]
 8001bee:	021a      	lsls	r2, r3, #8
 8001bf0:	68bb      	ldr	r3, [r7, #8]
 8001bf2:	4313      	orrs	r3, r2
 8001bf4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001bf8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001bfc:	60bb      	str	r3, [r7, #8]
 8001bfe:	4a04      	ldr	r2, [pc, #16]	@ (8001c10 <__NVIC_SetPriorityGrouping+0x44>)
 8001c00:	68bb      	ldr	r3, [r7, #8]
 8001c02:	60d3      	str	r3, [r2, #12]
 8001c04:	bf00      	nop
 8001c06:	3714      	adds	r7, #20
 8001c08:	46bd      	mov	sp, r7
 8001c0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c0e:	4770      	bx	lr
 8001c10:	e000ed00 	.word	0xe000ed00

08001c14 <__NVIC_GetPriorityGrouping>:
 8001c14:	b480      	push	{r7}
 8001c16:	af00      	add	r7, sp, #0
 8001c18:	4b04      	ldr	r3, [pc, #16]	@ (8001c2c <__NVIC_GetPriorityGrouping+0x18>)
 8001c1a:	68db      	ldr	r3, [r3, #12]
 8001c1c:	0a1b      	lsrs	r3, r3, #8
 8001c1e:	f003 0307 	and.w	r3, r3, #7
 8001c22:	4618      	mov	r0, r3
 8001c24:	46bd      	mov	sp, r7
 8001c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c2a:	4770      	bx	lr
 8001c2c:	e000ed00 	.word	0xe000ed00

08001c30 <__NVIC_SetPriority>:
 8001c30:	b480      	push	{r7}
 8001c32:	b083      	sub	sp, #12
 8001c34:	af00      	add	r7, sp, #0
 8001c36:	4603      	mov	r3, r0
 8001c38:	6039      	str	r1, [r7, #0]
 8001c3a:	71fb      	strb	r3, [r7, #7]
 8001c3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c40:	2b00      	cmp	r3, #0
 8001c42:	db0a      	blt.n	8001c5a <__NVIC_SetPriority+0x2a>
 8001c44:	683b      	ldr	r3, [r7, #0]
 8001c46:	b2da      	uxtb	r2, r3
 8001c48:	490c      	ldr	r1, [pc, #48]	@ (8001c7c <__NVIC_SetPriority+0x4c>)
 8001c4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c4e:	0112      	lsls	r2, r2, #4
 8001c50:	b2d2      	uxtb	r2, r2
 8001c52:	440b      	add	r3, r1
 8001c54:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001c58:	e00a      	b.n	8001c70 <__NVIC_SetPriority+0x40>
 8001c5a:	683b      	ldr	r3, [r7, #0]
 8001c5c:	b2da      	uxtb	r2, r3
 8001c5e:	4908      	ldr	r1, [pc, #32]	@ (8001c80 <__NVIC_SetPriority+0x50>)
 8001c60:	79fb      	ldrb	r3, [r7, #7]
 8001c62:	f003 030f 	and.w	r3, r3, #15
 8001c66:	3b04      	subs	r3, #4
 8001c68:	0112      	lsls	r2, r2, #4
 8001c6a:	b2d2      	uxtb	r2, r2
 8001c6c:	440b      	add	r3, r1
 8001c6e:	761a      	strb	r2, [r3, #24]
 8001c70:	bf00      	nop
 8001c72:	370c      	adds	r7, #12
 8001c74:	46bd      	mov	sp, r7
 8001c76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c7a:	4770      	bx	lr
 8001c7c:	e000e100 	.word	0xe000e100
 8001c80:	e000ed00 	.word	0xe000ed00

08001c84 <NVIC_EncodePriority>:
 8001c84:	b480      	push	{r7}
 8001c86:	b089      	sub	sp, #36	@ 0x24
 8001c88:	af00      	add	r7, sp, #0
 8001c8a:	60f8      	str	r0, [r7, #12]
 8001c8c:	60b9      	str	r1, [r7, #8]
 8001c8e:	607a      	str	r2, [r7, #4]
 8001c90:	68fb      	ldr	r3, [r7, #12]
 8001c92:	f003 0307 	and.w	r3, r3, #7
 8001c96:	61fb      	str	r3, [r7, #28]
 8001c98:	69fb      	ldr	r3, [r7, #28]
 8001c9a:	f1c3 0307 	rsb	r3, r3, #7
 8001c9e:	2b04      	cmp	r3, #4
 8001ca0:	bf28      	it	cs
 8001ca2:	2304      	movcs	r3, #4
 8001ca4:	61bb      	str	r3, [r7, #24]
 8001ca6:	69fb      	ldr	r3, [r7, #28]
 8001ca8:	3304      	adds	r3, #4
 8001caa:	2b06      	cmp	r3, #6
 8001cac:	d902      	bls.n	8001cb4 <NVIC_EncodePriority+0x30>
 8001cae:	69fb      	ldr	r3, [r7, #28]
 8001cb0:	3b03      	subs	r3, #3
 8001cb2:	e000      	b.n	8001cb6 <NVIC_EncodePriority+0x32>
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	617b      	str	r3, [r7, #20]
 8001cb8:	f04f 32ff 	mov.w	r2, #4294967295
 8001cbc:	69bb      	ldr	r3, [r7, #24]
 8001cbe:	fa02 f303 	lsl.w	r3, r2, r3
 8001cc2:	43da      	mvns	r2, r3
 8001cc4:	68bb      	ldr	r3, [r7, #8]
 8001cc6:	401a      	ands	r2, r3
 8001cc8:	697b      	ldr	r3, [r7, #20]
 8001cca:	409a      	lsls	r2, r3
 8001ccc:	f04f 31ff 	mov.w	r1, #4294967295
 8001cd0:	697b      	ldr	r3, [r7, #20]
 8001cd2:	fa01 f303 	lsl.w	r3, r1, r3
 8001cd6:	43d9      	mvns	r1, r3
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	400b      	ands	r3, r1
 8001cdc:	4313      	orrs	r3, r2
 8001cde:	4618      	mov	r0, r3
 8001ce0:	3724      	adds	r7, #36	@ 0x24
 8001ce2:	46bd      	mov	sp, r7
 8001ce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ce8:	4770      	bx	lr
	...

08001cec <SysTick_Config>:
 8001cec:	b580      	push	{r7, lr}
 8001cee:	b082      	sub	sp, #8
 8001cf0:	af00      	add	r7, sp, #0
 8001cf2:	6078      	str	r0, [r7, #4]
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	3b01      	subs	r3, #1
 8001cf8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001cfc:	d301      	bcc.n	8001d02 <SysTick_Config+0x16>
 8001cfe:	2301      	movs	r3, #1
 8001d00:	e00f      	b.n	8001d22 <SysTick_Config+0x36>
 8001d02:	4a0a      	ldr	r2, [pc, #40]	@ (8001d2c <SysTick_Config+0x40>)
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	3b01      	subs	r3, #1
 8001d08:	6053      	str	r3, [r2, #4]
 8001d0a:	210f      	movs	r1, #15
 8001d0c:	f04f 30ff 	mov.w	r0, #4294967295
 8001d10:	f7ff ff8e 	bl	8001c30 <__NVIC_SetPriority>
 8001d14:	4b05      	ldr	r3, [pc, #20]	@ (8001d2c <SysTick_Config+0x40>)
 8001d16:	2200      	movs	r2, #0
 8001d18:	609a      	str	r2, [r3, #8]
 8001d1a:	4b04      	ldr	r3, [pc, #16]	@ (8001d2c <SysTick_Config+0x40>)
 8001d1c:	2207      	movs	r2, #7
 8001d1e:	601a      	str	r2, [r3, #0]
 8001d20:	2300      	movs	r3, #0
 8001d22:	4618      	mov	r0, r3
 8001d24:	3708      	adds	r7, #8
 8001d26:	46bd      	mov	sp, r7
 8001d28:	bd80      	pop	{r7, pc}
 8001d2a:	bf00      	nop
 8001d2c:	e000e010 	.word	0xe000e010

08001d30 <HAL_NVIC_SetPriorityGrouping>:
 8001d30:	b580      	push	{r7, lr}
 8001d32:	b082      	sub	sp, #8
 8001d34:	af00      	add	r7, sp, #0
 8001d36:	6078      	str	r0, [r7, #4]
 8001d38:	6878      	ldr	r0, [r7, #4]
 8001d3a:	f7ff ff47 	bl	8001bcc <__NVIC_SetPriorityGrouping>
 8001d3e:	bf00      	nop
 8001d40:	3708      	adds	r7, #8
 8001d42:	46bd      	mov	sp, r7
 8001d44:	bd80      	pop	{r7, pc}

08001d46 <HAL_NVIC_SetPriority>:
 8001d46:	b580      	push	{r7, lr}
 8001d48:	b086      	sub	sp, #24
 8001d4a:	af00      	add	r7, sp, #0
 8001d4c:	4603      	mov	r3, r0
 8001d4e:	60b9      	str	r1, [r7, #8]
 8001d50:	607a      	str	r2, [r7, #4]
 8001d52:	73fb      	strb	r3, [r7, #15]
 8001d54:	2300      	movs	r3, #0
 8001d56:	617b      	str	r3, [r7, #20]
 8001d58:	f7ff ff5c 	bl	8001c14 <__NVIC_GetPriorityGrouping>
 8001d5c:	6178      	str	r0, [r7, #20]
 8001d5e:	687a      	ldr	r2, [r7, #4]
 8001d60:	68b9      	ldr	r1, [r7, #8]
 8001d62:	6978      	ldr	r0, [r7, #20]
 8001d64:	f7ff ff8e 	bl	8001c84 <NVIC_EncodePriority>
 8001d68:	4602      	mov	r2, r0
 8001d6a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001d6e:	4611      	mov	r1, r2
 8001d70:	4618      	mov	r0, r3
 8001d72:	f7ff ff5d 	bl	8001c30 <__NVIC_SetPriority>
 8001d76:	bf00      	nop
 8001d78:	3718      	adds	r7, #24
 8001d7a:	46bd      	mov	sp, r7
 8001d7c:	bd80      	pop	{r7, pc}

08001d7e <HAL_SYSTICK_Config>:
 8001d7e:	b580      	push	{r7, lr}
 8001d80:	b082      	sub	sp, #8
 8001d82:	af00      	add	r7, sp, #0
 8001d84:	6078      	str	r0, [r7, #4]
 8001d86:	6878      	ldr	r0, [r7, #4]
 8001d88:	f7ff ffb0 	bl	8001cec <SysTick_Config>
 8001d8c:	4603      	mov	r3, r0
 8001d8e:	4618      	mov	r0, r3
 8001d90:	3708      	adds	r7, #8
 8001d92:	46bd      	mov	sp, r7
 8001d94:	bd80      	pop	{r7, pc}
	...

08001d98 <HAL_GPIO_Init>:
 8001d98:	b480      	push	{r7}
 8001d9a:	b089      	sub	sp, #36	@ 0x24
 8001d9c:	af00      	add	r7, sp, #0
 8001d9e:	6078      	str	r0, [r7, #4]
 8001da0:	6039      	str	r1, [r7, #0]
 8001da2:	2300      	movs	r3, #0
 8001da4:	617b      	str	r3, [r7, #20]
 8001da6:	2300      	movs	r3, #0
 8001da8:	613b      	str	r3, [r7, #16]
 8001daa:	2300      	movs	r3, #0
 8001dac:	61bb      	str	r3, [r7, #24]
 8001dae:	2300      	movs	r3, #0
 8001db0:	61fb      	str	r3, [r7, #28]
 8001db2:	e159      	b.n	8002068 <HAL_GPIO_Init+0x2d0>
 8001db4:	2201      	movs	r2, #1
 8001db6:	69fb      	ldr	r3, [r7, #28]
 8001db8:	fa02 f303 	lsl.w	r3, r2, r3
 8001dbc:	617b      	str	r3, [r7, #20]
 8001dbe:	683b      	ldr	r3, [r7, #0]
 8001dc0:	681b      	ldr	r3, [r3, #0]
 8001dc2:	697a      	ldr	r2, [r7, #20]
 8001dc4:	4013      	ands	r3, r2
 8001dc6:	613b      	str	r3, [r7, #16]
 8001dc8:	693a      	ldr	r2, [r7, #16]
 8001dca:	697b      	ldr	r3, [r7, #20]
 8001dcc:	429a      	cmp	r2, r3
 8001dce:	f040 8148 	bne.w	8002062 <HAL_GPIO_Init+0x2ca>
 8001dd2:	683b      	ldr	r3, [r7, #0]
 8001dd4:	685b      	ldr	r3, [r3, #4]
 8001dd6:	f003 0303 	and.w	r3, r3, #3
 8001dda:	2b01      	cmp	r3, #1
 8001ddc:	d005      	beq.n	8001dea <HAL_GPIO_Init+0x52>
 8001dde:	683b      	ldr	r3, [r7, #0]
 8001de0:	685b      	ldr	r3, [r3, #4]
 8001de2:	f003 0303 	and.w	r3, r3, #3
 8001de6:	2b02      	cmp	r3, #2
 8001de8:	d130      	bne.n	8001e4c <HAL_GPIO_Init+0xb4>
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	689b      	ldr	r3, [r3, #8]
 8001dee:	61bb      	str	r3, [r7, #24]
 8001df0:	69fb      	ldr	r3, [r7, #28]
 8001df2:	005b      	lsls	r3, r3, #1
 8001df4:	2203      	movs	r2, #3
 8001df6:	fa02 f303 	lsl.w	r3, r2, r3
 8001dfa:	43db      	mvns	r3, r3
 8001dfc:	69ba      	ldr	r2, [r7, #24]
 8001dfe:	4013      	ands	r3, r2
 8001e00:	61bb      	str	r3, [r7, #24]
 8001e02:	683b      	ldr	r3, [r7, #0]
 8001e04:	68da      	ldr	r2, [r3, #12]
 8001e06:	69fb      	ldr	r3, [r7, #28]
 8001e08:	005b      	lsls	r3, r3, #1
 8001e0a:	fa02 f303 	lsl.w	r3, r2, r3
 8001e0e:	69ba      	ldr	r2, [r7, #24]
 8001e10:	4313      	orrs	r3, r2
 8001e12:	61bb      	str	r3, [r7, #24]
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	69ba      	ldr	r2, [r7, #24]
 8001e18:	609a      	str	r2, [r3, #8]
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	685b      	ldr	r3, [r3, #4]
 8001e1e:	61bb      	str	r3, [r7, #24]
 8001e20:	2201      	movs	r2, #1
 8001e22:	69fb      	ldr	r3, [r7, #28]
 8001e24:	fa02 f303 	lsl.w	r3, r2, r3
 8001e28:	43db      	mvns	r3, r3
 8001e2a:	69ba      	ldr	r2, [r7, #24]
 8001e2c:	4013      	ands	r3, r2
 8001e2e:	61bb      	str	r3, [r7, #24]
 8001e30:	683b      	ldr	r3, [r7, #0]
 8001e32:	685b      	ldr	r3, [r3, #4]
 8001e34:	091b      	lsrs	r3, r3, #4
 8001e36:	f003 0201 	and.w	r2, r3, #1
 8001e3a:	69fb      	ldr	r3, [r7, #28]
 8001e3c:	fa02 f303 	lsl.w	r3, r2, r3
 8001e40:	69ba      	ldr	r2, [r7, #24]
 8001e42:	4313      	orrs	r3, r2
 8001e44:	61bb      	str	r3, [r7, #24]
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	69ba      	ldr	r2, [r7, #24]
 8001e4a:	605a      	str	r2, [r3, #4]
 8001e4c:	683b      	ldr	r3, [r7, #0]
 8001e4e:	685b      	ldr	r3, [r3, #4]
 8001e50:	f003 0303 	and.w	r3, r3, #3
 8001e54:	2b03      	cmp	r3, #3
 8001e56:	d017      	beq.n	8001e88 <HAL_GPIO_Init+0xf0>
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	68db      	ldr	r3, [r3, #12]
 8001e5c:	61bb      	str	r3, [r7, #24]
 8001e5e:	69fb      	ldr	r3, [r7, #28]
 8001e60:	005b      	lsls	r3, r3, #1
 8001e62:	2203      	movs	r2, #3
 8001e64:	fa02 f303 	lsl.w	r3, r2, r3
 8001e68:	43db      	mvns	r3, r3
 8001e6a:	69ba      	ldr	r2, [r7, #24]
 8001e6c:	4013      	ands	r3, r2
 8001e6e:	61bb      	str	r3, [r7, #24]
 8001e70:	683b      	ldr	r3, [r7, #0]
 8001e72:	689a      	ldr	r2, [r3, #8]
 8001e74:	69fb      	ldr	r3, [r7, #28]
 8001e76:	005b      	lsls	r3, r3, #1
 8001e78:	fa02 f303 	lsl.w	r3, r2, r3
 8001e7c:	69ba      	ldr	r2, [r7, #24]
 8001e7e:	4313      	orrs	r3, r2
 8001e80:	61bb      	str	r3, [r7, #24]
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	69ba      	ldr	r2, [r7, #24]
 8001e86:	60da      	str	r2, [r3, #12]
 8001e88:	683b      	ldr	r3, [r7, #0]
 8001e8a:	685b      	ldr	r3, [r3, #4]
 8001e8c:	f003 0303 	and.w	r3, r3, #3
 8001e90:	2b02      	cmp	r3, #2
 8001e92:	d123      	bne.n	8001edc <HAL_GPIO_Init+0x144>
 8001e94:	69fb      	ldr	r3, [r7, #28]
 8001e96:	08da      	lsrs	r2, r3, #3
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	3208      	adds	r2, #8
 8001e9c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001ea0:	61bb      	str	r3, [r7, #24]
 8001ea2:	69fb      	ldr	r3, [r7, #28]
 8001ea4:	f003 0307 	and.w	r3, r3, #7
 8001ea8:	009b      	lsls	r3, r3, #2
 8001eaa:	220f      	movs	r2, #15
 8001eac:	fa02 f303 	lsl.w	r3, r2, r3
 8001eb0:	43db      	mvns	r3, r3
 8001eb2:	69ba      	ldr	r2, [r7, #24]
 8001eb4:	4013      	ands	r3, r2
 8001eb6:	61bb      	str	r3, [r7, #24]
 8001eb8:	683b      	ldr	r3, [r7, #0]
 8001eba:	691a      	ldr	r2, [r3, #16]
 8001ebc:	69fb      	ldr	r3, [r7, #28]
 8001ebe:	f003 0307 	and.w	r3, r3, #7
 8001ec2:	009b      	lsls	r3, r3, #2
 8001ec4:	fa02 f303 	lsl.w	r3, r2, r3
 8001ec8:	69ba      	ldr	r2, [r7, #24]
 8001eca:	4313      	orrs	r3, r2
 8001ecc:	61bb      	str	r3, [r7, #24]
 8001ece:	69fb      	ldr	r3, [r7, #28]
 8001ed0:	08da      	lsrs	r2, r3, #3
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	3208      	adds	r2, #8
 8001ed6:	69b9      	ldr	r1, [r7, #24]
 8001ed8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	61bb      	str	r3, [r7, #24]
 8001ee2:	69fb      	ldr	r3, [r7, #28]
 8001ee4:	005b      	lsls	r3, r3, #1
 8001ee6:	2203      	movs	r2, #3
 8001ee8:	fa02 f303 	lsl.w	r3, r2, r3
 8001eec:	43db      	mvns	r3, r3
 8001eee:	69ba      	ldr	r2, [r7, #24]
 8001ef0:	4013      	ands	r3, r2
 8001ef2:	61bb      	str	r3, [r7, #24]
 8001ef4:	683b      	ldr	r3, [r7, #0]
 8001ef6:	685b      	ldr	r3, [r3, #4]
 8001ef8:	f003 0203 	and.w	r2, r3, #3
 8001efc:	69fb      	ldr	r3, [r7, #28]
 8001efe:	005b      	lsls	r3, r3, #1
 8001f00:	fa02 f303 	lsl.w	r3, r2, r3
 8001f04:	69ba      	ldr	r2, [r7, #24]
 8001f06:	4313      	orrs	r3, r2
 8001f08:	61bb      	str	r3, [r7, #24]
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	69ba      	ldr	r2, [r7, #24]
 8001f0e:	601a      	str	r2, [r3, #0]
 8001f10:	683b      	ldr	r3, [r7, #0]
 8001f12:	685b      	ldr	r3, [r3, #4]
 8001f14:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8001f18:	2b00      	cmp	r3, #0
 8001f1a:	f000 80a2 	beq.w	8002062 <HAL_GPIO_Init+0x2ca>
 8001f1e:	2300      	movs	r3, #0
 8001f20:	60fb      	str	r3, [r7, #12]
 8001f22:	4b57      	ldr	r3, [pc, #348]	@ (8002080 <HAL_GPIO_Init+0x2e8>)
 8001f24:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f26:	4a56      	ldr	r2, [pc, #344]	@ (8002080 <HAL_GPIO_Init+0x2e8>)
 8001f28:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001f2c:	6453      	str	r3, [r2, #68]	@ 0x44
 8001f2e:	4b54      	ldr	r3, [pc, #336]	@ (8002080 <HAL_GPIO_Init+0x2e8>)
 8001f30:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f32:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001f36:	60fb      	str	r3, [r7, #12]
 8001f38:	68fb      	ldr	r3, [r7, #12]
 8001f3a:	4a52      	ldr	r2, [pc, #328]	@ (8002084 <HAL_GPIO_Init+0x2ec>)
 8001f3c:	69fb      	ldr	r3, [r7, #28]
 8001f3e:	089b      	lsrs	r3, r3, #2
 8001f40:	3302      	adds	r3, #2
 8001f42:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001f46:	61bb      	str	r3, [r7, #24]
 8001f48:	69fb      	ldr	r3, [r7, #28]
 8001f4a:	f003 0303 	and.w	r3, r3, #3
 8001f4e:	009b      	lsls	r3, r3, #2
 8001f50:	220f      	movs	r2, #15
 8001f52:	fa02 f303 	lsl.w	r3, r2, r3
 8001f56:	43db      	mvns	r3, r3
 8001f58:	69ba      	ldr	r2, [r7, #24]
 8001f5a:	4013      	ands	r3, r2
 8001f5c:	61bb      	str	r3, [r7, #24]
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	4a49      	ldr	r2, [pc, #292]	@ (8002088 <HAL_GPIO_Init+0x2f0>)
 8001f62:	4293      	cmp	r3, r2
 8001f64:	d019      	beq.n	8001f9a <HAL_GPIO_Init+0x202>
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	4a48      	ldr	r2, [pc, #288]	@ (800208c <HAL_GPIO_Init+0x2f4>)
 8001f6a:	4293      	cmp	r3, r2
 8001f6c:	d013      	beq.n	8001f96 <HAL_GPIO_Init+0x1fe>
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	4a47      	ldr	r2, [pc, #284]	@ (8002090 <HAL_GPIO_Init+0x2f8>)
 8001f72:	4293      	cmp	r3, r2
 8001f74:	d00d      	beq.n	8001f92 <HAL_GPIO_Init+0x1fa>
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	4a46      	ldr	r2, [pc, #280]	@ (8002094 <HAL_GPIO_Init+0x2fc>)
 8001f7a:	4293      	cmp	r3, r2
 8001f7c:	d007      	beq.n	8001f8e <HAL_GPIO_Init+0x1f6>
 8001f7e:	687b      	ldr	r3, [r7, #4]
 8001f80:	4a45      	ldr	r2, [pc, #276]	@ (8002098 <HAL_GPIO_Init+0x300>)
 8001f82:	4293      	cmp	r3, r2
 8001f84:	d101      	bne.n	8001f8a <HAL_GPIO_Init+0x1f2>
 8001f86:	2304      	movs	r3, #4
 8001f88:	e008      	b.n	8001f9c <HAL_GPIO_Init+0x204>
 8001f8a:	2307      	movs	r3, #7
 8001f8c:	e006      	b.n	8001f9c <HAL_GPIO_Init+0x204>
 8001f8e:	2303      	movs	r3, #3
 8001f90:	e004      	b.n	8001f9c <HAL_GPIO_Init+0x204>
 8001f92:	2302      	movs	r3, #2
 8001f94:	e002      	b.n	8001f9c <HAL_GPIO_Init+0x204>
 8001f96:	2301      	movs	r3, #1
 8001f98:	e000      	b.n	8001f9c <HAL_GPIO_Init+0x204>
 8001f9a:	2300      	movs	r3, #0
 8001f9c:	69fa      	ldr	r2, [r7, #28]
 8001f9e:	f002 0203 	and.w	r2, r2, #3
 8001fa2:	0092      	lsls	r2, r2, #2
 8001fa4:	4093      	lsls	r3, r2
 8001fa6:	69ba      	ldr	r2, [r7, #24]
 8001fa8:	4313      	orrs	r3, r2
 8001faa:	61bb      	str	r3, [r7, #24]
 8001fac:	4935      	ldr	r1, [pc, #212]	@ (8002084 <HAL_GPIO_Init+0x2ec>)
 8001fae:	69fb      	ldr	r3, [r7, #28]
 8001fb0:	089b      	lsrs	r3, r3, #2
 8001fb2:	3302      	adds	r3, #2
 8001fb4:	69ba      	ldr	r2, [r7, #24]
 8001fb6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001fba:	4b38      	ldr	r3, [pc, #224]	@ (800209c <HAL_GPIO_Init+0x304>)
 8001fbc:	689b      	ldr	r3, [r3, #8]
 8001fbe:	61bb      	str	r3, [r7, #24]
 8001fc0:	693b      	ldr	r3, [r7, #16]
 8001fc2:	43db      	mvns	r3, r3
 8001fc4:	69ba      	ldr	r2, [r7, #24]
 8001fc6:	4013      	ands	r3, r2
 8001fc8:	61bb      	str	r3, [r7, #24]
 8001fca:	683b      	ldr	r3, [r7, #0]
 8001fcc:	685b      	ldr	r3, [r3, #4]
 8001fce:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001fd2:	2b00      	cmp	r3, #0
 8001fd4:	d003      	beq.n	8001fde <HAL_GPIO_Init+0x246>
 8001fd6:	69ba      	ldr	r2, [r7, #24]
 8001fd8:	693b      	ldr	r3, [r7, #16]
 8001fda:	4313      	orrs	r3, r2
 8001fdc:	61bb      	str	r3, [r7, #24]
 8001fde:	4a2f      	ldr	r2, [pc, #188]	@ (800209c <HAL_GPIO_Init+0x304>)
 8001fe0:	69bb      	ldr	r3, [r7, #24]
 8001fe2:	6093      	str	r3, [r2, #8]
 8001fe4:	4b2d      	ldr	r3, [pc, #180]	@ (800209c <HAL_GPIO_Init+0x304>)
 8001fe6:	68db      	ldr	r3, [r3, #12]
 8001fe8:	61bb      	str	r3, [r7, #24]
 8001fea:	693b      	ldr	r3, [r7, #16]
 8001fec:	43db      	mvns	r3, r3
 8001fee:	69ba      	ldr	r2, [r7, #24]
 8001ff0:	4013      	ands	r3, r2
 8001ff2:	61bb      	str	r3, [r7, #24]
 8001ff4:	683b      	ldr	r3, [r7, #0]
 8001ff6:	685b      	ldr	r3, [r3, #4]
 8001ff8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001ffc:	2b00      	cmp	r3, #0
 8001ffe:	d003      	beq.n	8002008 <HAL_GPIO_Init+0x270>
 8002000:	69ba      	ldr	r2, [r7, #24]
 8002002:	693b      	ldr	r3, [r7, #16]
 8002004:	4313      	orrs	r3, r2
 8002006:	61bb      	str	r3, [r7, #24]
 8002008:	4a24      	ldr	r2, [pc, #144]	@ (800209c <HAL_GPIO_Init+0x304>)
 800200a:	69bb      	ldr	r3, [r7, #24]
 800200c:	60d3      	str	r3, [r2, #12]
 800200e:	4b23      	ldr	r3, [pc, #140]	@ (800209c <HAL_GPIO_Init+0x304>)
 8002010:	685b      	ldr	r3, [r3, #4]
 8002012:	61bb      	str	r3, [r7, #24]
 8002014:	693b      	ldr	r3, [r7, #16]
 8002016:	43db      	mvns	r3, r3
 8002018:	69ba      	ldr	r2, [r7, #24]
 800201a:	4013      	ands	r3, r2
 800201c:	61bb      	str	r3, [r7, #24]
 800201e:	683b      	ldr	r3, [r7, #0]
 8002020:	685b      	ldr	r3, [r3, #4]
 8002022:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002026:	2b00      	cmp	r3, #0
 8002028:	d003      	beq.n	8002032 <HAL_GPIO_Init+0x29a>
 800202a:	69ba      	ldr	r2, [r7, #24]
 800202c:	693b      	ldr	r3, [r7, #16]
 800202e:	4313      	orrs	r3, r2
 8002030:	61bb      	str	r3, [r7, #24]
 8002032:	4a1a      	ldr	r2, [pc, #104]	@ (800209c <HAL_GPIO_Init+0x304>)
 8002034:	69bb      	ldr	r3, [r7, #24]
 8002036:	6053      	str	r3, [r2, #4]
 8002038:	4b18      	ldr	r3, [pc, #96]	@ (800209c <HAL_GPIO_Init+0x304>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	61bb      	str	r3, [r7, #24]
 800203e:	693b      	ldr	r3, [r7, #16]
 8002040:	43db      	mvns	r3, r3
 8002042:	69ba      	ldr	r2, [r7, #24]
 8002044:	4013      	ands	r3, r2
 8002046:	61bb      	str	r3, [r7, #24]
 8002048:	683b      	ldr	r3, [r7, #0]
 800204a:	685b      	ldr	r3, [r3, #4]
 800204c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002050:	2b00      	cmp	r3, #0
 8002052:	d003      	beq.n	800205c <HAL_GPIO_Init+0x2c4>
 8002054:	69ba      	ldr	r2, [r7, #24]
 8002056:	693b      	ldr	r3, [r7, #16]
 8002058:	4313      	orrs	r3, r2
 800205a:	61bb      	str	r3, [r7, #24]
 800205c:	4a0f      	ldr	r2, [pc, #60]	@ (800209c <HAL_GPIO_Init+0x304>)
 800205e:	69bb      	ldr	r3, [r7, #24]
 8002060:	6013      	str	r3, [r2, #0]
 8002062:	69fb      	ldr	r3, [r7, #28]
 8002064:	3301      	adds	r3, #1
 8002066:	61fb      	str	r3, [r7, #28]
 8002068:	69fb      	ldr	r3, [r7, #28]
 800206a:	2b0f      	cmp	r3, #15
 800206c:	f67f aea2 	bls.w	8001db4 <HAL_GPIO_Init+0x1c>
 8002070:	bf00      	nop
 8002072:	bf00      	nop
 8002074:	3724      	adds	r7, #36	@ 0x24
 8002076:	46bd      	mov	sp, r7
 8002078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800207c:	4770      	bx	lr
 800207e:	bf00      	nop
 8002080:	40023800 	.word	0x40023800
 8002084:	40013800 	.word	0x40013800
 8002088:	40020000 	.word	0x40020000
 800208c:	40020400 	.word	0x40020400
 8002090:	40020800 	.word	0x40020800
 8002094:	40020c00 	.word	0x40020c00
 8002098:	40021000 	.word	0x40021000
 800209c:	40013c00 	.word	0x40013c00

080020a0 <HAL_GPIO_WritePin>:
 80020a0:	b480      	push	{r7}
 80020a2:	b083      	sub	sp, #12
 80020a4:	af00      	add	r7, sp, #0
 80020a6:	6078      	str	r0, [r7, #4]
 80020a8:	460b      	mov	r3, r1
 80020aa:	807b      	strh	r3, [r7, #2]
 80020ac:	4613      	mov	r3, r2
 80020ae:	707b      	strb	r3, [r7, #1]
 80020b0:	787b      	ldrb	r3, [r7, #1]
 80020b2:	2b00      	cmp	r3, #0
 80020b4:	d003      	beq.n	80020be <HAL_GPIO_WritePin+0x1e>
 80020b6:	887a      	ldrh	r2, [r7, #2]
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	619a      	str	r2, [r3, #24]
 80020bc:	e003      	b.n	80020c6 <HAL_GPIO_WritePin+0x26>
 80020be:	887b      	ldrh	r3, [r7, #2]
 80020c0:	041a      	lsls	r2, r3, #16
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	619a      	str	r2, [r3, #24]
 80020c6:	bf00      	nop
 80020c8:	370c      	adds	r7, #12
 80020ca:	46bd      	mov	sp, r7
 80020cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d0:	4770      	bx	lr
	...

080020d4 <HAL_RCC_OscConfig>:
 80020d4:	b580      	push	{r7, lr}
 80020d6:	b086      	sub	sp, #24
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d101      	bne.n	80020e6 <HAL_RCC_OscConfig+0x12>
 80020e2:	2301      	movs	r3, #1
 80020e4:	e267      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	681b      	ldr	r3, [r3, #0]
 80020ea:	f003 0301 	and.w	r3, r3, #1
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	d075      	beq.n	80021de <HAL_RCC_OscConfig+0x10a>
 80020f2:	4b88      	ldr	r3, [pc, #544]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 80020f4:	689b      	ldr	r3, [r3, #8]
 80020f6:	f003 030c 	and.w	r3, r3, #12
 80020fa:	2b04      	cmp	r3, #4
 80020fc:	d00c      	beq.n	8002118 <HAL_RCC_OscConfig+0x44>
 80020fe:	4b85      	ldr	r3, [pc, #532]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002100:	689b      	ldr	r3, [r3, #8]
 8002102:	f003 030c 	and.w	r3, r3, #12
 8002106:	2b08      	cmp	r3, #8
 8002108:	d112      	bne.n	8002130 <HAL_RCC_OscConfig+0x5c>
 800210a:	4b82      	ldr	r3, [pc, #520]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 800210c:	685b      	ldr	r3, [r3, #4]
 800210e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002112:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002116:	d10b      	bne.n	8002130 <HAL_RCC_OscConfig+0x5c>
 8002118:	4b7e      	ldr	r3, [pc, #504]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002120:	2b00      	cmp	r3, #0
 8002122:	d05b      	beq.n	80021dc <HAL_RCC_OscConfig+0x108>
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	685b      	ldr	r3, [r3, #4]
 8002128:	2b00      	cmp	r3, #0
 800212a:	d157      	bne.n	80021dc <HAL_RCC_OscConfig+0x108>
 800212c:	2301      	movs	r3, #1
 800212e:	e242      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	685b      	ldr	r3, [r3, #4]
 8002134:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002138:	d106      	bne.n	8002148 <HAL_RCC_OscConfig+0x74>
 800213a:	4b76      	ldr	r3, [pc, #472]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 800213c:	681b      	ldr	r3, [r3, #0]
 800213e:	4a75      	ldr	r2, [pc, #468]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002140:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002144:	6013      	str	r3, [r2, #0]
 8002146:	e01d      	b.n	8002184 <HAL_RCC_OscConfig+0xb0>
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	685b      	ldr	r3, [r3, #4]
 800214c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002150:	d10c      	bne.n	800216c <HAL_RCC_OscConfig+0x98>
 8002152:	4b70      	ldr	r3, [pc, #448]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002154:	681b      	ldr	r3, [r3, #0]
 8002156:	4a6f      	ldr	r2, [pc, #444]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002158:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800215c:	6013      	str	r3, [r2, #0]
 800215e:	4b6d      	ldr	r3, [pc, #436]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002160:	681b      	ldr	r3, [r3, #0]
 8002162:	4a6c      	ldr	r2, [pc, #432]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002164:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002168:	6013      	str	r3, [r2, #0]
 800216a:	e00b      	b.n	8002184 <HAL_RCC_OscConfig+0xb0>
 800216c:	4b69      	ldr	r3, [pc, #420]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	4a68      	ldr	r2, [pc, #416]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002172:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002176:	6013      	str	r3, [r2, #0]
 8002178:	4b66      	ldr	r3, [pc, #408]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	4a65      	ldr	r2, [pc, #404]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 800217e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002182:	6013      	str	r3, [r2, #0]
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	685b      	ldr	r3, [r3, #4]
 8002188:	2b00      	cmp	r3, #0
 800218a:	d013      	beq.n	80021b4 <HAL_RCC_OscConfig+0xe0>
 800218c:	f7ff fcee 	bl	8001b6c <HAL_GetTick>
 8002190:	6138      	str	r0, [r7, #16]
 8002192:	e008      	b.n	80021a6 <HAL_RCC_OscConfig+0xd2>
 8002194:	f7ff fcea 	bl	8001b6c <HAL_GetTick>
 8002198:	4602      	mov	r2, r0
 800219a:	693b      	ldr	r3, [r7, #16]
 800219c:	1ad3      	subs	r3, r2, r3
 800219e:	2b64      	cmp	r3, #100	@ 0x64
 80021a0:	d901      	bls.n	80021a6 <HAL_RCC_OscConfig+0xd2>
 80021a2:	2303      	movs	r3, #3
 80021a4:	e207      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 80021a6:	4b5b      	ldr	r3, [pc, #364]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 80021a8:	681b      	ldr	r3, [r3, #0]
 80021aa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80021ae:	2b00      	cmp	r3, #0
 80021b0:	d0f0      	beq.n	8002194 <HAL_RCC_OscConfig+0xc0>
 80021b2:	e014      	b.n	80021de <HAL_RCC_OscConfig+0x10a>
 80021b4:	f7ff fcda 	bl	8001b6c <HAL_GetTick>
 80021b8:	6138      	str	r0, [r7, #16]
 80021ba:	e008      	b.n	80021ce <HAL_RCC_OscConfig+0xfa>
 80021bc:	f7ff fcd6 	bl	8001b6c <HAL_GetTick>
 80021c0:	4602      	mov	r2, r0
 80021c2:	693b      	ldr	r3, [r7, #16]
 80021c4:	1ad3      	subs	r3, r2, r3
 80021c6:	2b64      	cmp	r3, #100	@ 0x64
 80021c8:	d901      	bls.n	80021ce <HAL_RCC_OscConfig+0xfa>
 80021ca:	2303      	movs	r3, #3
 80021cc:	e1f3      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 80021ce:	4b51      	ldr	r3, [pc, #324]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 80021d0:	681b      	ldr	r3, [r3, #0]
 80021d2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d1f0      	bne.n	80021bc <HAL_RCC_OscConfig+0xe8>
 80021da:	e000      	b.n	80021de <HAL_RCC_OscConfig+0x10a>
 80021dc:	bf00      	nop
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	681b      	ldr	r3, [r3, #0]
 80021e2:	f003 0302 	and.w	r3, r3, #2
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	d063      	beq.n	80022b2 <HAL_RCC_OscConfig+0x1de>
 80021ea:	4b4a      	ldr	r3, [pc, #296]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 80021ec:	689b      	ldr	r3, [r3, #8]
 80021ee:	f003 030c 	and.w	r3, r3, #12
 80021f2:	2b00      	cmp	r3, #0
 80021f4:	d00b      	beq.n	800220e <HAL_RCC_OscConfig+0x13a>
 80021f6:	4b47      	ldr	r3, [pc, #284]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 80021f8:	689b      	ldr	r3, [r3, #8]
 80021fa:	f003 030c 	and.w	r3, r3, #12
 80021fe:	2b08      	cmp	r3, #8
 8002200:	d11c      	bne.n	800223c <HAL_RCC_OscConfig+0x168>
 8002202:	4b44      	ldr	r3, [pc, #272]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002204:	685b      	ldr	r3, [r3, #4]
 8002206:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800220a:	2b00      	cmp	r3, #0
 800220c:	d116      	bne.n	800223c <HAL_RCC_OscConfig+0x168>
 800220e:	4b41      	ldr	r3, [pc, #260]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	f003 0302 	and.w	r3, r3, #2
 8002216:	2b00      	cmp	r3, #0
 8002218:	d005      	beq.n	8002226 <HAL_RCC_OscConfig+0x152>
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	68db      	ldr	r3, [r3, #12]
 800221e:	2b01      	cmp	r3, #1
 8002220:	d001      	beq.n	8002226 <HAL_RCC_OscConfig+0x152>
 8002222:	2301      	movs	r3, #1
 8002224:	e1c7      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 8002226:	4b3b      	ldr	r3, [pc, #236]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002228:	681b      	ldr	r3, [r3, #0]
 800222a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	691b      	ldr	r3, [r3, #16]
 8002232:	00db      	lsls	r3, r3, #3
 8002234:	4937      	ldr	r1, [pc, #220]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002236:	4313      	orrs	r3, r2
 8002238:	600b      	str	r3, [r1, #0]
 800223a:	e03a      	b.n	80022b2 <HAL_RCC_OscConfig+0x1de>
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	68db      	ldr	r3, [r3, #12]
 8002240:	2b00      	cmp	r3, #0
 8002242:	d020      	beq.n	8002286 <HAL_RCC_OscConfig+0x1b2>
 8002244:	4b34      	ldr	r3, [pc, #208]	@ (8002318 <HAL_RCC_OscConfig+0x244>)
 8002246:	2201      	movs	r2, #1
 8002248:	601a      	str	r2, [r3, #0]
 800224a:	f7ff fc8f 	bl	8001b6c <HAL_GetTick>
 800224e:	6138      	str	r0, [r7, #16]
 8002250:	e008      	b.n	8002264 <HAL_RCC_OscConfig+0x190>
 8002252:	f7ff fc8b 	bl	8001b6c <HAL_GetTick>
 8002256:	4602      	mov	r2, r0
 8002258:	693b      	ldr	r3, [r7, #16]
 800225a:	1ad3      	subs	r3, r2, r3
 800225c:	2b02      	cmp	r3, #2
 800225e:	d901      	bls.n	8002264 <HAL_RCC_OscConfig+0x190>
 8002260:	2303      	movs	r3, #3
 8002262:	e1a8      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 8002264:	4b2b      	ldr	r3, [pc, #172]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	f003 0302 	and.w	r3, r3, #2
 800226c:	2b00      	cmp	r3, #0
 800226e:	d0f0      	beq.n	8002252 <HAL_RCC_OscConfig+0x17e>
 8002270:	4b28      	ldr	r3, [pc, #160]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	691b      	ldr	r3, [r3, #16]
 800227c:	00db      	lsls	r3, r3, #3
 800227e:	4925      	ldr	r1, [pc, #148]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 8002280:	4313      	orrs	r3, r2
 8002282:	600b      	str	r3, [r1, #0]
 8002284:	e015      	b.n	80022b2 <HAL_RCC_OscConfig+0x1de>
 8002286:	4b24      	ldr	r3, [pc, #144]	@ (8002318 <HAL_RCC_OscConfig+0x244>)
 8002288:	2200      	movs	r2, #0
 800228a:	601a      	str	r2, [r3, #0]
 800228c:	f7ff fc6e 	bl	8001b6c <HAL_GetTick>
 8002290:	6138      	str	r0, [r7, #16]
 8002292:	e008      	b.n	80022a6 <HAL_RCC_OscConfig+0x1d2>
 8002294:	f7ff fc6a 	bl	8001b6c <HAL_GetTick>
 8002298:	4602      	mov	r2, r0
 800229a:	693b      	ldr	r3, [r7, #16]
 800229c:	1ad3      	subs	r3, r2, r3
 800229e:	2b02      	cmp	r3, #2
 80022a0:	d901      	bls.n	80022a6 <HAL_RCC_OscConfig+0x1d2>
 80022a2:	2303      	movs	r3, #3
 80022a4:	e187      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 80022a6:	4b1b      	ldr	r3, [pc, #108]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	f003 0302 	and.w	r3, r3, #2
 80022ae:	2b00      	cmp	r3, #0
 80022b0:	d1f0      	bne.n	8002294 <HAL_RCC_OscConfig+0x1c0>
 80022b2:	687b      	ldr	r3, [r7, #4]
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	f003 0308 	and.w	r3, r3, #8
 80022ba:	2b00      	cmp	r3, #0
 80022bc:	d036      	beq.n	800232c <HAL_RCC_OscConfig+0x258>
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	695b      	ldr	r3, [r3, #20]
 80022c2:	2b00      	cmp	r3, #0
 80022c4:	d016      	beq.n	80022f4 <HAL_RCC_OscConfig+0x220>
 80022c6:	4b15      	ldr	r3, [pc, #84]	@ (800231c <HAL_RCC_OscConfig+0x248>)
 80022c8:	2201      	movs	r2, #1
 80022ca:	601a      	str	r2, [r3, #0]
 80022cc:	f7ff fc4e 	bl	8001b6c <HAL_GetTick>
 80022d0:	6138      	str	r0, [r7, #16]
 80022d2:	e008      	b.n	80022e6 <HAL_RCC_OscConfig+0x212>
 80022d4:	f7ff fc4a 	bl	8001b6c <HAL_GetTick>
 80022d8:	4602      	mov	r2, r0
 80022da:	693b      	ldr	r3, [r7, #16]
 80022dc:	1ad3      	subs	r3, r2, r3
 80022de:	2b02      	cmp	r3, #2
 80022e0:	d901      	bls.n	80022e6 <HAL_RCC_OscConfig+0x212>
 80022e2:	2303      	movs	r3, #3
 80022e4:	e167      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 80022e6:	4b0b      	ldr	r3, [pc, #44]	@ (8002314 <HAL_RCC_OscConfig+0x240>)
 80022e8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80022ea:	f003 0302 	and.w	r3, r3, #2
 80022ee:	2b00      	cmp	r3, #0
 80022f0:	d0f0      	beq.n	80022d4 <HAL_RCC_OscConfig+0x200>
 80022f2:	e01b      	b.n	800232c <HAL_RCC_OscConfig+0x258>
 80022f4:	4b09      	ldr	r3, [pc, #36]	@ (800231c <HAL_RCC_OscConfig+0x248>)
 80022f6:	2200      	movs	r2, #0
 80022f8:	601a      	str	r2, [r3, #0]
 80022fa:	f7ff fc37 	bl	8001b6c <HAL_GetTick>
 80022fe:	6138      	str	r0, [r7, #16]
 8002300:	e00e      	b.n	8002320 <HAL_RCC_OscConfig+0x24c>
 8002302:	f7ff fc33 	bl	8001b6c <HAL_GetTick>
 8002306:	4602      	mov	r2, r0
 8002308:	693b      	ldr	r3, [r7, #16]
 800230a:	1ad3      	subs	r3, r2, r3
 800230c:	2b02      	cmp	r3, #2
 800230e:	d907      	bls.n	8002320 <HAL_RCC_OscConfig+0x24c>
 8002310:	2303      	movs	r3, #3
 8002312:	e150      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 8002314:	40023800 	.word	0x40023800
 8002318:	42470000 	.word	0x42470000
 800231c:	42470e80 	.word	0x42470e80
 8002320:	4b88      	ldr	r3, [pc, #544]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 8002322:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002324:	f003 0302 	and.w	r3, r3, #2
 8002328:	2b00      	cmp	r3, #0
 800232a:	d1ea      	bne.n	8002302 <HAL_RCC_OscConfig+0x22e>
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	f003 0304 	and.w	r3, r3, #4
 8002334:	2b00      	cmp	r3, #0
 8002336:	f000 8097 	beq.w	8002468 <HAL_RCC_OscConfig+0x394>
 800233a:	2300      	movs	r3, #0
 800233c:	75fb      	strb	r3, [r7, #23]
 800233e:	4b81      	ldr	r3, [pc, #516]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 8002340:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002342:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002346:	2b00      	cmp	r3, #0
 8002348:	d10f      	bne.n	800236a <HAL_RCC_OscConfig+0x296>
 800234a:	2300      	movs	r3, #0
 800234c:	60bb      	str	r3, [r7, #8]
 800234e:	4b7d      	ldr	r3, [pc, #500]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 8002350:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002352:	4a7c      	ldr	r2, [pc, #496]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 8002354:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002358:	6413      	str	r3, [r2, #64]	@ 0x40
 800235a:	4b7a      	ldr	r3, [pc, #488]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 800235c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800235e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002362:	60bb      	str	r3, [r7, #8]
 8002364:	68bb      	ldr	r3, [r7, #8]
 8002366:	2301      	movs	r3, #1
 8002368:	75fb      	strb	r3, [r7, #23]
 800236a:	4b77      	ldr	r3, [pc, #476]	@ (8002548 <HAL_RCC_OscConfig+0x474>)
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002372:	2b00      	cmp	r3, #0
 8002374:	d118      	bne.n	80023a8 <HAL_RCC_OscConfig+0x2d4>
 8002376:	4b74      	ldr	r3, [pc, #464]	@ (8002548 <HAL_RCC_OscConfig+0x474>)
 8002378:	681b      	ldr	r3, [r3, #0]
 800237a:	4a73      	ldr	r2, [pc, #460]	@ (8002548 <HAL_RCC_OscConfig+0x474>)
 800237c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002380:	6013      	str	r3, [r2, #0]
 8002382:	f7ff fbf3 	bl	8001b6c <HAL_GetTick>
 8002386:	6138      	str	r0, [r7, #16]
 8002388:	e008      	b.n	800239c <HAL_RCC_OscConfig+0x2c8>
 800238a:	f7ff fbef 	bl	8001b6c <HAL_GetTick>
 800238e:	4602      	mov	r2, r0
 8002390:	693b      	ldr	r3, [r7, #16]
 8002392:	1ad3      	subs	r3, r2, r3
 8002394:	2b02      	cmp	r3, #2
 8002396:	d901      	bls.n	800239c <HAL_RCC_OscConfig+0x2c8>
 8002398:	2303      	movs	r3, #3
 800239a:	e10c      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 800239c:	4b6a      	ldr	r3, [pc, #424]	@ (8002548 <HAL_RCC_OscConfig+0x474>)
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	d0f0      	beq.n	800238a <HAL_RCC_OscConfig+0x2b6>
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	689b      	ldr	r3, [r3, #8]
 80023ac:	2b01      	cmp	r3, #1
 80023ae:	d106      	bne.n	80023be <HAL_RCC_OscConfig+0x2ea>
 80023b0:	4b64      	ldr	r3, [pc, #400]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023b2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80023b4:	4a63      	ldr	r2, [pc, #396]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023b6:	f043 0301 	orr.w	r3, r3, #1
 80023ba:	6713      	str	r3, [r2, #112]	@ 0x70
 80023bc:	e01c      	b.n	80023f8 <HAL_RCC_OscConfig+0x324>
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	689b      	ldr	r3, [r3, #8]
 80023c2:	2b05      	cmp	r3, #5
 80023c4:	d10c      	bne.n	80023e0 <HAL_RCC_OscConfig+0x30c>
 80023c6:	4b5f      	ldr	r3, [pc, #380]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023c8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80023ca:	4a5e      	ldr	r2, [pc, #376]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023cc:	f043 0304 	orr.w	r3, r3, #4
 80023d0:	6713      	str	r3, [r2, #112]	@ 0x70
 80023d2:	4b5c      	ldr	r3, [pc, #368]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023d4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80023d6:	4a5b      	ldr	r2, [pc, #364]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023d8:	f043 0301 	orr.w	r3, r3, #1
 80023dc:	6713      	str	r3, [r2, #112]	@ 0x70
 80023de:	e00b      	b.n	80023f8 <HAL_RCC_OscConfig+0x324>
 80023e0:	4b58      	ldr	r3, [pc, #352]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023e2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80023e4:	4a57      	ldr	r2, [pc, #348]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023e6:	f023 0301 	bic.w	r3, r3, #1
 80023ea:	6713      	str	r3, [r2, #112]	@ 0x70
 80023ec:	4b55      	ldr	r3, [pc, #340]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023ee:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80023f0:	4a54      	ldr	r2, [pc, #336]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80023f2:	f023 0304 	bic.w	r3, r3, #4
 80023f6:	6713      	str	r3, [r2, #112]	@ 0x70
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	689b      	ldr	r3, [r3, #8]
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	d015      	beq.n	800242c <HAL_RCC_OscConfig+0x358>
 8002400:	f7ff fbb4 	bl	8001b6c <HAL_GetTick>
 8002404:	6138      	str	r0, [r7, #16]
 8002406:	e00a      	b.n	800241e <HAL_RCC_OscConfig+0x34a>
 8002408:	f7ff fbb0 	bl	8001b6c <HAL_GetTick>
 800240c:	4602      	mov	r2, r0
 800240e:	693b      	ldr	r3, [r7, #16]
 8002410:	1ad3      	subs	r3, r2, r3
 8002412:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002416:	4293      	cmp	r3, r2
 8002418:	d901      	bls.n	800241e <HAL_RCC_OscConfig+0x34a>
 800241a:	2303      	movs	r3, #3
 800241c:	e0cb      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 800241e:	4b49      	ldr	r3, [pc, #292]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 8002420:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002422:	f003 0302 	and.w	r3, r3, #2
 8002426:	2b00      	cmp	r3, #0
 8002428:	d0ee      	beq.n	8002408 <HAL_RCC_OscConfig+0x334>
 800242a:	e014      	b.n	8002456 <HAL_RCC_OscConfig+0x382>
 800242c:	f7ff fb9e 	bl	8001b6c <HAL_GetTick>
 8002430:	6138      	str	r0, [r7, #16]
 8002432:	e00a      	b.n	800244a <HAL_RCC_OscConfig+0x376>
 8002434:	f7ff fb9a 	bl	8001b6c <HAL_GetTick>
 8002438:	4602      	mov	r2, r0
 800243a:	693b      	ldr	r3, [r7, #16]
 800243c:	1ad3      	subs	r3, r2, r3
 800243e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002442:	4293      	cmp	r3, r2
 8002444:	d901      	bls.n	800244a <HAL_RCC_OscConfig+0x376>
 8002446:	2303      	movs	r3, #3
 8002448:	e0b5      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 800244a:	4b3e      	ldr	r3, [pc, #248]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 800244c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800244e:	f003 0302 	and.w	r3, r3, #2
 8002452:	2b00      	cmp	r3, #0
 8002454:	d1ee      	bne.n	8002434 <HAL_RCC_OscConfig+0x360>
 8002456:	7dfb      	ldrb	r3, [r7, #23]
 8002458:	2b01      	cmp	r3, #1
 800245a:	d105      	bne.n	8002468 <HAL_RCC_OscConfig+0x394>
 800245c:	4b39      	ldr	r3, [pc, #228]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 800245e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002460:	4a38      	ldr	r2, [pc, #224]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 8002462:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002466:	6413      	str	r3, [r2, #64]	@ 0x40
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	699b      	ldr	r3, [r3, #24]
 800246c:	2b00      	cmp	r3, #0
 800246e:	f000 80a1 	beq.w	80025b4 <HAL_RCC_OscConfig+0x4e0>
 8002472:	4b34      	ldr	r3, [pc, #208]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 8002474:	689b      	ldr	r3, [r3, #8]
 8002476:	f003 030c 	and.w	r3, r3, #12
 800247a:	2b08      	cmp	r3, #8
 800247c:	d05c      	beq.n	8002538 <HAL_RCC_OscConfig+0x464>
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	699b      	ldr	r3, [r3, #24]
 8002482:	2b02      	cmp	r3, #2
 8002484:	d141      	bne.n	800250a <HAL_RCC_OscConfig+0x436>
 8002486:	4b31      	ldr	r3, [pc, #196]	@ (800254c <HAL_RCC_OscConfig+0x478>)
 8002488:	2200      	movs	r2, #0
 800248a:	601a      	str	r2, [r3, #0]
 800248c:	f7ff fb6e 	bl	8001b6c <HAL_GetTick>
 8002490:	6138      	str	r0, [r7, #16]
 8002492:	e008      	b.n	80024a6 <HAL_RCC_OscConfig+0x3d2>
 8002494:	f7ff fb6a 	bl	8001b6c <HAL_GetTick>
 8002498:	4602      	mov	r2, r0
 800249a:	693b      	ldr	r3, [r7, #16]
 800249c:	1ad3      	subs	r3, r2, r3
 800249e:	2b02      	cmp	r3, #2
 80024a0:	d901      	bls.n	80024a6 <HAL_RCC_OscConfig+0x3d2>
 80024a2:	2303      	movs	r3, #3
 80024a4:	e087      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 80024a6:	4b27      	ldr	r3, [pc, #156]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d1f0      	bne.n	8002494 <HAL_RCC_OscConfig+0x3c0>
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	69da      	ldr	r2, [r3, #28]
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	6a1b      	ldr	r3, [r3, #32]
 80024ba:	431a      	orrs	r2, r3
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024c0:	019b      	lsls	r3, r3, #6
 80024c2:	431a      	orrs	r2, r3
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80024c8:	085b      	lsrs	r3, r3, #1
 80024ca:	3b01      	subs	r3, #1
 80024cc:	041b      	lsls	r3, r3, #16
 80024ce:	431a      	orrs	r2, r3
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80024d4:	061b      	lsls	r3, r3, #24
 80024d6:	491b      	ldr	r1, [pc, #108]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80024d8:	4313      	orrs	r3, r2
 80024da:	604b      	str	r3, [r1, #4]
 80024dc:	4b1b      	ldr	r3, [pc, #108]	@ (800254c <HAL_RCC_OscConfig+0x478>)
 80024de:	2201      	movs	r2, #1
 80024e0:	601a      	str	r2, [r3, #0]
 80024e2:	f7ff fb43 	bl	8001b6c <HAL_GetTick>
 80024e6:	6138      	str	r0, [r7, #16]
 80024e8:	e008      	b.n	80024fc <HAL_RCC_OscConfig+0x428>
 80024ea:	f7ff fb3f 	bl	8001b6c <HAL_GetTick>
 80024ee:	4602      	mov	r2, r0
 80024f0:	693b      	ldr	r3, [r7, #16]
 80024f2:	1ad3      	subs	r3, r2, r3
 80024f4:	2b02      	cmp	r3, #2
 80024f6:	d901      	bls.n	80024fc <HAL_RCC_OscConfig+0x428>
 80024f8:	2303      	movs	r3, #3
 80024fa:	e05c      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 80024fc:	4b11      	ldr	r3, [pc, #68]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002504:	2b00      	cmp	r3, #0
 8002506:	d0f0      	beq.n	80024ea <HAL_RCC_OscConfig+0x416>
 8002508:	e054      	b.n	80025b4 <HAL_RCC_OscConfig+0x4e0>
 800250a:	4b10      	ldr	r3, [pc, #64]	@ (800254c <HAL_RCC_OscConfig+0x478>)
 800250c:	2200      	movs	r2, #0
 800250e:	601a      	str	r2, [r3, #0]
 8002510:	f7ff fb2c 	bl	8001b6c <HAL_GetTick>
 8002514:	6138      	str	r0, [r7, #16]
 8002516:	e008      	b.n	800252a <HAL_RCC_OscConfig+0x456>
 8002518:	f7ff fb28 	bl	8001b6c <HAL_GetTick>
 800251c:	4602      	mov	r2, r0
 800251e:	693b      	ldr	r3, [r7, #16]
 8002520:	1ad3      	subs	r3, r2, r3
 8002522:	2b02      	cmp	r3, #2
 8002524:	d901      	bls.n	800252a <HAL_RCC_OscConfig+0x456>
 8002526:	2303      	movs	r3, #3
 8002528:	e045      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 800252a:	4b06      	ldr	r3, [pc, #24]	@ (8002544 <HAL_RCC_OscConfig+0x470>)
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002532:	2b00      	cmp	r3, #0
 8002534:	d1f0      	bne.n	8002518 <HAL_RCC_OscConfig+0x444>
 8002536:	e03d      	b.n	80025b4 <HAL_RCC_OscConfig+0x4e0>
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	699b      	ldr	r3, [r3, #24]
 800253c:	2b01      	cmp	r3, #1
 800253e:	d107      	bne.n	8002550 <HAL_RCC_OscConfig+0x47c>
 8002540:	2301      	movs	r3, #1
 8002542:	e038      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 8002544:	40023800 	.word	0x40023800
 8002548:	40007000 	.word	0x40007000
 800254c:	42470060 	.word	0x42470060
 8002550:	4b1b      	ldr	r3, [pc, #108]	@ (80025c0 <HAL_RCC_OscConfig+0x4ec>)
 8002552:	685b      	ldr	r3, [r3, #4]
 8002554:	60fb      	str	r3, [r7, #12]
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	699b      	ldr	r3, [r3, #24]
 800255a:	2b01      	cmp	r3, #1
 800255c:	d028      	beq.n	80025b0 <HAL_RCC_OscConfig+0x4dc>
 800255e:	68fb      	ldr	r3, [r7, #12]
 8002560:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	69db      	ldr	r3, [r3, #28]
 8002568:	429a      	cmp	r2, r3
 800256a:	d121      	bne.n	80025b0 <HAL_RCC_OscConfig+0x4dc>
 800256c:	68fb      	ldr	r3, [r7, #12]
 800256e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	6a1b      	ldr	r3, [r3, #32]
 8002576:	429a      	cmp	r2, r3
 8002578:	d11a      	bne.n	80025b0 <HAL_RCC_OscConfig+0x4dc>
 800257a:	68fa      	ldr	r2, [r7, #12]
 800257c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8002580:	4013      	ands	r3, r2
 8002582:	687a      	ldr	r2, [r7, #4]
 8002584:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8002586:	0192      	lsls	r2, r2, #6
 8002588:	4293      	cmp	r3, r2
 800258a:	d111      	bne.n	80025b0 <HAL_RCC_OscConfig+0x4dc>
 800258c:	68fb      	ldr	r3, [r7, #12]
 800258e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002596:	085b      	lsrs	r3, r3, #1
 8002598:	3b01      	subs	r3, #1
 800259a:	041b      	lsls	r3, r3, #16
 800259c:	429a      	cmp	r2, r3
 800259e:	d107      	bne.n	80025b0 <HAL_RCC_OscConfig+0x4dc>
 80025a0:	68fb      	ldr	r3, [r7, #12]
 80025a2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80025aa:	061b      	lsls	r3, r3, #24
 80025ac:	429a      	cmp	r2, r3
 80025ae:	d001      	beq.n	80025b4 <HAL_RCC_OscConfig+0x4e0>
 80025b0:	2301      	movs	r3, #1
 80025b2:	e000      	b.n	80025b6 <HAL_RCC_OscConfig+0x4e2>
 80025b4:	2300      	movs	r3, #0
 80025b6:	4618      	mov	r0, r3
 80025b8:	3718      	adds	r7, #24
 80025ba:	46bd      	mov	sp, r7
 80025bc:	bd80      	pop	{r7, pc}
 80025be:	bf00      	nop
 80025c0:	40023800 	.word	0x40023800

080025c4 <HAL_RCC_ClockConfig>:
 80025c4:	b580      	push	{r7, lr}
 80025c6:	b084      	sub	sp, #16
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	6078      	str	r0, [r7, #4]
 80025cc:	6039      	str	r1, [r7, #0]
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	2b00      	cmp	r3, #0
 80025d2:	d101      	bne.n	80025d8 <HAL_RCC_ClockConfig+0x14>
 80025d4:	2301      	movs	r3, #1
 80025d6:	e0cc      	b.n	8002772 <HAL_RCC_ClockConfig+0x1ae>
 80025d8:	4b68      	ldr	r3, [pc, #416]	@ (800277c <HAL_RCC_ClockConfig+0x1b8>)
 80025da:	681b      	ldr	r3, [r3, #0]
 80025dc:	f003 0307 	and.w	r3, r3, #7
 80025e0:	683a      	ldr	r2, [r7, #0]
 80025e2:	429a      	cmp	r2, r3
 80025e4:	d90c      	bls.n	8002600 <HAL_RCC_ClockConfig+0x3c>
 80025e6:	4b65      	ldr	r3, [pc, #404]	@ (800277c <HAL_RCC_ClockConfig+0x1b8>)
 80025e8:	683a      	ldr	r2, [r7, #0]
 80025ea:	b2d2      	uxtb	r2, r2
 80025ec:	701a      	strb	r2, [r3, #0]
 80025ee:	4b63      	ldr	r3, [pc, #396]	@ (800277c <HAL_RCC_ClockConfig+0x1b8>)
 80025f0:	681b      	ldr	r3, [r3, #0]
 80025f2:	f003 0307 	and.w	r3, r3, #7
 80025f6:	683a      	ldr	r2, [r7, #0]
 80025f8:	429a      	cmp	r2, r3
 80025fa:	d001      	beq.n	8002600 <HAL_RCC_ClockConfig+0x3c>
 80025fc:	2301      	movs	r3, #1
 80025fe:	e0b8      	b.n	8002772 <HAL_RCC_ClockConfig+0x1ae>
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	f003 0302 	and.w	r3, r3, #2
 8002608:	2b00      	cmp	r3, #0
 800260a:	d020      	beq.n	800264e <HAL_RCC_ClockConfig+0x8a>
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	f003 0304 	and.w	r3, r3, #4
 8002614:	2b00      	cmp	r3, #0
 8002616:	d005      	beq.n	8002624 <HAL_RCC_ClockConfig+0x60>
 8002618:	4b59      	ldr	r3, [pc, #356]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 800261a:	689b      	ldr	r3, [r3, #8]
 800261c:	4a58      	ldr	r2, [pc, #352]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 800261e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002622:	6093      	str	r3, [r2, #8]
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	f003 0308 	and.w	r3, r3, #8
 800262c:	2b00      	cmp	r3, #0
 800262e:	d005      	beq.n	800263c <HAL_RCC_ClockConfig+0x78>
 8002630:	4b53      	ldr	r3, [pc, #332]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 8002632:	689b      	ldr	r3, [r3, #8]
 8002634:	4a52      	ldr	r2, [pc, #328]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 8002636:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800263a:	6093      	str	r3, [r2, #8]
 800263c:	4b50      	ldr	r3, [pc, #320]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 800263e:	689b      	ldr	r3, [r3, #8]
 8002640:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	689b      	ldr	r3, [r3, #8]
 8002648:	494d      	ldr	r1, [pc, #308]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 800264a:	4313      	orrs	r3, r2
 800264c:	608b      	str	r3, [r1, #8]
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	681b      	ldr	r3, [r3, #0]
 8002652:	f003 0301 	and.w	r3, r3, #1
 8002656:	2b00      	cmp	r3, #0
 8002658:	d044      	beq.n	80026e4 <HAL_RCC_ClockConfig+0x120>
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	685b      	ldr	r3, [r3, #4]
 800265e:	2b01      	cmp	r3, #1
 8002660:	d107      	bne.n	8002672 <HAL_RCC_ClockConfig+0xae>
 8002662:	4b47      	ldr	r3, [pc, #284]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 8002664:	681b      	ldr	r3, [r3, #0]
 8002666:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800266a:	2b00      	cmp	r3, #0
 800266c:	d119      	bne.n	80026a2 <HAL_RCC_ClockConfig+0xde>
 800266e:	2301      	movs	r3, #1
 8002670:	e07f      	b.n	8002772 <HAL_RCC_ClockConfig+0x1ae>
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	685b      	ldr	r3, [r3, #4]
 8002676:	2b02      	cmp	r3, #2
 8002678:	d003      	beq.n	8002682 <HAL_RCC_ClockConfig+0xbe>
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	685b      	ldr	r3, [r3, #4]
 800267e:	2b03      	cmp	r3, #3
 8002680:	d107      	bne.n	8002692 <HAL_RCC_ClockConfig+0xce>
 8002682:	4b3f      	ldr	r3, [pc, #252]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 8002684:	681b      	ldr	r3, [r3, #0]
 8002686:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800268a:	2b00      	cmp	r3, #0
 800268c:	d109      	bne.n	80026a2 <HAL_RCC_ClockConfig+0xde>
 800268e:	2301      	movs	r3, #1
 8002690:	e06f      	b.n	8002772 <HAL_RCC_ClockConfig+0x1ae>
 8002692:	4b3b      	ldr	r3, [pc, #236]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	f003 0302 	and.w	r3, r3, #2
 800269a:	2b00      	cmp	r3, #0
 800269c:	d101      	bne.n	80026a2 <HAL_RCC_ClockConfig+0xde>
 800269e:	2301      	movs	r3, #1
 80026a0:	e067      	b.n	8002772 <HAL_RCC_ClockConfig+0x1ae>
 80026a2:	4b37      	ldr	r3, [pc, #220]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 80026a4:	689b      	ldr	r3, [r3, #8]
 80026a6:	f023 0203 	bic.w	r2, r3, #3
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	685b      	ldr	r3, [r3, #4]
 80026ae:	4934      	ldr	r1, [pc, #208]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 80026b0:	4313      	orrs	r3, r2
 80026b2:	608b      	str	r3, [r1, #8]
 80026b4:	f7ff fa5a 	bl	8001b6c <HAL_GetTick>
 80026b8:	60f8      	str	r0, [r7, #12]
 80026ba:	e00a      	b.n	80026d2 <HAL_RCC_ClockConfig+0x10e>
 80026bc:	f7ff fa56 	bl	8001b6c <HAL_GetTick>
 80026c0:	4602      	mov	r2, r0
 80026c2:	68fb      	ldr	r3, [r7, #12]
 80026c4:	1ad3      	subs	r3, r2, r3
 80026c6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80026ca:	4293      	cmp	r3, r2
 80026cc:	d901      	bls.n	80026d2 <HAL_RCC_ClockConfig+0x10e>
 80026ce:	2303      	movs	r3, #3
 80026d0:	e04f      	b.n	8002772 <HAL_RCC_ClockConfig+0x1ae>
 80026d2:	4b2b      	ldr	r3, [pc, #172]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 80026d4:	689b      	ldr	r3, [r3, #8]
 80026d6:	f003 020c 	and.w	r2, r3, #12
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	685b      	ldr	r3, [r3, #4]
 80026de:	009b      	lsls	r3, r3, #2
 80026e0:	429a      	cmp	r2, r3
 80026e2:	d1eb      	bne.n	80026bc <HAL_RCC_ClockConfig+0xf8>
 80026e4:	4b25      	ldr	r3, [pc, #148]	@ (800277c <HAL_RCC_ClockConfig+0x1b8>)
 80026e6:	681b      	ldr	r3, [r3, #0]
 80026e8:	f003 0307 	and.w	r3, r3, #7
 80026ec:	683a      	ldr	r2, [r7, #0]
 80026ee:	429a      	cmp	r2, r3
 80026f0:	d20c      	bcs.n	800270c <HAL_RCC_ClockConfig+0x148>
 80026f2:	4b22      	ldr	r3, [pc, #136]	@ (800277c <HAL_RCC_ClockConfig+0x1b8>)
 80026f4:	683a      	ldr	r2, [r7, #0]
 80026f6:	b2d2      	uxtb	r2, r2
 80026f8:	701a      	strb	r2, [r3, #0]
 80026fa:	4b20      	ldr	r3, [pc, #128]	@ (800277c <HAL_RCC_ClockConfig+0x1b8>)
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	f003 0307 	and.w	r3, r3, #7
 8002702:	683a      	ldr	r2, [r7, #0]
 8002704:	429a      	cmp	r2, r3
 8002706:	d001      	beq.n	800270c <HAL_RCC_ClockConfig+0x148>
 8002708:	2301      	movs	r3, #1
 800270a:	e032      	b.n	8002772 <HAL_RCC_ClockConfig+0x1ae>
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	f003 0304 	and.w	r3, r3, #4
 8002714:	2b00      	cmp	r3, #0
 8002716:	d008      	beq.n	800272a <HAL_RCC_ClockConfig+0x166>
 8002718:	4b19      	ldr	r3, [pc, #100]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 800271a:	689b      	ldr	r3, [r3, #8]
 800271c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	68db      	ldr	r3, [r3, #12]
 8002724:	4916      	ldr	r1, [pc, #88]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 8002726:	4313      	orrs	r3, r2
 8002728:	608b      	str	r3, [r1, #8]
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	f003 0308 	and.w	r3, r3, #8
 8002732:	2b00      	cmp	r3, #0
 8002734:	d009      	beq.n	800274a <HAL_RCC_ClockConfig+0x186>
 8002736:	4b12      	ldr	r3, [pc, #72]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 8002738:	689b      	ldr	r3, [r3, #8]
 800273a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	691b      	ldr	r3, [r3, #16]
 8002742:	00db      	lsls	r3, r3, #3
 8002744:	490e      	ldr	r1, [pc, #56]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 8002746:	4313      	orrs	r3, r2
 8002748:	608b      	str	r3, [r1, #8]
 800274a:	f000 f821 	bl	8002790 <HAL_RCC_GetSysClockFreq>
 800274e:	4602      	mov	r2, r0
 8002750:	4b0b      	ldr	r3, [pc, #44]	@ (8002780 <HAL_RCC_ClockConfig+0x1bc>)
 8002752:	689b      	ldr	r3, [r3, #8]
 8002754:	091b      	lsrs	r3, r3, #4
 8002756:	f003 030f 	and.w	r3, r3, #15
 800275a:	490a      	ldr	r1, [pc, #40]	@ (8002784 <HAL_RCC_ClockConfig+0x1c0>)
 800275c:	5ccb      	ldrb	r3, [r1, r3]
 800275e:	fa22 f303 	lsr.w	r3, r2, r3
 8002762:	4a09      	ldr	r2, [pc, #36]	@ (8002788 <HAL_RCC_ClockConfig+0x1c4>)
 8002764:	6013      	str	r3, [r2, #0]
 8002766:	4b09      	ldr	r3, [pc, #36]	@ (800278c <HAL_RCC_ClockConfig+0x1c8>)
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	4618      	mov	r0, r3
 800276c:	f7ff f9ba 	bl	8001ae4 <HAL_InitTick>
 8002770:	2300      	movs	r3, #0
 8002772:	4618      	mov	r0, r3
 8002774:	3710      	adds	r7, #16
 8002776:	46bd      	mov	sp, r7
 8002778:	bd80      	pop	{r7, pc}
 800277a:	bf00      	nop
 800277c:	40023c00 	.word	0x40023c00
 8002780:	40023800 	.word	0x40023800
 8002784:	08004834 	.word	0x08004834
 8002788:	20000020 	.word	0x20000020
 800278c:	20000024 	.word	0x20000024

08002790 <HAL_RCC_GetSysClockFreq>:
 8002790:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002794:	b094      	sub	sp, #80	@ 0x50
 8002796:	af00      	add	r7, sp, #0
 8002798:	2300      	movs	r3, #0
 800279a:	647b      	str	r3, [r7, #68]	@ 0x44
 800279c:	2300      	movs	r3, #0
 800279e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80027a0:	2300      	movs	r3, #0
 80027a2:	643b      	str	r3, [r7, #64]	@ 0x40
 80027a4:	2300      	movs	r3, #0
 80027a6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80027a8:	4b79      	ldr	r3, [pc, #484]	@ (8002990 <HAL_RCC_GetSysClockFreq+0x200>)
 80027aa:	689b      	ldr	r3, [r3, #8]
 80027ac:	f003 030c 	and.w	r3, r3, #12
 80027b0:	2b08      	cmp	r3, #8
 80027b2:	d00d      	beq.n	80027d0 <HAL_RCC_GetSysClockFreq+0x40>
 80027b4:	2b08      	cmp	r3, #8
 80027b6:	f200 80e1 	bhi.w	800297c <HAL_RCC_GetSysClockFreq+0x1ec>
 80027ba:	2b00      	cmp	r3, #0
 80027bc:	d002      	beq.n	80027c4 <HAL_RCC_GetSysClockFreq+0x34>
 80027be:	2b04      	cmp	r3, #4
 80027c0:	d003      	beq.n	80027ca <HAL_RCC_GetSysClockFreq+0x3a>
 80027c2:	e0db      	b.n	800297c <HAL_RCC_GetSysClockFreq+0x1ec>
 80027c4:	4b73      	ldr	r3, [pc, #460]	@ (8002994 <HAL_RCC_GetSysClockFreq+0x204>)
 80027c6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80027c8:	e0db      	b.n	8002982 <HAL_RCC_GetSysClockFreq+0x1f2>
 80027ca:	4b73      	ldr	r3, [pc, #460]	@ (8002998 <HAL_RCC_GetSysClockFreq+0x208>)
 80027cc:	64bb      	str	r3, [r7, #72]	@ 0x48
 80027ce:	e0d8      	b.n	8002982 <HAL_RCC_GetSysClockFreq+0x1f2>
 80027d0:	4b6f      	ldr	r3, [pc, #444]	@ (8002990 <HAL_RCC_GetSysClockFreq+0x200>)
 80027d2:	685b      	ldr	r3, [r3, #4]
 80027d4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80027d8:	647b      	str	r3, [r7, #68]	@ 0x44
 80027da:	4b6d      	ldr	r3, [pc, #436]	@ (8002990 <HAL_RCC_GetSysClockFreq+0x200>)
 80027dc:	685b      	ldr	r3, [r3, #4]
 80027de:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d063      	beq.n	80028ae <HAL_RCC_GetSysClockFreq+0x11e>
 80027e6:	4b6a      	ldr	r3, [pc, #424]	@ (8002990 <HAL_RCC_GetSysClockFreq+0x200>)
 80027e8:	685b      	ldr	r3, [r3, #4]
 80027ea:	099b      	lsrs	r3, r3, #6
 80027ec:	2200      	movs	r2, #0
 80027ee:	63bb      	str	r3, [r7, #56]	@ 0x38
 80027f0:	63fa      	str	r2, [r7, #60]	@ 0x3c
 80027f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80027f4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80027f8:	633b      	str	r3, [r7, #48]	@ 0x30
 80027fa:	2300      	movs	r3, #0
 80027fc:	637b      	str	r3, [r7, #52]	@ 0x34
 80027fe:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8002802:	4622      	mov	r2, r4
 8002804:	462b      	mov	r3, r5
 8002806:	f04f 0000 	mov.w	r0, #0
 800280a:	f04f 0100 	mov.w	r1, #0
 800280e:	0159      	lsls	r1, r3, #5
 8002810:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002814:	0150      	lsls	r0, r2, #5
 8002816:	4602      	mov	r2, r0
 8002818:	460b      	mov	r3, r1
 800281a:	4621      	mov	r1, r4
 800281c:	1a51      	subs	r1, r2, r1
 800281e:	6139      	str	r1, [r7, #16]
 8002820:	4629      	mov	r1, r5
 8002822:	eb63 0301 	sbc.w	r3, r3, r1
 8002826:	617b      	str	r3, [r7, #20]
 8002828:	f04f 0200 	mov.w	r2, #0
 800282c:	f04f 0300 	mov.w	r3, #0
 8002830:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8002834:	4659      	mov	r1, fp
 8002836:	018b      	lsls	r3, r1, #6
 8002838:	4651      	mov	r1, sl
 800283a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800283e:	4651      	mov	r1, sl
 8002840:	018a      	lsls	r2, r1, #6
 8002842:	4651      	mov	r1, sl
 8002844:	ebb2 0801 	subs.w	r8, r2, r1
 8002848:	4659      	mov	r1, fp
 800284a:	eb63 0901 	sbc.w	r9, r3, r1
 800284e:	f04f 0200 	mov.w	r2, #0
 8002852:	f04f 0300 	mov.w	r3, #0
 8002856:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800285a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800285e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002862:	4690      	mov	r8, r2
 8002864:	4699      	mov	r9, r3
 8002866:	4623      	mov	r3, r4
 8002868:	eb18 0303 	adds.w	r3, r8, r3
 800286c:	60bb      	str	r3, [r7, #8]
 800286e:	462b      	mov	r3, r5
 8002870:	eb49 0303 	adc.w	r3, r9, r3
 8002874:	60fb      	str	r3, [r7, #12]
 8002876:	f04f 0200 	mov.w	r2, #0
 800287a:	f04f 0300 	mov.w	r3, #0
 800287e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8002882:	4629      	mov	r1, r5
 8002884:	024b      	lsls	r3, r1, #9
 8002886:	4621      	mov	r1, r4
 8002888:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800288c:	4621      	mov	r1, r4
 800288e:	024a      	lsls	r2, r1, #9
 8002890:	4610      	mov	r0, r2
 8002892:	4619      	mov	r1, r3
 8002894:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8002896:	2200      	movs	r2, #0
 8002898:	62bb      	str	r3, [r7, #40]	@ 0x28
 800289a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800289c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80028a0:	f7fe f8e4 	bl	8000a6c <__aeabi_uldivmod>
 80028a4:	4602      	mov	r2, r0
 80028a6:	460b      	mov	r3, r1
 80028a8:	4613      	mov	r3, r2
 80028aa:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80028ac:	e058      	b.n	8002960 <HAL_RCC_GetSysClockFreq+0x1d0>
 80028ae:	4b38      	ldr	r3, [pc, #224]	@ (8002990 <HAL_RCC_GetSysClockFreq+0x200>)
 80028b0:	685b      	ldr	r3, [r3, #4]
 80028b2:	099b      	lsrs	r3, r3, #6
 80028b4:	2200      	movs	r2, #0
 80028b6:	4618      	mov	r0, r3
 80028b8:	4611      	mov	r1, r2
 80028ba:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80028be:	623b      	str	r3, [r7, #32]
 80028c0:	2300      	movs	r3, #0
 80028c2:	627b      	str	r3, [r7, #36]	@ 0x24
 80028c4:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80028c8:	4642      	mov	r2, r8
 80028ca:	464b      	mov	r3, r9
 80028cc:	f04f 0000 	mov.w	r0, #0
 80028d0:	f04f 0100 	mov.w	r1, #0
 80028d4:	0159      	lsls	r1, r3, #5
 80028d6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80028da:	0150      	lsls	r0, r2, #5
 80028dc:	4602      	mov	r2, r0
 80028de:	460b      	mov	r3, r1
 80028e0:	4641      	mov	r1, r8
 80028e2:	ebb2 0a01 	subs.w	sl, r2, r1
 80028e6:	4649      	mov	r1, r9
 80028e8:	eb63 0b01 	sbc.w	fp, r3, r1
 80028ec:	f04f 0200 	mov.w	r2, #0
 80028f0:	f04f 0300 	mov.w	r3, #0
 80028f4:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80028f8:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80028fc:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8002900:	ebb2 040a 	subs.w	r4, r2, sl
 8002904:	eb63 050b 	sbc.w	r5, r3, fp
 8002908:	f04f 0200 	mov.w	r2, #0
 800290c:	f04f 0300 	mov.w	r3, #0
 8002910:	00eb      	lsls	r3, r5, #3
 8002912:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002916:	00e2      	lsls	r2, r4, #3
 8002918:	4614      	mov	r4, r2
 800291a:	461d      	mov	r5, r3
 800291c:	4643      	mov	r3, r8
 800291e:	18e3      	adds	r3, r4, r3
 8002920:	603b      	str	r3, [r7, #0]
 8002922:	464b      	mov	r3, r9
 8002924:	eb45 0303 	adc.w	r3, r5, r3
 8002928:	607b      	str	r3, [r7, #4]
 800292a:	f04f 0200 	mov.w	r2, #0
 800292e:	f04f 0300 	mov.w	r3, #0
 8002932:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002936:	4629      	mov	r1, r5
 8002938:	028b      	lsls	r3, r1, #10
 800293a:	4621      	mov	r1, r4
 800293c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002940:	4621      	mov	r1, r4
 8002942:	028a      	lsls	r2, r1, #10
 8002944:	4610      	mov	r0, r2
 8002946:	4619      	mov	r1, r3
 8002948:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800294a:	2200      	movs	r2, #0
 800294c:	61bb      	str	r3, [r7, #24]
 800294e:	61fa      	str	r2, [r7, #28]
 8002950:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002954:	f7fe f88a 	bl	8000a6c <__aeabi_uldivmod>
 8002958:	4602      	mov	r2, r0
 800295a:	460b      	mov	r3, r1
 800295c:	4613      	mov	r3, r2
 800295e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002960:	4b0b      	ldr	r3, [pc, #44]	@ (8002990 <HAL_RCC_GetSysClockFreq+0x200>)
 8002962:	685b      	ldr	r3, [r3, #4]
 8002964:	0c1b      	lsrs	r3, r3, #16
 8002966:	f003 0303 	and.w	r3, r3, #3
 800296a:	3301      	adds	r3, #1
 800296c:	005b      	lsls	r3, r3, #1
 800296e:	643b      	str	r3, [r7, #64]	@ 0x40
 8002970:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8002972:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8002974:	fbb2 f3f3 	udiv	r3, r2, r3
 8002978:	64bb      	str	r3, [r7, #72]	@ 0x48
 800297a:	e002      	b.n	8002982 <HAL_RCC_GetSysClockFreq+0x1f2>
 800297c:	4b05      	ldr	r3, [pc, #20]	@ (8002994 <HAL_RCC_GetSysClockFreq+0x204>)
 800297e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002980:	bf00      	nop
 8002982:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8002984:	4618      	mov	r0, r3
 8002986:	3750      	adds	r7, #80	@ 0x50
 8002988:	46bd      	mov	sp, r7
 800298a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800298e:	bf00      	nop
 8002990:	40023800 	.word	0x40023800
 8002994:	00f42400 	.word	0x00f42400
 8002998:	007a1200 	.word	0x007a1200

0800299c <HAL_RCC_GetHCLKFreq>:
 800299c:	b480      	push	{r7}
 800299e:	af00      	add	r7, sp, #0
 80029a0:	4b03      	ldr	r3, [pc, #12]	@ (80029b0 <HAL_RCC_GetHCLKFreq+0x14>)
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	4618      	mov	r0, r3
 80029a6:	46bd      	mov	sp, r7
 80029a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ac:	4770      	bx	lr
 80029ae:	bf00      	nop
 80029b0:	20000020 	.word	0x20000020

080029b4 <HAL_RCC_GetPCLK1Freq>:
 80029b4:	b580      	push	{r7, lr}
 80029b6:	af00      	add	r7, sp, #0
 80029b8:	f7ff fff0 	bl	800299c <HAL_RCC_GetHCLKFreq>
 80029bc:	4602      	mov	r2, r0
 80029be:	4b05      	ldr	r3, [pc, #20]	@ (80029d4 <HAL_RCC_GetPCLK1Freq+0x20>)
 80029c0:	689b      	ldr	r3, [r3, #8]
 80029c2:	0a9b      	lsrs	r3, r3, #10
 80029c4:	f003 0307 	and.w	r3, r3, #7
 80029c8:	4903      	ldr	r1, [pc, #12]	@ (80029d8 <HAL_RCC_GetPCLK1Freq+0x24>)
 80029ca:	5ccb      	ldrb	r3, [r1, r3]
 80029cc:	fa22 f303 	lsr.w	r3, r2, r3
 80029d0:	4618      	mov	r0, r3
 80029d2:	bd80      	pop	{r7, pc}
 80029d4:	40023800 	.word	0x40023800
 80029d8:	08004844 	.word	0x08004844

080029dc <HAL_RCC_GetPCLK2Freq>:
 80029dc:	b580      	push	{r7, lr}
 80029de:	af00      	add	r7, sp, #0
 80029e0:	f7ff ffdc 	bl	800299c <HAL_RCC_GetHCLKFreq>
 80029e4:	4602      	mov	r2, r0
 80029e6:	4b05      	ldr	r3, [pc, #20]	@ (80029fc <HAL_RCC_GetPCLK2Freq+0x20>)
 80029e8:	689b      	ldr	r3, [r3, #8]
 80029ea:	0b5b      	lsrs	r3, r3, #13
 80029ec:	f003 0307 	and.w	r3, r3, #7
 80029f0:	4903      	ldr	r1, [pc, #12]	@ (8002a00 <HAL_RCC_GetPCLK2Freq+0x24>)
 80029f2:	5ccb      	ldrb	r3, [r1, r3]
 80029f4:	fa22 f303 	lsr.w	r3, r2, r3
 80029f8:	4618      	mov	r0, r3
 80029fa:	bd80      	pop	{r7, pc}
 80029fc:	40023800 	.word	0x40023800
 8002a00:	08004844 	.word	0x08004844

08002a04 <HAL_UART_Init>:
 8002a04:	b580      	push	{r7, lr}
 8002a06:	b082      	sub	sp, #8
 8002a08:	af00      	add	r7, sp, #0
 8002a0a:	6078      	str	r0, [r7, #4]
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	2b00      	cmp	r3, #0
 8002a10:	d101      	bne.n	8002a16 <HAL_UART_Init+0x12>
 8002a12:	2301      	movs	r3, #1
 8002a14:	e042      	b.n	8002a9c <HAL_UART_Init+0x98>
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002a1c:	b2db      	uxtb	r3, r3
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d106      	bne.n	8002a30 <HAL_UART_Init+0x2c>
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	2200      	movs	r2, #0
 8002a26:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002a2a:	6878      	ldr	r0, [r7, #4]
 8002a2c:	f7fe fe8a 	bl	8001744 <HAL_UART_MspInit>
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	2224      	movs	r2, #36	@ 0x24
 8002a34:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	681b      	ldr	r3, [r3, #0]
 8002a3c:	68da      	ldr	r2, [r3, #12]
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8002a46:	60da      	str	r2, [r3, #12]
 8002a48:	6878      	ldr	r0, [r7, #4]
 8002a4a:	f000 f973 	bl	8002d34 <UART_SetConfig>
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	691a      	ldr	r2, [r3, #16]
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8002a5c:	611a      	str	r2, [r3, #16]
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	695a      	ldr	r2, [r3, #20]
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8002a6c:	615a      	str	r2, [r3, #20]
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	68da      	ldr	r2, [r3, #12]
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	681b      	ldr	r3, [r3, #0]
 8002a78:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002a7c:	60da      	str	r2, [r3, #12]
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	2200      	movs	r2, #0
 8002a82:	645a      	str	r2, [r3, #68]	@ 0x44
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	2220      	movs	r2, #32
 8002a88:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	2220      	movs	r2, #32
 8002a90:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	2200      	movs	r2, #0
 8002a98:	635a      	str	r2, [r3, #52]	@ 0x34
 8002a9a:	2300      	movs	r3, #0
 8002a9c:	4618      	mov	r0, r3
 8002a9e:	3708      	adds	r7, #8
 8002aa0:	46bd      	mov	sp, r7
 8002aa2:	bd80      	pop	{r7, pc}

08002aa4 <HAL_UART_Transmit>:
 8002aa4:	b580      	push	{r7, lr}
 8002aa6:	b08a      	sub	sp, #40	@ 0x28
 8002aa8:	af02      	add	r7, sp, #8
 8002aaa:	60f8      	str	r0, [r7, #12]
 8002aac:	60b9      	str	r1, [r7, #8]
 8002aae:	603b      	str	r3, [r7, #0]
 8002ab0:	4613      	mov	r3, r2
 8002ab2:	80fb      	strh	r3, [r7, #6]
 8002ab4:	2300      	movs	r3, #0
 8002ab6:	617b      	str	r3, [r7, #20]
 8002ab8:	68fb      	ldr	r3, [r7, #12]
 8002aba:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002abe:	b2db      	uxtb	r3, r3
 8002ac0:	2b20      	cmp	r3, #32
 8002ac2:	d175      	bne.n	8002bb0 <HAL_UART_Transmit+0x10c>
 8002ac4:	68bb      	ldr	r3, [r7, #8]
 8002ac6:	2b00      	cmp	r3, #0
 8002ac8:	d002      	beq.n	8002ad0 <HAL_UART_Transmit+0x2c>
 8002aca:	88fb      	ldrh	r3, [r7, #6]
 8002acc:	2b00      	cmp	r3, #0
 8002ace:	d101      	bne.n	8002ad4 <HAL_UART_Transmit+0x30>
 8002ad0:	2301      	movs	r3, #1
 8002ad2:	e06e      	b.n	8002bb2 <HAL_UART_Transmit+0x10e>
 8002ad4:	68fb      	ldr	r3, [r7, #12]
 8002ad6:	2200      	movs	r2, #0
 8002ad8:	645a      	str	r2, [r3, #68]	@ 0x44
 8002ada:	68fb      	ldr	r3, [r7, #12]
 8002adc:	2221      	movs	r2, #33	@ 0x21
 8002ade:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002ae2:	f7ff f843 	bl	8001b6c <HAL_GetTick>
 8002ae6:	6178      	str	r0, [r7, #20]
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	88fa      	ldrh	r2, [r7, #6]
 8002aec:	849a      	strh	r2, [r3, #36]	@ 0x24
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	88fa      	ldrh	r2, [r7, #6]
 8002af2:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	689b      	ldr	r3, [r3, #8]
 8002af8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002afc:	d108      	bne.n	8002b10 <HAL_UART_Transmit+0x6c>
 8002afe:	68fb      	ldr	r3, [r7, #12]
 8002b00:	691b      	ldr	r3, [r3, #16]
 8002b02:	2b00      	cmp	r3, #0
 8002b04:	d104      	bne.n	8002b10 <HAL_UART_Transmit+0x6c>
 8002b06:	2300      	movs	r3, #0
 8002b08:	61fb      	str	r3, [r7, #28]
 8002b0a:	68bb      	ldr	r3, [r7, #8]
 8002b0c:	61bb      	str	r3, [r7, #24]
 8002b0e:	e003      	b.n	8002b18 <HAL_UART_Transmit+0x74>
 8002b10:	68bb      	ldr	r3, [r7, #8]
 8002b12:	61fb      	str	r3, [r7, #28]
 8002b14:	2300      	movs	r3, #0
 8002b16:	61bb      	str	r3, [r7, #24]
 8002b18:	e02e      	b.n	8002b78 <HAL_UART_Transmit+0xd4>
 8002b1a:	683b      	ldr	r3, [r7, #0]
 8002b1c:	9300      	str	r3, [sp, #0]
 8002b1e:	697b      	ldr	r3, [r7, #20]
 8002b20:	2200      	movs	r2, #0
 8002b22:	2180      	movs	r1, #128	@ 0x80
 8002b24:	68f8      	ldr	r0, [r7, #12]
 8002b26:	f000 f848 	bl	8002bba <UART_WaitOnFlagUntilTimeout>
 8002b2a:	4603      	mov	r3, r0
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	d005      	beq.n	8002b3c <HAL_UART_Transmit+0x98>
 8002b30:	68fb      	ldr	r3, [r7, #12]
 8002b32:	2220      	movs	r2, #32
 8002b34:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002b38:	2303      	movs	r3, #3
 8002b3a:	e03a      	b.n	8002bb2 <HAL_UART_Transmit+0x10e>
 8002b3c:	69fb      	ldr	r3, [r7, #28]
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	d10b      	bne.n	8002b5a <HAL_UART_Transmit+0xb6>
 8002b42:	69bb      	ldr	r3, [r7, #24]
 8002b44:	881b      	ldrh	r3, [r3, #0]
 8002b46:	461a      	mov	r2, r3
 8002b48:	68fb      	ldr	r3, [r7, #12]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002b50:	605a      	str	r2, [r3, #4]
 8002b52:	69bb      	ldr	r3, [r7, #24]
 8002b54:	3302      	adds	r3, #2
 8002b56:	61bb      	str	r3, [r7, #24]
 8002b58:	e007      	b.n	8002b6a <HAL_UART_Transmit+0xc6>
 8002b5a:	69fb      	ldr	r3, [r7, #28]
 8002b5c:	781a      	ldrb	r2, [r3, #0]
 8002b5e:	68fb      	ldr	r3, [r7, #12]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	605a      	str	r2, [r3, #4]
 8002b64:	69fb      	ldr	r3, [r7, #28]
 8002b66:	3301      	adds	r3, #1
 8002b68:	61fb      	str	r3, [r7, #28]
 8002b6a:	68fb      	ldr	r3, [r7, #12]
 8002b6c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8002b6e:	b29b      	uxth	r3, r3
 8002b70:	3b01      	subs	r3, #1
 8002b72:	b29a      	uxth	r2, r3
 8002b74:	68fb      	ldr	r3, [r7, #12]
 8002b76:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8002b7c:	b29b      	uxth	r3, r3
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d1cb      	bne.n	8002b1a <HAL_UART_Transmit+0x76>
 8002b82:	683b      	ldr	r3, [r7, #0]
 8002b84:	9300      	str	r3, [sp, #0]
 8002b86:	697b      	ldr	r3, [r7, #20]
 8002b88:	2200      	movs	r2, #0
 8002b8a:	2140      	movs	r1, #64	@ 0x40
 8002b8c:	68f8      	ldr	r0, [r7, #12]
 8002b8e:	f000 f814 	bl	8002bba <UART_WaitOnFlagUntilTimeout>
 8002b92:	4603      	mov	r3, r0
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d005      	beq.n	8002ba4 <HAL_UART_Transmit+0x100>
 8002b98:	68fb      	ldr	r3, [r7, #12]
 8002b9a:	2220      	movs	r2, #32
 8002b9c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002ba0:	2303      	movs	r3, #3
 8002ba2:	e006      	b.n	8002bb2 <HAL_UART_Transmit+0x10e>
 8002ba4:	68fb      	ldr	r3, [r7, #12]
 8002ba6:	2220      	movs	r2, #32
 8002ba8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002bac:	2300      	movs	r3, #0
 8002bae:	e000      	b.n	8002bb2 <HAL_UART_Transmit+0x10e>
 8002bb0:	2302      	movs	r3, #2
 8002bb2:	4618      	mov	r0, r3
 8002bb4:	3720      	adds	r7, #32
 8002bb6:	46bd      	mov	sp, r7
 8002bb8:	bd80      	pop	{r7, pc}

08002bba <UART_WaitOnFlagUntilTimeout>:
 8002bba:	b580      	push	{r7, lr}
 8002bbc:	b086      	sub	sp, #24
 8002bbe:	af00      	add	r7, sp, #0
 8002bc0:	60f8      	str	r0, [r7, #12]
 8002bc2:	60b9      	str	r1, [r7, #8]
 8002bc4:	603b      	str	r3, [r7, #0]
 8002bc6:	4613      	mov	r3, r2
 8002bc8:	71fb      	strb	r3, [r7, #7]
 8002bca:	e03b      	b.n	8002c44 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002bcc:	6a3b      	ldr	r3, [r7, #32]
 8002bce:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002bd2:	d037      	beq.n	8002c44 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002bd4:	f7fe ffca 	bl	8001b6c <HAL_GetTick>
 8002bd8:	4602      	mov	r2, r0
 8002bda:	683b      	ldr	r3, [r7, #0]
 8002bdc:	1ad3      	subs	r3, r2, r3
 8002bde:	6a3a      	ldr	r2, [r7, #32]
 8002be0:	429a      	cmp	r2, r3
 8002be2:	d302      	bcc.n	8002bea <UART_WaitOnFlagUntilTimeout+0x30>
 8002be4:	6a3b      	ldr	r3, [r7, #32]
 8002be6:	2b00      	cmp	r3, #0
 8002be8:	d101      	bne.n	8002bee <UART_WaitOnFlagUntilTimeout+0x34>
 8002bea:	2303      	movs	r3, #3
 8002bec:	e03a      	b.n	8002c64 <UART_WaitOnFlagUntilTimeout+0xaa>
 8002bee:	68fb      	ldr	r3, [r7, #12]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	68db      	ldr	r3, [r3, #12]
 8002bf4:	f003 0304 	and.w	r3, r3, #4
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	d023      	beq.n	8002c44 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002bfc:	68bb      	ldr	r3, [r7, #8]
 8002bfe:	2b80      	cmp	r3, #128	@ 0x80
 8002c00:	d020      	beq.n	8002c44 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002c02:	68bb      	ldr	r3, [r7, #8]
 8002c04:	2b40      	cmp	r3, #64	@ 0x40
 8002c06:	d01d      	beq.n	8002c44 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002c08:	68fb      	ldr	r3, [r7, #12]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	f003 0308 	and.w	r3, r3, #8
 8002c12:	2b08      	cmp	r3, #8
 8002c14:	d116      	bne.n	8002c44 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002c16:	2300      	movs	r3, #0
 8002c18:	617b      	str	r3, [r7, #20]
 8002c1a:	68fb      	ldr	r3, [r7, #12]
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	617b      	str	r3, [r7, #20]
 8002c22:	68fb      	ldr	r3, [r7, #12]
 8002c24:	681b      	ldr	r3, [r3, #0]
 8002c26:	685b      	ldr	r3, [r3, #4]
 8002c28:	617b      	str	r3, [r7, #20]
 8002c2a:	697b      	ldr	r3, [r7, #20]
 8002c2c:	68f8      	ldr	r0, [r7, #12]
 8002c2e:	f000 f81d 	bl	8002c6c <UART_EndRxTransfer>
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	2208      	movs	r2, #8
 8002c36:	645a      	str	r2, [r3, #68]	@ 0x44
 8002c38:	68fb      	ldr	r3, [r7, #12]
 8002c3a:	2200      	movs	r2, #0
 8002c3c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002c40:	2301      	movs	r3, #1
 8002c42:	e00f      	b.n	8002c64 <UART_WaitOnFlagUntilTimeout+0xaa>
 8002c44:	68fb      	ldr	r3, [r7, #12]
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	681a      	ldr	r2, [r3, #0]
 8002c4a:	68bb      	ldr	r3, [r7, #8]
 8002c4c:	4013      	ands	r3, r2
 8002c4e:	68ba      	ldr	r2, [r7, #8]
 8002c50:	429a      	cmp	r2, r3
 8002c52:	bf0c      	ite	eq
 8002c54:	2301      	moveq	r3, #1
 8002c56:	2300      	movne	r3, #0
 8002c58:	b2db      	uxtb	r3, r3
 8002c5a:	461a      	mov	r2, r3
 8002c5c:	79fb      	ldrb	r3, [r7, #7]
 8002c5e:	429a      	cmp	r2, r3
 8002c60:	d0b4      	beq.n	8002bcc <UART_WaitOnFlagUntilTimeout+0x12>
 8002c62:	2300      	movs	r3, #0
 8002c64:	4618      	mov	r0, r3
 8002c66:	3718      	adds	r7, #24
 8002c68:	46bd      	mov	sp, r7
 8002c6a:	bd80      	pop	{r7, pc}

08002c6c <UART_EndRxTransfer>:
 8002c6c:	b480      	push	{r7}
 8002c6e:	b095      	sub	sp, #84	@ 0x54
 8002c70:	af00      	add	r7, sp, #0
 8002c72:	6078      	str	r0, [r7, #4]
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	330c      	adds	r3, #12
 8002c7a:	637b      	str	r3, [r7, #52]	@ 0x34
 8002c7c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002c7e:	e853 3f00 	ldrex	r3, [r3]
 8002c82:	633b      	str	r3, [r7, #48]	@ 0x30
 8002c84:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002c86:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8002c8a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	330c      	adds	r3, #12
 8002c92:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8002c94:	643a      	str	r2, [r7, #64]	@ 0x40
 8002c96:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002c98:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8002c9a:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8002c9c:	e841 2300 	strex	r3, r2, [r1]
 8002ca0:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002ca2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	d1e5      	bne.n	8002c74 <UART_EndRxTransfer+0x8>
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	681b      	ldr	r3, [r3, #0]
 8002cac:	3314      	adds	r3, #20
 8002cae:	623b      	str	r3, [r7, #32]
 8002cb0:	6a3b      	ldr	r3, [r7, #32]
 8002cb2:	e853 3f00 	ldrex	r3, [r3]
 8002cb6:	61fb      	str	r3, [r7, #28]
 8002cb8:	69fb      	ldr	r3, [r7, #28]
 8002cba:	f023 0301 	bic.w	r3, r3, #1
 8002cbe:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	3314      	adds	r3, #20
 8002cc6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8002cc8:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8002cca:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002ccc:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8002cce:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8002cd0:	e841 2300 	strex	r3, r2, [r1]
 8002cd4:	627b      	str	r3, [r7, #36]	@ 0x24
 8002cd6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002cd8:	2b00      	cmp	r3, #0
 8002cda:	d1e5      	bne.n	8002ca8 <UART_EndRxTransfer+0x3c>
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ce0:	2b01      	cmp	r3, #1
 8002ce2:	d119      	bne.n	8002d18 <UART_EndRxTransfer+0xac>
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	330c      	adds	r3, #12
 8002cea:	60fb      	str	r3, [r7, #12]
 8002cec:	68fb      	ldr	r3, [r7, #12]
 8002cee:	e853 3f00 	ldrex	r3, [r3]
 8002cf2:	60bb      	str	r3, [r7, #8]
 8002cf4:	68bb      	ldr	r3, [r7, #8]
 8002cf6:	f023 0310 	bic.w	r3, r3, #16
 8002cfa:	647b      	str	r3, [r7, #68]	@ 0x44
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	330c      	adds	r3, #12
 8002d02:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8002d04:	61ba      	str	r2, [r7, #24]
 8002d06:	617b      	str	r3, [r7, #20]
 8002d08:	6979      	ldr	r1, [r7, #20]
 8002d0a:	69ba      	ldr	r2, [r7, #24]
 8002d0c:	e841 2300 	strex	r3, r2, [r1]
 8002d10:	613b      	str	r3, [r7, #16]
 8002d12:	693b      	ldr	r3, [r7, #16]
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d1e5      	bne.n	8002ce4 <UART_EndRxTransfer+0x78>
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	2220      	movs	r2, #32
 8002d1c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	2200      	movs	r2, #0
 8002d24:	631a      	str	r2, [r3, #48]	@ 0x30
 8002d26:	bf00      	nop
 8002d28:	3754      	adds	r7, #84	@ 0x54
 8002d2a:	46bd      	mov	sp, r7
 8002d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d30:	4770      	bx	lr
	...

08002d34 <UART_SetConfig>:
 8002d34:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002d38:	b0c0      	sub	sp, #256	@ 0x100
 8002d3a:	af00      	add	r7, sp, #0
 8002d3c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8002d40:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	691b      	ldr	r3, [r3, #16]
 8002d48:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8002d4c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002d50:	68d9      	ldr	r1, [r3, #12]
 8002d52:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002d56:	681a      	ldr	r2, [r3, #0]
 8002d58:	ea40 0301 	orr.w	r3, r0, r1
 8002d5c:	6113      	str	r3, [r2, #16]
 8002d5e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002d62:	689a      	ldr	r2, [r3, #8]
 8002d64:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002d68:	691b      	ldr	r3, [r3, #16]
 8002d6a:	431a      	orrs	r2, r3
 8002d6c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002d70:	695b      	ldr	r3, [r3, #20]
 8002d72:	431a      	orrs	r2, r3
 8002d74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002d78:	69db      	ldr	r3, [r3, #28]
 8002d7a:	4313      	orrs	r3, r2
 8002d7c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8002d80:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002d84:	681b      	ldr	r3, [r3, #0]
 8002d86:	68db      	ldr	r3, [r3, #12]
 8002d88:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8002d8c:	f021 010c 	bic.w	r1, r1, #12
 8002d90:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002d94:	681a      	ldr	r2, [r3, #0]
 8002d96:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8002d9a:	430b      	orrs	r3, r1
 8002d9c:	60d3      	str	r3, [r2, #12]
 8002d9e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	695b      	ldr	r3, [r3, #20]
 8002da6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8002daa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002dae:	6999      	ldr	r1, [r3, #24]
 8002db0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002db4:	681a      	ldr	r2, [r3, #0]
 8002db6:	ea40 0301 	orr.w	r3, r0, r1
 8002dba:	6153      	str	r3, [r2, #20]
 8002dbc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002dc0:	681a      	ldr	r2, [r3, #0]
 8002dc2:	4b8f      	ldr	r3, [pc, #572]	@ (8003000 <UART_SetConfig+0x2cc>)
 8002dc4:	429a      	cmp	r2, r3
 8002dc6:	d005      	beq.n	8002dd4 <UART_SetConfig+0xa0>
 8002dc8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002dcc:	681a      	ldr	r2, [r3, #0]
 8002dce:	4b8d      	ldr	r3, [pc, #564]	@ (8003004 <UART_SetConfig+0x2d0>)
 8002dd0:	429a      	cmp	r2, r3
 8002dd2:	d104      	bne.n	8002dde <UART_SetConfig+0xaa>
 8002dd4:	f7ff fe02 	bl	80029dc <HAL_RCC_GetPCLK2Freq>
 8002dd8:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8002ddc:	e003      	b.n	8002de6 <UART_SetConfig+0xb2>
 8002dde:	f7ff fde9 	bl	80029b4 <HAL_RCC_GetPCLK1Freq>
 8002de2:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8002de6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002dea:	69db      	ldr	r3, [r3, #28]
 8002dec:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8002df0:	f040 810c 	bne.w	800300c <UART_SetConfig+0x2d8>
 8002df4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8002df8:	2200      	movs	r2, #0
 8002dfa:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8002dfe:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8002e02:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8002e06:	4622      	mov	r2, r4
 8002e08:	462b      	mov	r3, r5
 8002e0a:	1891      	adds	r1, r2, r2
 8002e0c:	65b9      	str	r1, [r7, #88]	@ 0x58
 8002e0e:	415b      	adcs	r3, r3
 8002e10:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8002e12:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8002e16:	4621      	mov	r1, r4
 8002e18:	eb12 0801 	adds.w	r8, r2, r1
 8002e1c:	4629      	mov	r1, r5
 8002e1e:	eb43 0901 	adc.w	r9, r3, r1
 8002e22:	f04f 0200 	mov.w	r2, #0
 8002e26:	f04f 0300 	mov.w	r3, #0
 8002e2a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002e2e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002e32:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002e36:	4690      	mov	r8, r2
 8002e38:	4699      	mov	r9, r3
 8002e3a:	4623      	mov	r3, r4
 8002e3c:	eb18 0303 	adds.w	r3, r8, r3
 8002e40:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8002e44:	462b      	mov	r3, r5
 8002e46:	eb49 0303 	adc.w	r3, r9, r3
 8002e4a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8002e4e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002e52:	685b      	ldr	r3, [r3, #4]
 8002e54:	2200      	movs	r2, #0
 8002e56:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002e5a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8002e5e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8002e62:	460b      	mov	r3, r1
 8002e64:	18db      	adds	r3, r3, r3
 8002e66:	653b      	str	r3, [r7, #80]	@ 0x50
 8002e68:	4613      	mov	r3, r2
 8002e6a:	eb42 0303 	adc.w	r3, r2, r3
 8002e6e:	657b      	str	r3, [r7, #84]	@ 0x54
 8002e70:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8002e74:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8002e78:	f7fd fdf8 	bl	8000a6c <__aeabi_uldivmod>
 8002e7c:	4602      	mov	r2, r0
 8002e7e:	460b      	mov	r3, r1
 8002e80:	4b61      	ldr	r3, [pc, #388]	@ (8003008 <UART_SetConfig+0x2d4>)
 8002e82:	fba3 2302 	umull	r2, r3, r3, r2
 8002e86:	095b      	lsrs	r3, r3, #5
 8002e88:	011c      	lsls	r4, r3, #4
 8002e8a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8002e8e:	2200      	movs	r2, #0
 8002e90:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8002e94:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8002e98:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8002e9c:	4642      	mov	r2, r8
 8002e9e:	464b      	mov	r3, r9
 8002ea0:	1891      	adds	r1, r2, r2
 8002ea2:	64b9      	str	r1, [r7, #72]	@ 0x48
 8002ea4:	415b      	adcs	r3, r3
 8002ea6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002ea8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8002eac:	4641      	mov	r1, r8
 8002eae:	eb12 0a01 	adds.w	sl, r2, r1
 8002eb2:	4649      	mov	r1, r9
 8002eb4:	eb43 0b01 	adc.w	fp, r3, r1
 8002eb8:	f04f 0200 	mov.w	r2, #0
 8002ebc:	f04f 0300 	mov.w	r3, #0
 8002ec0:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8002ec4:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8002ec8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8002ecc:	4692      	mov	sl, r2
 8002ece:	469b      	mov	fp, r3
 8002ed0:	4643      	mov	r3, r8
 8002ed2:	eb1a 0303 	adds.w	r3, sl, r3
 8002ed6:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8002eda:	464b      	mov	r3, r9
 8002edc:	eb4b 0303 	adc.w	r3, fp, r3
 8002ee0:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8002ee4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002ee8:	685b      	ldr	r3, [r3, #4]
 8002eea:	2200      	movs	r2, #0
 8002eec:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8002ef0:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8002ef4:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8002ef8:	460b      	mov	r3, r1
 8002efa:	18db      	adds	r3, r3, r3
 8002efc:	643b      	str	r3, [r7, #64]	@ 0x40
 8002efe:	4613      	mov	r3, r2
 8002f00:	eb42 0303 	adc.w	r3, r2, r3
 8002f04:	647b      	str	r3, [r7, #68]	@ 0x44
 8002f06:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8002f0a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8002f0e:	f7fd fdad 	bl	8000a6c <__aeabi_uldivmod>
 8002f12:	4602      	mov	r2, r0
 8002f14:	460b      	mov	r3, r1
 8002f16:	4611      	mov	r1, r2
 8002f18:	4b3b      	ldr	r3, [pc, #236]	@ (8003008 <UART_SetConfig+0x2d4>)
 8002f1a:	fba3 2301 	umull	r2, r3, r3, r1
 8002f1e:	095b      	lsrs	r3, r3, #5
 8002f20:	2264      	movs	r2, #100	@ 0x64
 8002f22:	fb02 f303 	mul.w	r3, r2, r3
 8002f26:	1acb      	subs	r3, r1, r3
 8002f28:	00db      	lsls	r3, r3, #3
 8002f2a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8002f2e:	4b36      	ldr	r3, [pc, #216]	@ (8003008 <UART_SetConfig+0x2d4>)
 8002f30:	fba3 2302 	umull	r2, r3, r3, r2
 8002f34:	095b      	lsrs	r3, r3, #5
 8002f36:	005b      	lsls	r3, r3, #1
 8002f38:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8002f3c:	441c      	add	r4, r3
 8002f3e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8002f42:	2200      	movs	r2, #0
 8002f44:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8002f48:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8002f4c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8002f50:	4642      	mov	r2, r8
 8002f52:	464b      	mov	r3, r9
 8002f54:	1891      	adds	r1, r2, r2
 8002f56:	63b9      	str	r1, [r7, #56]	@ 0x38
 8002f58:	415b      	adcs	r3, r3
 8002f5a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002f5c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8002f60:	4641      	mov	r1, r8
 8002f62:	1851      	adds	r1, r2, r1
 8002f64:	6339      	str	r1, [r7, #48]	@ 0x30
 8002f66:	4649      	mov	r1, r9
 8002f68:	414b      	adcs	r3, r1
 8002f6a:	637b      	str	r3, [r7, #52]	@ 0x34
 8002f6c:	f04f 0200 	mov.w	r2, #0
 8002f70:	f04f 0300 	mov.w	r3, #0
 8002f74:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8002f78:	4659      	mov	r1, fp
 8002f7a:	00cb      	lsls	r3, r1, #3
 8002f7c:	4651      	mov	r1, sl
 8002f7e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8002f82:	4651      	mov	r1, sl
 8002f84:	00ca      	lsls	r2, r1, #3
 8002f86:	4610      	mov	r0, r2
 8002f88:	4619      	mov	r1, r3
 8002f8a:	4603      	mov	r3, r0
 8002f8c:	4642      	mov	r2, r8
 8002f8e:	189b      	adds	r3, r3, r2
 8002f90:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002f94:	464b      	mov	r3, r9
 8002f96:	460a      	mov	r2, r1
 8002f98:	eb42 0303 	adc.w	r3, r2, r3
 8002f9c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002fa0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002fa4:	685b      	ldr	r3, [r3, #4]
 8002fa6:	2200      	movs	r2, #0
 8002fa8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8002fac:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8002fb0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8002fb4:	460b      	mov	r3, r1
 8002fb6:	18db      	adds	r3, r3, r3
 8002fb8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002fba:	4613      	mov	r3, r2
 8002fbc:	eb42 0303 	adc.w	r3, r2, r3
 8002fc0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002fc2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8002fc6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8002fca:	f7fd fd4f 	bl	8000a6c <__aeabi_uldivmod>
 8002fce:	4602      	mov	r2, r0
 8002fd0:	460b      	mov	r3, r1
 8002fd2:	4b0d      	ldr	r3, [pc, #52]	@ (8003008 <UART_SetConfig+0x2d4>)
 8002fd4:	fba3 1302 	umull	r1, r3, r3, r2
 8002fd8:	095b      	lsrs	r3, r3, #5
 8002fda:	2164      	movs	r1, #100	@ 0x64
 8002fdc:	fb01 f303 	mul.w	r3, r1, r3
 8002fe0:	1ad3      	subs	r3, r2, r3
 8002fe2:	00db      	lsls	r3, r3, #3
 8002fe4:	3332      	adds	r3, #50	@ 0x32
 8002fe6:	4a08      	ldr	r2, [pc, #32]	@ (8003008 <UART_SetConfig+0x2d4>)
 8002fe8:	fba2 2303 	umull	r2, r3, r2, r3
 8002fec:	095b      	lsrs	r3, r3, #5
 8002fee:	f003 0207 	and.w	r2, r3, #7
 8002ff2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	4422      	add	r2, r4
 8002ffa:	609a      	str	r2, [r3, #8]
 8002ffc:	e106      	b.n	800320c <UART_SetConfig+0x4d8>
 8002ffe:	bf00      	nop
 8003000:	40011000 	.word	0x40011000
 8003004:	40011400 	.word	0x40011400
 8003008:	51eb851f 	.word	0x51eb851f
 800300c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003010:	2200      	movs	r2, #0
 8003012:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003016:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800301a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800301e:	4642      	mov	r2, r8
 8003020:	464b      	mov	r3, r9
 8003022:	1891      	adds	r1, r2, r2
 8003024:	6239      	str	r1, [r7, #32]
 8003026:	415b      	adcs	r3, r3
 8003028:	627b      	str	r3, [r7, #36]	@ 0x24
 800302a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800302e:	4641      	mov	r1, r8
 8003030:	1854      	adds	r4, r2, r1
 8003032:	4649      	mov	r1, r9
 8003034:	eb43 0501 	adc.w	r5, r3, r1
 8003038:	f04f 0200 	mov.w	r2, #0
 800303c:	f04f 0300 	mov.w	r3, #0
 8003040:	00eb      	lsls	r3, r5, #3
 8003042:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003046:	00e2      	lsls	r2, r4, #3
 8003048:	4614      	mov	r4, r2
 800304a:	461d      	mov	r5, r3
 800304c:	4643      	mov	r3, r8
 800304e:	18e3      	adds	r3, r4, r3
 8003050:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003054:	464b      	mov	r3, r9
 8003056:	eb45 0303 	adc.w	r3, r5, r3
 800305a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800305e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003062:	685b      	ldr	r3, [r3, #4]
 8003064:	2200      	movs	r2, #0
 8003066:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800306a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800306e:	f04f 0200 	mov.w	r2, #0
 8003072:	f04f 0300 	mov.w	r3, #0
 8003076:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800307a:	4629      	mov	r1, r5
 800307c:	008b      	lsls	r3, r1, #2
 800307e:	4621      	mov	r1, r4
 8003080:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003084:	4621      	mov	r1, r4
 8003086:	008a      	lsls	r2, r1, #2
 8003088:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 800308c:	f7fd fcee 	bl	8000a6c <__aeabi_uldivmod>
 8003090:	4602      	mov	r2, r0
 8003092:	460b      	mov	r3, r1
 8003094:	4b60      	ldr	r3, [pc, #384]	@ (8003218 <UART_SetConfig+0x4e4>)
 8003096:	fba3 2302 	umull	r2, r3, r3, r2
 800309a:	095b      	lsrs	r3, r3, #5
 800309c:	011c      	lsls	r4, r3, #4
 800309e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80030a2:	2200      	movs	r2, #0
 80030a4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80030a8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80030ac:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80030b0:	4642      	mov	r2, r8
 80030b2:	464b      	mov	r3, r9
 80030b4:	1891      	adds	r1, r2, r2
 80030b6:	61b9      	str	r1, [r7, #24]
 80030b8:	415b      	adcs	r3, r3
 80030ba:	61fb      	str	r3, [r7, #28]
 80030bc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80030c0:	4641      	mov	r1, r8
 80030c2:	1851      	adds	r1, r2, r1
 80030c4:	6139      	str	r1, [r7, #16]
 80030c6:	4649      	mov	r1, r9
 80030c8:	414b      	adcs	r3, r1
 80030ca:	617b      	str	r3, [r7, #20]
 80030cc:	f04f 0200 	mov.w	r2, #0
 80030d0:	f04f 0300 	mov.w	r3, #0
 80030d4:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80030d8:	4659      	mov	r1, fp
 80030da:	00cb      	lsls	r3, r1, #3
 80030dc:	4651      	mov	r1, sl
 80030de:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80030e2:	4651      	mov	r1, sl
 80030e4:	00ca      	lsls	r2, r1, #3
 80030e6:	4610      	mov	r0, r2
 80030e8:	4619      	mov	r1, r3
 80030ea:	4603      	mov	r3, r0
 80030ec:	4642      	mov	r2, r8
 80030ee:	189b      	adds	r3, r3, r2
 80030f0:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80030f4:	464b      	mov	r3, r9
 80030f6:	460a      	mov	r2, r1
 80030f8:	eb42 0303 	adc.w	r3, r2, r3
 80030fc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003100:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003104:	685b      	ldr	r3, [r3, #4]
 8003106:	2200      	movs	r2, #0
 8003108:	67bb      	str	r3, [r7, #120]	@ 0x78
 800310a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800310c:	f04f 0200 	mov.w	r2, #0
 8003110:	f04f 0300 	mov.w	r3, #0
 8003114:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8003118:	4649      	mov	r1, r9
 800311a:	008b      	lsls	r3, r1, #2
 800311c:	4641      	mov	r1, r8
 800311e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8003122:	4641      	mov	r1, r8
 8003124:	008a      	lsls	r2, r1, #2
 8003126:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800312a:	f7fd fc9f 	bl	8000a6c <__aeabi_uldivmod>
 800312e:	4602      	mov	r2, r0
 8003130:	460b      	mov	r3, r1
 8003132:	4611      	mov	r1, r2
 8003134:	4b38      	ldr	r3, [pc, #224]	@ (8003218 <UART_SetConfig+0x4e4>)
 8003136:	fba3 2301 	umull	r2, r3, r3, r1
 800313a:	095b      	lsrs	r3, r3, #5
 800313c:	2264      	movs	r2, #100	@ 0x64
 800313e:	fb02 f303 	mul.w	r3, r2, r3
 8003142:	1acb      	subs	r3, r1, r3
 8003144:	011b      	lsls	r3, r3, #4
 8003146:	3332      	adds	r3, #50	@ 0x32
 8003148:	4a33      	ldr	r2, [pc, #204]	@ (8003218 <UART_SetConfig+0x4e4>)
 800314a:	fba2 2303 	umull	r2, r3, r2, r3
 800314e:	095b      	lsrs	r3, r3, #5
 8003150:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003154:	441c      	add	r4, r3
 8003156:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800315a:	2200      	movs	r2, #0
 800315c:	673b      	str	r3, [r7, #112]	@ 0x70
 800315e:	677a      	str	r2, [r7, #116]	@ 0x74
 8003160:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8003164:	4642      	mov	r2, r8
 8003166:	464b      	mov	r3, r9
 8003168:	1891      	adds	r1, r2, r2
 800316a:	60b9      	str	r1, [r7, #8]
 800316c:	415b      	adcs	r3, r3
 800316e:	60fb      	str	r3, [r7, #12]
 8003170:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003174:	4641      	mov	r1, r8
 8003176:	1851      	adds	r1, r2, r1
 8003178:	6039      	str	r1, [r7, #0]
 800317a:	4649      	mov	r1, r9
 800317c:	414b      	adcs	r3, r1
 800317e:	607b      	str	r3, [r7, #4]
 8003180:	f04f 0200 	mov.w	r2, #0
 8003184:	f04f 0300 	mov.w	r3, #0
 8003188:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800318c:	4659      	mov	r1, fp
 800318e:	00cb      	lsls	r3, r1, #3
 8003190:	4651      	mov	r1, sl
 8003192:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003196:	4651      	mov	r1, sl
 8003198:	00ca      	lsls	r2, r1, #3
 800319a:	4610      	mov	r0, r2
 800319c:	4619      	mov	r1, r3
 800319e:	4603      	mov	r3, r0
 80031a0:	4642      	mov	r2, r8
 80031a2:	189b      	adds	r3, r3, r2
 80031a4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80031a6:	464b      	mov	r3, r9
 80031a8:	460a      	mov	r2, r1
 80031aa:	eb42 0303 	adc.w	r3, r2, r3
 80031ae:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80031b0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80031b4:	685b      	ldr	r3, [r3, #4]
 80031b6:	2200      	movs	r2, #0
 80031b8:	663b      	str	r3, [r7, #96]	@ 0x60
 80031ba:	667a      	str	r2, [r7, #100]	@ 0x64
 80031bc:	f04f 0200 	mov.w	r2, #0
 80031c0:	f04f 0300 	mov.w	r3, #0
 80031c4:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80031c8:	4649      	mov	r1, r9
 80031ca:	008b      	lsls	r3, r1, #2
 80031cc:	4641      	mov	r1, r8
 80031ce:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80031d2:	4641      	mov	r1, r8
 80031d4:	008a      	lsls	r2, r1, #2
 80031d6:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80031da:	f7fd fc47 	bl	8000a6c <__aeabi_uldivmod>
 80031de:	4602      	mov	r2, r0
 80031e0:	460b      	mov	r3, r1
 80031e2:	4b0d      	ldr	r3, [pc, #52]	@ (8003218 <UART_SetConfig+0x4e4>)
 80031e4:	fba3 1302 	umull	r1, r3, r3, r2
 80031e8:	095b      	lsrs	r3, r3, #5
 80031ea:	2164      	movs	r1, #100	@ 0x64
 80031ec:	fb01 f303 	mul.w	r3, r1, r3
 80031f0:	1ad3      	subs	r3, r2, r3
 80031f2:	011b      	lsls	r3, r3, #4
 80031f4:	3332      	adds	r3, #50	@ 0x32
 80031f6:	4a08      	ldr	r2, [pc, #32]	@ (8003218 <UART_SetConfig+0x4e4>)
 80031f8:	fba2 2303 	umull	r2, r3, r2, r3
 80031fc:	095b      	lsrs	r3, r3, #5
 80031fe:	f003 020f 	and.w	r2, r3, #15
 8003202:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	4422      	add	r2, r4
 800320a:	609a      	str	r2, [r3, #8]
 800320c:	bf00      	nop
 800320e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8003212:	46bd      	mov	sp, r7
 8003214:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003218:	51eb851f 	.word	0x51eb851f

0800321c <malloc>:
 800321c:	4b02      	ldr	r3, [pc, #8]	@ (8003228 <malloc+0xc>)
 800321e:	4601      	mov	r1, r0
 8003220:	6818      	ldr	r0, [r3, #0]
 8003222:	f000 b82d 	b.w	8003280 <_malloc_r>
 8003226:	bf00      	nop
 8003228:	20000038 	.word	0x20000038

0800322c <free>:
 800322c:	4b02      	ldr	r3, [pc, #8]	@ (8003238 <free+0xc>)
 800322e:	4601      	mov	r1, r0
 8003230:	6818      	ldr	r0, [r3, #0]
 8003232:	f000 bc0d 	b.w	8003a50 <_free_r>
 8003236:	bf00      	nop
 8003238:	20000038 	.word	0x20000038

0800323c <sbrk_aligned>:
 800323c:	b570      	push	{r4, r5, r6, lr}
 800323e:	4e0f      	ldr	r6, [pc, #60]	@ (800327c <sbrk_aligned+0x40>)
 8003240:	460c      	mov	r4, r1
 8003242:	6831      	ldr	r1, [r6, #0]
 8003244:	4605      	mov	r5, r0
 8003246:	b911      	cbnz	r1, 800324e <sbrk_aligned+0x12>
 8003248:	f000 fb94 	bl	8003974 <_sbrk_r>
 800324c:	6030      	str	r0, [r6, #0]
 800324e:	4621      	mov	r1, r4
 8003250:	4628      	mov	r0, r5
 8003252:	f000 fb8f 	bl	8003974 <_sbrk_r>
 8003256:	1c43      	adds	r3, r0, #1
 8003258:	d103      	bne.n	8003262 <sbrk_aligned+0x26>
 800325a:	f04f 34ff 	mov.w	r4, #4294967295
 800325e:	4620      	mov	r0, r4
 8003260:	bd70      	pop	{r4, r5, r6, pc}
 8003262:	1cc4      	adds	r4, r0, #3
 8003264:	f024 0403 	bic.w	r4, r4, #3
 8003268:	42a0      	cmp	r0, r4
 800326a:	d0f8      	beq.n	800325e <sbrk_aligned+0x22>
 800326c:	1a21      	subs	r1, r4, r0
 800326e:	4628      	mov	r0, r5
 8003270:	f000 fb80 	bl	8003974 <_sbrk_r>
 8003274:	3001      	adds	r0, #1
 8003276:	d1f2      	bne.n	800325e <sbrk_aligned+0x22>
 8003278:	e7ef      	b.n	800325a <sbrk_aligned+0x1e>
 800327a:	bf00      	nop
 800327c:	2000013c 	.word	0x2000013c

08003280 <_malloc_r>:
 8003280:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003284:	1ccd      	adds	r5, r1, #3
 8003286:	f025 0503 	bic.w	r5, r5, #3
 800328a:	3508      	adds	r5, #8
 800328c:	2d0c      	cmp	r5, #12
 800328e:	bf38      	it	cc
 8003290:	250c      	movcc	r5, #12
 8003292:	2d00      	cmp	r5, #0
 8003294:	4606      	mov	r6, r0
 8003296:	db01      	blt.n	800329c <_malloc_r+0x1c>
 8003298:	42a9      	cmp	r1, r5
 800329a:	d904      	bls.n	80032a6 <_malloc_r+0x26>
 800329c:	230c      	movs	r3, #12
 800329e:	6033      	str	r3, [r6, #0]
 80032a0:	2000      	movs	r0, #0
 80032a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80032a6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800337c <_malloc_r+0xfc>
 80032aa:	f000 f869 	bl	8003380 <__malloc_lock>
 80032ae:	f8d8 3000 	ldr.w	r3, [r8]
 80032b2:	461c      	mov	r4, r3
 80032b4:	bb44      	cbnz	r4, 8003308 <_malloc_r+0x88>
 80032b6:	4629      	mov	r1, r5
 80032b8:	4630      	mov	r0, r6
 80032ba:	f7ff ffbf 	bl	800323c <sbrk_aligned>
 80032be:	1c43      	adds	r3, r0, #1
 80032c0:	4604      	mov	r4, r0
 80032c2:	d158      	bne.n	8003376 <_malloc_r+0xf6>
 80032c4:	f8d8 4000 	ldr.w	r4, [r8]
 80032c8:	4627      	mov	r7, r4
 80032ca:	2f00      	cmp	r7, #0
 80032cc:	d143      	bne.n	8003356 <_malloc_r+0xd6>
 80032ce:	2c00      	cmp	r4, #0
 80032d0:	d04b      	beq.n	800336a <_malloc_r+0xea>
 80032d2:	6823      	ldr	r3, [r4, #0]
 80032d4:	4639      	mov	r1, r7
 80032d6:	4630      	mov	r0, r6
 80032d8:	eb04 0903 	add.w	r9, r4, r3
 80032dc:	f000 fb4a 	bl	8003974 <_sbrk_r>
 80032e0:	4581      	cmp	r9, r0
 80032e2:	d142      	bne.n	800336a <_malloc_r+0xea>
 80032e4:	6821      	ldr	r1, [r4, #0]
 80032e6:	1a6d      	subs	r5, r5, r1
 80032e8:	4629      	mov	r1, r5
 80032ea:	4630      	mov	r0, r6
 80032ec:	f7ff ffa6 	bl	800323c <sbrk_aligned>
 80032f0:	3001      	adds	r0, #1
 80032f2:	d03a      	beq.n	800336a <_malloc_r+0xea>
 80032f4:	6823      	ldr	r3, [r4, #0]
 80032f6:	442b      	add	r3, r5
 80032f8:	6023      	str	r3, [r4, #0]
 80032fa:	f8d8 3000 	ldr.w	r3, [r8]
 80032fe:	685a      	ldr	r2, [r3, #4]
 8003300:	bb62      	cbnz	r2, 800335c <_malloc_r+0xdc>
 8003302:	f8c8 7000 	str.w	r7, [r8]
 8003306:	e00f      	b.n	8003328 <_malloc_r+0xa8>
 8003308:	6822      	ldr	r2, [r4, #0]
 800330a:	1b52      	subs	r2, r2, r5
 800330c:	d420      	bmi.n	8003350 <_malloc_r+0xd0>
 800330e:	2a0b      	cmp	r2, #11
 8003310:	d917      	bls.n	8003342 <_malloc_r+0xc2>
 8003312:	1961      	adds	r1, r4, r5
 8003314:	42a3      	cmp	r3, r4
 8003316:	6025      	str	r5, [r4, #0]
 8003318:	bf18      	it	ne
 800331a:	6059      	strne	r1, [r3, #4]
 800331c:	6863      	ldr	r3, [r4, #4]
 800331e:	bf08      	it	eq
 8003320:	f8c8 1000 	streq.w	r1, [r8]
 8003324:	5162      	str	r2, [r4, r5]
 8003326:	604b      	str	r3, [r1, #4]
 8003328:	4630      	mov	r0, r6
 800332a:	f000 f82f 	bl	800338c <__malloc_unlock>
 800332e:	f104 000b 	add.w	r0, r4, #11
 8003332:	1d23      	adds	r3, r4, #4
 8003334:	f020 0007 	bic.w	r0, r0, #7
 8003338:	1ac2      	subs	r2, r0, r3
 800333a:	bf1c      	itt	ne
 800333c:	1a1b      	subne	r3, r3, r0
 800333e:	50a3      	strne	r3, [r4, r2]
 8003340:	e7af      	b.n	80032a2 <_malloc_r+0x22>
 8003342:	6862      	ldr	r2, [r4, #4]
 8003344:	42a3      	cmp	r3, r4
 8003346:	bf0c      	ite	eq
 8003348:	f8c8 2000 	streq.w	r2, [r8]
 800334c:	605a      	strne	r2, [r3, #4]
 800334e:	e7eb      	b.n	8003328 <_malloc_r+0xa8>
 8003350:	4623      	mov	r3, r4
 8003352:	6864      	ldr	r4, [r4, #4]
 8003354:	e7ae      	b.n	80032b4 <_malloc_r+0x34>
 8003356:	463c      	mov	r4, r7
 8003358:	687f      	ldr	r7, [r7, #4]
 800335a:	e7b6      	b.n	80032ca <_malloc_r+0x4a>
 800335c:	461a      	mov	r2, r3
 800335e:	685b      	ldr	r3, [r3, #4]
 8003360:	42a3      	cmp	r3, r4
 8003362:	d1fb      	bne.n	800335c <_malloc_r+0xdc>
 8003364:	2300      	movs	r3, #0
 8003366:	6053      	str	r3, [r2, #4]
 8003368:	e7de      	b.n	8003328 <_malloc_r+0xa8>
 800336a:	230c      	movs	r3, #12
 800336c:	6033      	str	r3, [r6, #0]
 800336e:	4630      	mov	r0, r6
 8003370:	f000 f80c 	bl	800338c <__malloc_unlock>
 8003374:	e794      	b.n	80032a0 <_malloc_r+0x20>
 8003376:	6005      	str	r5, [r0, #0]
 8003378:	e7d6      	b.n	8003328 <_malloc_r+0xa8>
 800337a:	bf00      	nop
 800337c:	20000140 	.word	0x20000140

08003380 <__malloc_lock>:
 8003380:	4801      	ldr	r0, [pc, #4]	@ (8003388 <__malloc_lock+0x8>)
 8003382:	f000 bb44 	b.w	8003a0e <__retarget_lock_acquire_recursive>
 8003386:	bf00      	nop
 8003388:	20000284 	.word	0x20000284

0800338c <__malloc_unlock>:
 800338c:	4801      	ldr	r0, [pc, #4]	@ (8003394 <__malloc_unlock+0x8>)
 800338e:	f000 bb3f 	b.w	8003a10 <__retarget_lock_release_recursive>
 8003392:	bf00      	nop
 8003394:	20000284 	.word	0x20000284

08003398 <srand>:
 8003398:	b538      	push	{r3, r4, r5, lr}
 800339a:	4b10      	ldr	r3, [pc, #64]	@ (80033dc <srand+0x44>)
 800339c:	681d      	ldr	r5, [r3, #0]
 800339e:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80033a0:	4604      	mov	r4, r0
 80033a2:	b9b3      	cbnz	r3, 80033d2 <srand+0x3a>
 80033a4:	2018      	movs	r0, #24
 80033a6:	f7ff ff39 	bl	800321c <malloc>
 80033aa:	4602      	mov	r2, r0
 80033ac:	6328      	str	r0, [r5, #48]	@ 0x30
 80033ae:	b920      	cbnz	r0, 80033ba <srand+0x22>
 80033b0:	4b0b      	ldr	r3, [pc, #44]	@ (80033e0 <srand+0x48>)
 80033b2:	480c      	ldr	r0, [pc, #48]	@ (80033e4 <srand+0x4c>)
 80033b4:	2146      	movs	r1, #70	@ 0x46
 80033b6:	f000 fb2d 	bl	8003a14 <__assert_func>
 80033ba:	490b      	ldr	r1, [pc, #44]	@ (80033e8 <srand+0x50>)
 80033bc:	4b0b      	ldr	r3, [pc, #44]	@ (80033ec <srand+0x54>)
 80033be:	e9c0 1300 	strd	r1, r3, [r0]
 80033c2:	4b0b      	ldr	r3, [pc, #44]	@ (80033f0 <srand+0x58>)
 80033c4:	6083      	str	r3, [r0, #8]
 80033c6:	230b      	movs	r3, #11
 80033c8:	8183      	strh	r3, [r0, #12]
 80033ca:	2100      	movs	r1, #0
 80033cc:	2001      	movs	r0, #1
 80033ce:	e9c2 0104 	strd	r0, r1, [r2, #16]
 80033d2:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
 80033d4:	2200      	movs	r2, #0
 80033d6:	611c      	str	r4, [r3, #16]
 80033d8:	615a      	str	r2, [r3, #20]
 80033da:	bd38      	pop	{r3, r4, r5, pc}
 80033dc:	20000038 	.word	0x20000038
 80033e0:	0800484c 	.word	0x0800484c
 80033e4:	08004863 	.word	0x08004863
 80033e8:	abcd330e 	.word	0xabcd330e
 80033ec:	e66d1234 	.word	0xe66d1234
 80033f0:	0005deec 	.word	0x0005deec

080033f4 <rand>:
 80033f4:	4b16      	ldr	r3, [pc, #88]	@ (8003450 <rand+0x5c>)
 80033f6:	b510      	push	{r4, lr}
 80033f8:	681c      	ldr	r4, [r3, #0]
 80033fa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80033fc:	b9b3      	cbnz	r3, 800342c <rand+0x38>
 80033fe:	2018      	movs	r0, #24
 8003400:	f7ff ff0c 	bl	800321c <malloc>
 8003404:	4602      	mov	r2, r0
 8003406:	6320      	str	r0, [r4, #48]	@ 0x30
 8003408:	b920      	cbnz	r0, 8003414 <rand+0x20>
 800340a:	4b12      	ldr	r3, [pc, #72]	@ (8003454 <rand+0x60>)
 800340c:	4812      	ldr	r0, [pc, #72]	@ (8003458 <rand+0x64>)
 800340e:	2152      	movs	r1, #82	@ 0x52
 8003410:	f000 fb00 	bl	8003a14 <__assert_func>
 8003414:	4911      	ldr	r1, [pc, #68]	@ (800345c <rand+0x68>)
 8003416:	4b12      	ldr	r3, [pc, #72]	@ (8003460 <rand+0x6c>)
 8003418:	e9c0 1300 	strd	r1, r3, [r0]
 800341c:	4b11      	ldr	r3, [pc, #68]	@ (8003464 <rand+0x70>)
 800341e:	6083      	str	r3, [r0, #8]
 8003420:	230b      	movs	r3, #11
 8003422:	8183      	strh	r3, [r0, #12]
 8003424:	2100      	movs	r1, #0
 8003426:	2001      	movs	r0, #1
 8003428:	e9c2 0104 	strd	r0, r1, [r2, #16]
 800342c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800342e:	480e      	ldr	r0, [pc, #56]	@ (8003468 <rand+0x74>)
 8003430:	690b      	ldr	r3, [r1, #16]
 8003432:	694c      	ldr	r4, [r1, #20]
 8003434:	4a0d      	ldr	r2, [pc, #52]	@ (800346c <rand+0x78>)
 8003436:	4358      	muls	r0, r3
 8003438:	fb02 0004 	mla	r0, r2, r4, r0
 800343c:	fba3 3202 	umull	r3, r2, r3, r2
 8003440:	3301      	adds	r3, #1
 8003442:	eb40 0002 	adc.w	r0, r0, r2
 8003446:	e9c1 3004 	strd	r3, r0, [r1, #16]
 800344a:	f020 4000 	bic.w	r0, r0, #2147483648	@ 0x80000000
 800344e:	bd10      	pop	{r4, pc}
 8003450:	20000038 	.word	0x20000038
 8003454:	0800484c 	.word	0x0800484c
 8003458:	08004863 	.word	0x08004863
 800345c:	abcd330e 	.word	0xabcd330e
 8003460:	e66d1234 	.word	0xe66d1234
 8003464:	0005deec 	.word	0x0005deec
 8003468:	5851f42d 	.word	0x5851f42d
 800346c:	4c957f2d 	.word	0x4c957f2d

08003470 <std>:
 8003470:	2300      	movs	r3, #0
 8003472:	b510      	push	{r4, lr}
 8003474:	4604      	mov	r4, r0
 8003476:	e9c0 3300 	strd	r3, r3, [r0]
 800347a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800347e:	6083      	str	r3, [r0, #8]
 8003480:	8181      	strh	r1, [r0, #12]
 8003482:	6643      	str	r3, [r0, #100]	@ 0x64
 8003484:	81c2      	strh	r2, [r0, #14]
 8003486:	6183      	str	r3, [r0, #24]
 8003488:	4619      	mov	r1, r3
 800348a:	2208      	movs	r2, #8
 800348c:	305c      	adds	r0, #92	@ 0x5c
 800348e:	f000 fa07 	bl	80038a0 <memset>
 8003492:	4b0d      	ldr	r3, [pc, #52]	@ (80034c8 <std+0x58>)
 8003494:	6263      	str	r3, [r4, #36]	@ 0x24
 8003496:	4b0d      	ldr	r3, [pc, #52]	@ (80034cc <std+0x5c>)
 8003498:	62a3      	str	r3, [r4, #40]	@ 0x28
 800349a:	4b0d      	ldr	r3, [pc, #52]	@ (80034d0 <std+0x60>)
 800349c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800349e:	4b0d      	ldr	r3, [pc, #52]	@ (80034d4 <std+0x64>)
 80034a0:	6323      	str	r3, [r4, #48]	@ 0x30
 80034a2:	4b0d      	ldr	r3, [pc, #52]	@ (80034d8 <std+0x68>)
 80034a4:	6224      	str	r4, [r4, #32]
 80034a6:	429c      	cmp	r4, r3
 80034a8:	d006      	beq.n	80034b8 <std+0x48>
 80034aa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80034ae:	4294      	cmp	r4, r2
 80034b0:	d002      	beq.n	80034b8 <std+0x48>
 80034b2:	33d0      	adds	r3, #208	@ 0xd0
 80034b4:	429c      	cmp	r4, r3
 80034b6:	d105      	bne.n	80034c4 <std+0x54>
 80034b8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80034bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80034c0:	f000 baa4 	b.w	8003a0c <__retarget_lock_init_recursive>
 80034c4:	bd10      	pop	{r4, pc}
 80034c6:	bf00      	nop
 80034c8:	080036f1 	.word	0x080036f1
 80034cc:	08003713 	.word	0x08003713
 80034d0:	0800374b 	.word	0x0800374b
 80034d4:	0800376f 	.word	0x0800376f
 80034d8:	20000144 	.word	0x20000144

080034dc <stdio_exit_handler>:
 80034dc:	4a02      	ldr	r2, [pc, #8]	@ (80034e8 <stdio_exit_handler+0xc>)
 80034de:	4903      	ldr	r1, [pc, #12]	@ (80034ec <stdio_exit_handler+0x10>)
 80034e0:	4803      	ldr	r0, [pc, #12]	@ (80034f0 <stdio_exit_handler+0x14>)
 80034e2:	f000 b869 	b.w	80035b8 <_fwalk_sglue>
 80034e6:	bf00      	nop
 80034e8:	2000002c 	.word	0x2000002c
 80034ec:	080041b9 	.word	0x080041b9
 80034f0:	2000003c 	.word	0x2000003c

080034f4 <cleanup_stdio>:
 80034f4:	6841      	ldr	r1, [r0, #4]
 80034f6:	4b0c      	ldr	r3, [pc, #48]	@ (8003528 <cleanup_stdio+0x34>)
 80034f8:	4299      	cmp	r1, r3
 80034fa:	b510      	push	{r4, lr}
 80034fc:	4604      	mov	r4, r0
 80034fe:	d001      	beq.n	8003504 <cleanup_stdio+0x10>
 8003500:	f000 fe5a 	bl	80041b8 <_fflush_r>
 8003504:	68a1      	ldr	r1, [r4, #8]
 8003506:	4b09      	ldr	r3, [pc, #36]	@ (800352c <cleanup_stdio+0x38>)
 8003508:	4299      	cmp	r1, r3
 800350a:	d002      	beq.n	8003512 <cleanup_stdio+0x1e>
 800350c:	4620      	mov	r0, r4
 800350e:	f000 fe53 	bl	80041b8 <_fflush_r>
 8003512:	68e1      	ldr	r1, [r4, #12]
 8003514:	4b06      	ldr	r3, [pc, #24]	@ (8003530 <cleanup_stdio+0x3c>)
 8003516:	4299      	cmp	r1, r3
 8003518:	d004      	beq.n	8003524 <cleanup_stdio+0x30>
 800351a:	4620      	mov	r0, r4
 800351c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003520:	f000 be4a 	b.w	80041b8 <_fflush_r>
 8003524:	bd10      	pop	{r4, pc}
 8003526:	bf00      	nop
 8003528:	20000144 	.word	0x20000144
 800352c:	200001ac 	.word	0x200001ac
 8003530:	20000214 	.word	0x20000214

08003534 <global_stdio_init.part.0>:
 8003534:	b510      	push	{r4, lr}
 8003536:	4b0b      	ldr	r3, [pc, #44]	@ (8003564 <global_stdio_init.part.0+0x30>)
 8003538:	4c0b      	ldr	r4, [pc, #44]	@ (8003568 <global_stdio_init.part.0+0x34>)
 800353a:	4a0c      	ldr	r2, [pc, #48]	@ (800356c <global_stdio_init.part.0+0x38>)
 800353c:	601a      	str	r2, [r3, #0]
 800353e:	4620      	mov	r0, r4
 8003540:	2200      	movs	r2, #0
 8003542:	2104      	movs	r1, #4
 8003544:	f7ff ff94 	bl	8003470 <std>
 8003548:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800354c:	2201      	movs	r2, #1
 800354e:	2109      	movs	r1, #9
 8003550:	f7ff ff8e 	bl	8003470 <std>
 8003554:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8003558:	2202      	movs	r2, #2
 800355a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800355e:	2112      	movs	r1, #18
 8003560:	f7ff bf86 	b.w	8003470 <std>
 8003564:	2000027c 	.word	0x2000027c
 8003568:	20000144 	.word	0x20000144
 800356c:	080034dd 	.word	0x080034dd

08003570 <__sfp_lock_acquire>:
 8003570:	4801      	ldr	r0, [pc, #4]	@ (8003578 <__sfp_lock_acquire+0x8>)
 8003572:	f000 ba4c 	b.w	8003a0e <__retarget_lock_acquire_recursive>
 8003576:	bf00      	nop
 8003578:	20000285 	.word	0x20000285

0800357c <__sfp_lock_release>:
 800357c:	4801      	ldr	r0, [pc, #4]	@ (8003584 <__sfp_lock_release+0x8>)
 800357e:	f000 ba47 	b.w	8003a10 <__retarget_lock_release_recursive>
 8003582:	bf00      	nop
 8003584:	20000285 	.word	0x20000285

08003588 <__sinit>:
 8003588:	b510      	push	{r4, lr}
 800358a:	4604      	mov	r4, r0
 800358c:	f7ff fff0 	bl	8003570 <__sfp_lock_acquire>
 8003590:	6a23      	ldr	r3, [r4, #32]
 8003592:	b11b      	cbz	r3, 800359c <__sinit+0x14>
 8003594:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003598:	f7ff bff0 	b.w	800357c <__sfp_lock_release>
 800359c:	4b04      	ldr	r3, [pc, #16]	@ (80035b0 <__sinit+0x28>)
 800359e:	6223      	str	r3, [r4, #32]
 80035a0:	4b04      	ldr	r3, [pc, #16]	@ (80035b4 <__sinit+0x2c>)
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	2b00      	cmp	r3, #0
 80035a6:	d1f5      	bne.n	8003594 <__sinit+0xc>
 80035a8:	f7ff ffc4 	bl	8003534 <global_stdio_init.part.0>
 80035ac:	e7f2      	b.n	8003594 <__sinit+0xc>
 80035ae:	bf00      	nop
 80035b0:	080034f5 	.word	0x080034f5
 80035b4:	2000027c 	.word	0x2000027c

080035b8 <_fwalk_sglue>:
 80035b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80035bc:	4607      	mov	r7, r0
 80035be:	4688      	mov	r8, r1
 80035c0:	4614      	mov	r4, r2
 80035c2:	2600      	movs	r6, #0
 80035c4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80035c8:	f1b9 0901 	subs.w	r9, r9, #1
 80035cc:	d505      	bpl.n	80035da <_fwalk_sglue+0x22>
 80035ce:	6824      	ldr	r4, [r4, #0]
 80035d0:	2c00      	cmp	r4, #0
 80035d2:	d1f7      	bne.n	80035c4 <_fwalk_sglue+0xc>
 80035d4:	4630      	mov	r0, r6
 80035d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80035da:	89ab      	ldrh	r3, [r5, #12]
 80035dc:	2b01      	cmp	r3, #1
 80035de:	d907      	bls.n	80035f0 <_fwalk_sglue+0x38>
 80035e0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80035e4:	3301      	adds	r3, #1
 80035e6:	d003      	beq.n	80035f0 <_fwalk_sglue+0x38>
 80035e8:	4629      	mov	r1, r5
 80035ea:	4638      	mov	r0, r7
 80035ec:	47c0      	blx	r8
 80035ee:	4306      	orrs	r6, r0
 80035f0:	3568      	adds	r5, #104	@ 0x68
 80035f2:	e7e9      	b.n	80035c8 <_fwalk_sglue+0x10>

080035f4 <_puts_r>:
 80035f4:	6a03      	ldr	r3, [r0, #32]
 80035f6:	b570      	push	{r4, r5, r6, lr}
 80035f8:	6884      	ldr	r4, [r0, #8]
 80035fa:	4605      	mov	r5, r0
 80035fc:	460e      	mov	r6, r1
 80035fe:	b90b      	cbnz	r3, 8003604 <_puts_r+0x10>
 8003600:	f7ff ffc2 	bl	8003588 <__sinit>
 8003604:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003606:	07db      	lsls	r3, r3, #31
 8003608:	d405      	bmi.n	8003616 <_puts_r+0x22>
 800360a:	89a3      	ldrh	r3, [r4, #12]
 800360c:	0598      	lsls	r0, r3, #22
 800360e:	d402      	bmi.n	8003616 <_puts_r+0x22>
 8003610:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003612:	f000 f9fc 	bl	8003a0e <__retarget_lock_acquire_recursive>
 8003616:	89a3      	ldrh	r3, [r4, #12]
 8003618:	0719      	lsls	r1, r3, #28
 800361a:	d502      	bpl.n	8003622 <_puts_r+0x2e>
 800361c:	6923      	ldr	r3, [r4, #16]
 800361e:	2b00      	cmp	r3, #0
 8003620:	d135      	bne.n	800368e <_puts_r+0x9a>
 8003622:	4621      	mov	r1, r4
 8003624:	4628      	mov	r0, r5
 8003626:	f000 f8e5 	bl	80037f4 <__swsetup_r>
 800362a:	b380      	cbz	r0, 800368e <_puts_r+0x9a>
 800362c:	f04f 35ff 	mov.w	r5, #4294967295
 8003630:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003632:	07da      	lsls	r2, r3, #31
 8003634:	d405      	bmi.n	8003642 <_puts_r+0x4e>
 8003636:	89a3      	ldrh	r3, [r4, #12]
 8003638:	059b      	lsls	r3, r3, #22
 800363a:	d402      	bmi.n	8003642 <_puts_r+0x4e>
 800363c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800363e:	f000 f9e7 	bl	8003a10 <__retarget_lock_release_recursive>
 8003642:	4628      	mov	r0, r5
 8003644:	bd70      	pop	{r4, r5, r6, pc}
 8003646:	2b00      	cmp	r3, #0
 8003648:	da04      	bge.n	8003654 <_puts_r+0x60>
 800364a:	69a2      	ldr	r2, [r4, #24]
 800364c:	429a      	cmp	r2, r3
 800364e:	dc17      	bgt.n	8003680 <_puts_r+0x8c>
 8003650:	290a      	cmp	r1, #10
 8003652:	d015      	beq.n	8003680 <_puts_r+0x8c>
 8003654:	6823      	ldr	r3, [r4, #0]
 8003656:	1c5a      	adds	r2, r3, #1
 8003658:	6022      	str	r2, [r4, #0]
 800365a:	7019      	strb	r1, [r3, #0]
 800365c:	68a3      	ldr	r3, [r4, #8]
 800365e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8003662:	3b01      	subs	r3, #1
 8003664:	60a3      	str	r3, [r4, #8]
 8003666:	2900      	cmp	r1, #0
 8003668:	d1ed      	bne.n	8003646 <_puts_r+0x52>
 800366a:	2b00      	cmp	r3, #0
 800366c:	da11      	bge.n	8003692 <_puts_r+0x9e>
 800366e:	4622      	mov	r2, r4
 8003670:	210a      	movs	r1, #10
 8003672:	4628      	mov	r0, r5
 8003674:	f000 f87f 	bl	8003776 <__swbuf_r>
 8003678:	3001      	adds	r0, #1
 800367a:	d0d7      	beq.n	800362c <_puts_r+0x38>
 800367c:	250a      	movs	r5, #10
 800367e:	e7d7      	b.n	8003630 <_puts_r+0x3c>
 8003680:	4622      	mov	r2, r4
 8003682:	4628      	mov	r0, r5
 8003684:	f000 f877 	bl	8003776 <__swbuf_r>
 8003688:	3001      	adds	r0, #1
 800368a:	d1e7      	bne.n	800365c <_puts_r+0x68>
 800368c:	e7ce      	b.n	800362c <_puts_r+0x38>
 800368e:	3e01      	subs	r6, #1
 8003690:	e7e4      	b.n	800365c <_puts_r+0x68>
 8003692:	6823      	ldr	r3, [r4, #0]
 8003694:	1c5a      	adds	r2, r3, #1
 8003696:	6022      	str	r2, [r4, #0]
 8003698:	220a      	movs	r2, #10
 800369a:	701a      	strb	r2, [r3, #0]
 800369c:	e7ee      	b.n	800367c <_puts_r+0x88>
	...

080036a0 <puts>:
 80036a0:	4b02      	ldr	r3, [pc, #8]	@ (80036ac <puts+0xc>)
 80036a2:	4601      	mov	r1, r0
 80036a4:	6818      	ldr	r0, [r3, #0]
 80036a6:	f7ff bfa5 	b.w	80035f4 <_puts_r>
 80036aa:	bf00      	nop
 80036ac:	20000038 	.word	0x20000038

080036b0 <siprintf>:
 80036b0:	b40e      	push	{r1, r2, r3}
 80036b2:	b500      	push	{lr}
 80036b4:	b09c      	sub	sp, #112	@ 0x70
 80036b6:	ab1d      	add	r3, sp, #116	@ 0x74
 80036b8:	9002      	str	r0, [sp, #8]
 80036ba:	9006      	str	r0, [sp, #24]
 80036bc:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80036c0:	4809      	ldr	r0, [pc, #36]	@ (80036e8 <siprintf+0x38>)
 80036c2:	9107      	str	r1, [sp, #28]
 80036c4:	9104      	str	r1, [sp, #16]
 80036c6:	4909      	ldr	r1, [pc, #36]	@ (80036ec <siprintf+0x3c>)
 80036c8:	f853 2b04 	ldr.w	r2, [r3], #4
 80036cc:	9105      	str	r1, [sp, #20]
 80036ce:	6800      	ldr	r0, [r0, #0]
 80036d0:	9301      	str	r3, [sp, #4]
 80036d2:	a902      	add	r1, sp, #8
 80036d4:	f000 fa62 	bl	8003b9c <_svfiprintf_r>
 80036d8:	9b02      	ldr	r3, [sp, #8]
 80036da:	2200      	movs	r2, #0
 80036dc:	701a      	strb	r2, [r3, #0]
 80036de:	b01c      	add	sp, #112	@ 0x70
 80036e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80036e4:	b003      	add	sp, #12
 80036e6:	4770      	bx	lr
 80036e8:	20000038 	.word	0x20000038
 80036ec:	ffff0208 	.word	0xffff0208

080036f0 <__sread>:
 80036f0:	b510      	push	{r4, lr}
 80036f2:	460c      	mov	r4, r1
 80036f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80036f8:	f000 f92a 	bl	8003950 <_read_r>
 80036fc:	2800      	cmp	r0, #0
 80036fe:	bfab      	itete	ge
 8003700:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8003702:	89a3      	ldrhlt	r3, [r4, #12]
 8003704:	181b      	addge	r3, r3, r0
 8003706:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800370a:	bfac      	ite	ge
 800370c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800370e:	81a3      	strhlt	r3, [r4, #12]
 8003710:	bd10      	pop	{r4, pc}

08003712 <__swrite>:
 8003712:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003716:	461f      	mov	r7, r3
 8003718:	898b      	ldrh	r3, [r1, #12]
 800371a:	05db      	lsls	r3, r3, #23
 800371c:	4605      	mov	r5, r0
 800371e:	460c      	mov	r4, r1
 8003720:	4616      	mov	r6, r2
 8003722:	d505      	bpl.n	8003730 <__swrite+0x1e>
 8003724:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003728:	2302      	movs	r3, #2
 800372a:	2200      	movs	r2, #0
 800372c:	f000 f8fe 	bl	800392c <_lseek_r>
 8003730:	89a3      	ldrh	r3, [r4, #12]
 8003732:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003736:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800373a:	81a3      	strh	r3, [r4, #12]
 800373c:	4632      	mov	r2, r6
 800373e:	463b      	mov	r3, r7
 8003740:	4628      	mov	r0, r5
 8003742:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003746:	f000 b925 	b.w	8003994 <_write_r>

0800374a <__sseek>:
 800374a:	b510      	push	{r4, lr}
 800374c:	460c      	mov	r4, r1
 800374e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003752:	f000 f8eb 	bl	800392c <_lseek_r>
 8003756:	1c43      	adds	r3, r0, #1
 8003758:	89a3      	ldrh	r3, [r4, #12]
 800375a:	bf15      	itete	ne
 800375c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800375e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8003762:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8003766:	81a3      	strheq	r3, [r4, #12]
 8003768:	bf18      	it	ne
 800376a:	81a3      	strhne	r3, [r4, #12]
 800376c:	bd10      	pop	{r4, pc}

0800376e <__sclose>:
 800376e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003772:	f000 b8b9 	b.w	80038e8 <_close_r>

08003776 <__swbuf_r>:
 8003776:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003778:	460e      	mov	r6, r1
 800377a:	4614      	mov	r4, r2
 800377c:	4605      	mov	r5, r0
 800377e:	b118      	cbz	r0, 8003788 <__swbuf_r+0x12>
 8003780:	6a03      	ldr	r3, [r0, #32]
 8003782:	b90b      	cbnz	r3, 8003788 <__swbuf_r+0x12>
 8003784:	f7ff ff00 	bl	8003588 <__sinit>
 8003788:	69a3      	ldr	r3, [r4, #24]
 800378a:	60a3      	str	r3, [r4, #8]
 800378c:	89a3      	ldrh	r3, [r4, #12]
 800378e:	071a      	lsls	r2, r3, #28
 8003790:	d501      	bpl.n	8003796 <__swbuf_r+0x20>
 8003792:	6923      	ldr	r3, [r4, #16]
 8003794:	b943      	cbnz	r3, 80037a8 <__swbuf_r+0x32>
 8003796:	4621      	mov	r1, r4
 8003798:	4628      	mov	r0, r5
 800379a:	f000 f82b 	bl	80037f4 <__swsetup_r>
 800379e:	b118      	cbz	r0, 80037a8 <__swbuf_r+0x32>
 80037a0:	f04f 37ff 	mov.w	r7, #4294967295
 80037a4:	4638      	mov	r0, r7
 80037a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80037a8:	6823      	ldr	r3, [r4, #0]
 80037aa:	6922      	ldr	r2, [r4, #16]
 80037ac:	1a98      	subs	r0, r3, r2
 80037ae:	6963      	ldr	r3, [r4, #20]
 80037b0:	b2f6      	uxtb	r6, r6
 80037b2:	4283      	cmp	r3, r0
 80037b4:	4637      	mov	r7, r6
 80037b6:	dc05      	bgt.n	80037c4 <__swbuf_r+0x4e>
 80037b8:	4621      	mov	r1, r4
 80037ba:	4628      	mov	r0, r5
 80037bc:	f000 fcfc 	bl	80041b8 <_fflush_r>
 80037c0:	2800      	cmp	r0, #0
 80037c2:	d1ed      	bne.n	80037a0 <__swbuf_r+0x2a>
 80037c4:	68a3      	ldr	r3, [r4, #8]
 80037c6:	3b01      	subs	r3, #1
 80037c8:	60a3      	str	r3, [r4, #8]
 80037ca:	6823      	ldr	r3, [r4, #0]
 80037cc:	1c5a      	adds	r2, r3, #1
 80037ce:	6022      	str	r2, [r4, #0]
 80037d0:	701e      	strb	r6, [r3, #0]
 80037d2:	6962      	ldr	r2, [r4, #20]
 80037d4:	1c43      	adds	r3, r0, #1
 80037d6:	429a      	cmp	r2, r3
 80037d8:	d004      	beq.n	80037e4 <__swbuf_r+0x6e>
 80037da:	89a3      	ldrh	r3, [r4, #12]
 80037dc:	07db      	lsls	r3, r3, #31
 80037de:	d5e1      	bpl.n	80037a4 <__swbuf_r+0x2e>
 80037e0:	2e0a      	cmp	r6, #10
 80037e2:	d1df      	bne.n	80037a4 <__swbuf_r+0x2e>
 80037e4:	4621      	mov	r1, r4
 80037e6:	4628      	mov	r0, r5
 80037e8:	f000 fce6 	bl	80041b8 <_fflush_r>
 80037ec:	2800      	cmp	r0, #0
 80037ee:	d0d9      	beq.n	80037a4 <__swbuf_r+0x2e>
 80037f0:	e7d6      	b.n	80037a0 <__swbuf_r+0x2a>
	...

080037f4 <__swsetup_r>:
 80037f4:	b538      	push	{r3, r4, r5, lr}
 80037f6:	4b29      	ldr	r3, [pc, #164]	@ (800389c <__swsetup_r+0xa8>)
 80037f8:	4605      	mov	r5, r0
 80037fa:	6818      	ldr	r0, [r3, #0]
 80037fc:	460c      	mov	r4, r1
 80037fe:	b118      	cbz	r0, 8003808 <__swsetup_r+0x14>
 8003800:	6a03      	ldr	r3, [r0, #32]
 8003802:	b90b      	cbnz	r3, 8003808 <__swsetup_r+0x14>
 8003804:	f7ff fec0 	bl	8003588 <__sinit>
 8003808:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800380c:	0719      	lsls	r1, r3, #28
 800380e:	d422      	bmi.n	8003856 <__swsetup_r+0x62>
 8003810:	06da      	lsls	r2, r3, #27
 8003812:	d407      	bmi.n	8003824 <__swsetup_r+0x30>
 8003814:	2209      	movs	r2, #9
 8003816:	602a      	str	r2, [r5, #0]
 8003818:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800381c:	81a3      	strh	r3, [r4, #12]
 800381e:	f04f 30ff 	mov.w	r0, #4294967295
 8003822:	e033      	b.n	800388c <__swsetup_r+0x98>
 8003824:	0758      	lsls	r0, r3, #29
 8003826:	d512      	bpl.n	800384e <__swsetup_r+0x5a>
 8003828:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800382a:	b141      	cbz	r1, 800383e <__swsetup_r+0x4a>
 800382c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003830:	4299      	cmp	r1, r3
 8003832:	d002      	beq.n	800383a <__swsetup_r+0x46>
 8003834:	4628      	mov	r0, r5
 8003836:	f000 f90b 	bl	8003a50 <_free_r>
 800383a:	2300      	movs	r3, #0
 800383c:	6363      	str	r3, [r4, #52]	@ 0x34
 800383e:	89a3      	ldrh	r3, [r4, #12]
 8003840:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003844:	81a3      	strh	r3, [r4, #12]
 8003846:	2300      	movs	r3, #0
 8003848:	6063      	str	r3, [r4, #4]
 800384a:	6923      	ldr	r3, [r4, #16]
 800384c:	6023      	str	r3, [r4, #0]
 800384e:	89a3      	ldrh	r3, [r4, #12]
 8003850:	f043 0308 	orr.w	r3, r3, #8
 8003854:	81a3      	strh	r3, [r4, #12]
 8003856:	6923      	ldr	r3, [r4, #16]
 8003858:	b94b      	cbnz	r3, 800386e <__swsetup_r+0x7a>
 800385a:	89a3      	ldrh	r3, [r4, #12]
 800385c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8003860:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003864:	d003      	beq.n	800386e <__swsetup_r+0x7a>
 8003866:	4621      	mov	r1, r4
 8003868:	4628      	mov	r0, r5
 800386a:	f000 fd05 	bl	8004278 <__smakebuf_r>
 800386e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003872:	f013 0201 	ands.w	r2, r3, #1
 8003876:	d00a      	beq.n	800388e <__swsetup_r+0x9a>
 8003878:	2200      	movs	r2, #0
 800387a:	60a2      	str	r2, [r4, #8]
 800387c:	6962      	ldr	r2, [r4, #20]
 800387e:	4252      	negs	r2, r2
 8003880:	61a2      	str	r2, [r4, #24]
 8003882:	6922      	ldr	r2, [r4, #16]
 8003884:	b942      	cbnz	r2, 8003898 <__swsetup_r+0xa4>
 8003886:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800388a:	d1c5      	bne.n	8003818 <__swsetup_r+0x24>
 800388c:	bd38      	pop	{r3, r4, r5, pc}
 800388e:	0799      	lsls	r1, r3, #30
 8003890:	bf58      	it	pl
 8003892:	6962      	ldrpl	r2, [r4, #20]
 8003894:	60a2      	str	r2, [r4, #8]
 8003896:	e7f4      	b.n	8003882 <__swsetup_r+0x8e>
 8003898:	2000      	movs	r0, #0
 800389a:	e7f7      	b.n	800388c <__swsetup_r+0x98>
 800389c:	20000038 	.word	0x20000038

080038a0 <memset>:
 80038a0:	4402      	add	r2, r0
 80038a2:	4603      	mov	r3, r0
 80038a4:	4293      	cmp	r3, r2
 80038a6:	d100      	bne.n	80038aa <memset+0xa>
 80038a8:	4770      	bx	lr
 80038aa:	f803 1b01 	strb.w	r1, [r3], #1
 80038ae:	e7f9      	b.n	80038a4 <memset+0x4>

080038b0 <time>:
 80038b0:	b5df      	push	{r0, r1, r2, r3, r4, r6, r7, lr}
 80038b2:	4b0c      	ldr	r3, [pc, #48]	@ (80038e4 <time+0x34>)
 80038b4:	f04f 36ff 	mov.w	r6, #4294967295
 80038b8:	f04f 37ff 	mov.w	r7, #4294967295
 80038bc:	4669      	mov	r1, sp
 80038be:	4604      	mov	r4, r0
 80038c0:	2200      	movs	r2, #0
 80038c2:	6818      	ldr	r0, [r3, #0]
 80038c4:	e9cd 6700 	strd	r6, r7, [sp]
 80038c8:	f000 f81e 	bl	8003908 <_gettimeofday_r>
 80038cc:	2800      	cmp	r0, #0
 80038ce:	bfb8      	it	lt
 80038d0:	e9cd 6700 	strdlt	r6, r7, [sp]
 80038d4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80038d8:	b10c      	cbz	r4, 80038de <time+0x2e>
 80038da:	e9c4 0100 	strd	r0, r1, [r4]
 80038de:	b004      	add	sp, #16
 80038e0:	bdd0      	pop	{r4, r6, r7, pc}
 80038e2:	bf00      	nop
 80038e4:	20000038 	.word	0x20000038

080038e8 <_close_r>:
 80038e8:	b538      	push	{r3, r4, r5, lr}
 80038ea:	4d06      	ldr	r5, [pc, #24]	@ (8003904 <_close_r+0x1c>)
 80038ec:	2300      	movs	r3, #0
 80038ee:	4604      	mov	r4, r0
 80038f0:	4608      	mov	r0, r1
 80038f2:	602b      	str	r3, [r5, #0]
 80038f4:	f7fe f82d 	bl	8001952 <_close>
 80038f8:	1c43      	adds	r3, r0, #1
 80038fa:	d102      	bne.n	8003902 <_close_r+0x1a>
 80038fc:	682b      	ldr	r3, [r5, #0]
 80038fe:	b103      	cbz	r3, 8003902 <_close_r+0x1a>
 8003900:	6023      	str	r3, [r4, #0]
 8003902:	bd38      	pop	{r3, r4, r5, pc}
 8003904:	20000280 	.word	0x20000280

08003908 <_gettimeofday_r>:
 8003908:	b538      	push	{r3, r4, r5, lr}
 800390a:	4d07      	ldr	r5, [pc, #28]	@ (8003928 <_gettimeofday_r+0x20>)
 800390c:	2300      	movs	r3, #0
 800390e:	4604      	mov	r4, r0
 8003910:	4608      	mov	r0, r1
 8003912:	4611      	mov	r1, r2
 8003914:	602b      	str	r3, [r5, #0]
 8003916:	f000 fef7 	bl	8004708 <_gettimeofday>
 800391a:	1c43      	adds	r3, r0, #1
 800391c:	d102      	bne.n	8003924 <_gettimeofday_r+0x1c>
 800391e:	682b      	ldr	r3, [r5, #0]
 8003920:	b103      	cbz	r3, 8003924 <_gettimeofday_r+0x1c>
 8003922:	6023      	str	r3, [r4, #0]
 8003924:	bd38      	pop	{r3, r4, r5, pc}
 8003926:	bf00      	nop
 8003928:	20000280 	.word	0x20000280

0800392c <_lseek_r>:
 800392c:	b538      	push	{r3, r4, r5, lr}
 800392e:	4d07      	ldr	r5, [pc, #28]	@ (800394c <_lseek_r+0x20>)
 8003930:	4604      	mov	r4, r0
 8003932:	4608      	mov	r0, r1
 8003934:	4611      	mov	r1, r2
 8003936:	2200      	movs	r2, #0
 8003938:	602a      	str	r2, [r5, #0]
 800393a:	461a      	mov	r2, r3
 800393c:	f7fe f830 	bl	80019a0 <_lseek>
 8003940:	1c43      	adds	r3, r0, #1
 8003942:	d102      	bne.n	800394a <_lseek_r+0x1e>
 8003944:	682b      	ldr	r3, [r5, #0]
 8003946:	b103      	cbz	r3, 800394a <_lseek_r+0x1e>
 8003948:	6023      	str	r3, [r4, #0]
 800394a:	bd38      	pop	{r3, r4, r5, pc}
 800394c:	20000280 	.word	0x20000280

08003950 <_read_r>:
 8003950:	b538      	push	{r3, r4, r5, lr}
 8003952:	4d07      	ldr	r5, [pc, #28]	@ (8003970 <_read_r+0x20>)
 8003954:	4604      	mov	r4, r0
 8003956:	4608      	mov	r0, r1
 8003958:	4611      	mov	r1, r2
 800395a:	2200      	movs	r2, #0
 800395c:	602a      	str	r2, [r5, #0]
 800395e:	461a      	mov	r2, r3
 8003960:	f7fd ffbe 	bl	80018e0 <_read>
 8003964:	1c43      	adds	r3, r0, #1
 8003966:	d102      	bne.n	800396e <_read_r+0x1e>
 8003968:	682b      	ldr	r3, [r5, #0]
 800396a:	b103      	cbz	r3, 800396e <_read_r+0x1e>
 800396c:	6023      	str	r3, [r4, #0]
 800396e:	bd38      	pop	{r3, r4, r5, pc}
 8003970:	20000280 	.word	0x20000280

08003974 <_sbrk_r>:
 8003974:	b538      	push	{r3, r4, r5, lr}
 8003976:	4d06      	ldr	r5, [pc, #24]	@ (8003990 <_sbrk_r+0x1c>)
 8003978:	2300      	movs	r3, #0
 800397a:	4604      	mov	r4, r0
 800397c:	4608      	mov	r0, r1
 800397e:	602b      	str	r3, [r5, #0]
 8003980:	f7fe f81c 	bl	80019bc <_sbrk>
 8003984:	1c43      	adds	r3, r0, #1
 8003986:	d102      	bne.n	800398e <_sbrk_r+0x1a>
 8003988:	682b      	ldr	r3, [r5, #0]
 800398a:	b103      	cbz	r3, 800398e <_sbrk_r+0x1a>
 800398c:	6023      	str	r3, [r4, #0]
 800398e:	bd38      	pop	{r3, r4, r5, pc}
 8003990:	20000280 	.word	0x20000280

08003994 <_write_r>:
 8003994:	b538      	push	{r3, r4, r5, lr}
 8003996:	4d07      	ldr	r5, [pc, #28]	@ (80039b4 <_write_r+0x20>)
 8003998:	4604      	mov	r4, r0
 800399a:	4608      	mov	r0, r1
 800399c:	4611      	mov	r1, r2
 800399e:	2200      	movs	r2, #0
 80039a0:	602a      	str	r2, [r5, #0]
 80039a2:	461a      	mov	r2, r3
 80039a4:	f7fd ffb9 	bl	800191a <_write>
 80039a8:	1c43      	adds	r3, r0, #1
 80039aa:	d102      	bne.n	80039b2 <_write_r+0x1e>
 80039ac:	682b      	ldr	r3, [r5, #0]
 80039ae:	b103      	cbz	r3, 80039b2 <_write_r+0x1e>
 80039b0:	6023      	str	r3, [r4, #0]
 80039b2:	bd38      	pop	{r3, r4, r5, pc}
 80039b4:	20000280 	.word	0x20000280

080039b8 <__errno>:
 80039b8:	4b01      	ldr	r3, [pc, #4]	@ (80039c0 <__errno+0x8>)
 80039ba:	6818      	ldr	r0, [r3, #0]
 80039bc:	4770      	bx	lr
 80039be:	bf00      	nop
 80039c0:	20000038 	.word	0x20000038

080039c4 <__libc_init_array>:
 80039c4:	b570      	push	{r4, r5, r6, lr}
 80039c6:	4d0d      	ldr	r5, [pc, #52]	@ (80039fc <__libc_init_array+0x38>)
 80039c8:	4c0d      	ldr	r4, [pc, #52]	@ (8003a00 <__libc_init_array+0x3c>)
 80039ca:	1b64      	subs	r4, r4, r5
 80039cc:	10a4      	asrs	r4, r4, #2
 80039ce:	2600      	movs	r6, #0
 80039d0:	42a6      	cmp	r6, r4
 80039d2:	d109      	bne.n	80039e8 <__libc_init_array+0x24>
 80039d4:	4d0b      	ldr	r5, [pc, #44]	@ (8003a04 <__libc_init_array+0x40>)
 80039d6:	4c0c      	ldr	r4, [pc, #48]	@ (8003a08 <__libc_init_array+0x44>)
 80039d8:	f000 fe9e 	bl	8004718 <_init>
 80039dc:	1b64      	subs	r4, r4, r5
 80039de:	10a4      	asrs	r4, r4, #2
 80039e0:	2600      	movs	r6, #0
 80039e2:	42a6      	cmp	r6, r4
 80039e4:	d105      	bne.n	80039f2 <__libc_init_array+0x2e>
 80039e6:	bd70      	pop	{r4, r5, r6, pc}
 80039e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80039ec:	4798      	blx	r3
 80039ee:	3601      	adds	r6, #1
 80039f0:	e7ee      	b.n	80039d0 <__libc_init_array+0xc>
 80039f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80039f6:	4798      	blx	r3
 80039f8:	3601      	adds	r6, #1
 80039fa:	e7f2      	b.n	80039e2 <__libc_init_array+0x1e>
 80039fc:	08004934 	.word	0x08004934
 8003a00:	08004934 	.word	0x08004934
 8003a04:	08004934 	.word	0x08004934
 8003a08:	08004938 	.word	0x08004938

08003a0c <__retarget_lock_init_recursive>:
 8003a0c:	4770      	bx	lr

08003a0e <__retarget_lock_acquire_recursive>:
 8003a0e:	4770      	bx	lr

08003a10 <__retarget_lock_release_recursive>:
 8003a10:	4770      	bx	lr
	...

08003a14 <__assert_func>:
 8003a14:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003a16:	4614      	mov	r4, r2
 8003a18:	461a      	mov	r2, r3
 8003a1a:	4b09      	ldr	r3, [pc, #36]	@ (8003a40 <__assert_func+0x2c>)
 8003a1c:	681b      	ldr	r3, [r3, #0]
 8003a1e:	4605      	mov	r5, r0
 8003a20:	68d8      	ldr	r0, [r3, #12]
 8003a22:	b954      	cbnz	r4, 8003a3a <__assert_func+0x26>
 8003a24:	4b07      	ldr	r3, [pc, #28]	@ (8003a44 <__assert_func+0x30>)
 8003a26:	461c      	mov	r4, r3
 8003a28:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003a2c:	9100      	str	r1, [sp, #0]
 8003a2e:	462b      	mov	r3, r5
 8003a30:	4905      	ldr	r1, [pc, #20]	@ (8003a48 <__assert_func+0x34>)
 8003a32:	f000 fbe9 	bl	8004208 <fiprintf>
 8003a36:	f000 fca5 	bl	8004384 <abort>
 8003a3a:	4b04      	ldr	r3, [pc, #16]	@ (8003a4c <__assert_func+0x38>)
 8003a3c:	e7f4      	b.n	8003a28 <__assert_func+0x14>
 8003a3e:	bf00      	nop
 8003a40:	20000038 	.word	0x20000038
 8003a44:	080048f6 	.word	0x080048f6
 8003a48:	080048c8 	.word	0x080048c8
 8003a4c:	080048bb 	.word	0x080048bb

08003a50 <_free_r>:
 8003a50:	b538      	push	{r3, r4, r5, lr}
 8003a52:	4605      	mov	r5, r0
 8003a54:	2900      	cmp	r1, #0
 8003a56:	d041      	beq.n	8003adc <_free_r+0x8c>
 8003a58:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003a5c:	1f0c      	subs	r4, r1, #4
 8003a5e:	2b00      	cmp	r3, #0
 8003a60:	bfb8      	it	lt
 8003a62:	18e4      	addlt	r4, r4, r3
 8003a64:	f7ff fc8c 	bl	8003380 <__malloc_lock>
 8003a68:	4a1d      	ldr	r2, [pc, #116]	@ (8003ae0 <_free_r+0x90>)
 8003a6a:	6813      	ldr	r3, [r2, #0]
 8003a6c:	b933      	cbnz	r3, 8003a7c <_free_r+0x2c>
 8003a6e:	6063      	str	r3, [r4, #4]
 8003a70:	6014      	str	r4, [r2, #0]
 8003a72:	4628      	mov	r0, r5
 8003a74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003a78:	f7ff bc88 	b.w	800338c <__malloc_unlock>
 8003a7c:	42a3      	cmp	r3, r4
 8003a7e:	d908      	bls.n	8003a92 <_free_r+0x42>
 8003a80:	6820      	ldr	r0, [r4, #0]
 8003a82:	1821      	adds	r1, r4, r0
 8003a84:	428b      	cmp	r3, r1
 8003a86:	bf01      	itttt	eq
 8003a88:	6819      	ldreq	r1, [r3, #0]
 8003a8a:	685b      	ldreq	r3, [r3, #4]
 8003a8c:	1809      	addeq	r1, r1, r0
 8003a8e:	6021      	streq	r1, [r4, #0]
 8003a90:	e7ed      	b.n	8003a6e <_free_r+0x1e>
 8003a92:	461a      	mov	r2, r3
 8003a94:	685b      	ldr	r3, [r3, #4]
 8003a96:	b10b      	cbz	r3, 8003a9c <_free_r+0x4c>
 8003a98:	42a3      	cmp	r3, r4
 8003a9a:	d9fa      	bls.n	8003a92 <_free_r+0x42>
 8003a9c:	6811      	ldr	r1, [r2, #0]
 8003a9e:	1850      	adds	r0, r2, r1
 8003aa0:	42a0      	cmp	r0, r4
 8003aa2:	d10b      	bne.n	8003abc <_free_r+0x6c>
 8003aa4:	6820      	ldr	r0, [r4, #0]
 8003aa6:	4401      	add	r1, r0
 8003aa8:	1850      	adds	r0, r2, r1
 8003aaa:	4283      	cmp	r3, r0
 8003aac:	6011      	str	r1, [r2, #0]
 8003aae:	d1e0      	bne.n	8003a72 <_free_r+0x22>
 8003ab0:	6818      	ldr	r0, [r3, #0]
 8003ab2:	685b      	ldr	r3, [r3, #4]
 8003ab4:	6053      	str	r3, [r2, #4]
 8003ab6:	4408      	add	r0, r1
 8003ab8:	6010      	str	r0, [r2, #0]
 8003aba:	e7da      	b.n	8003a72 <_free_r+0x22>
 8003abc:	d902      	bls.n	8003ac4 <_free_r+0x74>
 8003abe:	230c      	movs	r3, #12
 8003ac0:	602b      	str	r3, [r5, #0]
 8003ac2:	e7d6      	b.n	8003a72 <_free_r+0x22>
 8003ac4:	6820      	ldr	r0, [r4, #0]
 8003ac6:	1821      	adds	r1, r4, r0
 8003ac8:	428b      	cmp	r3, r1
 8003aca:	bf04      	itt	eq
 8003acc:	6819      	ldreq	r1, [r3, #0]
 8003ace:	685b      	ldreq	r3, [r3, #4]
 8003ad0:	6063      	str	r3, [r4, #4]
 8003ad2:	bf04      	itt	eq
 8003ad4:	1809      	addeq	r1, r1, r0
 8003ad6:	6021      	streq	r1, [r4, #0]
 8003ad8:	6054      	str	r4, [r2, #4]
 8003ada:	e7ca      	b.n	8003a72 <_free_r+0x22>
 8003adc:	bd38      	pop	{r3, r4, r5, pc}
 8003ade:	bf00      	nop
 8003ae0:	20000140 	.word	0x20000140

08003ae4 <__ssputs_r>:
 8003ae4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ae8:	688e      	ldr	r6, [r1, #8]
 8003aea:	461f      	mov	r7, r3
 8003aec:	42be      	cmp	r6, r7
 8003aee:	680b      	ldr	r3, [r1, #0]
 8003af0:	4682      	mov	sl, r0
 8003af2:	460c      	mov	r4, r1
 8003af4:	4690      	mov	r8, r2
 8003af6:	d82d      	bhi.n	8003b54 <__ssputs_r+0x70>
 8003af8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003afc:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003b00:	d026      	beq.n	8003b50 <__ssputs_r+0x6c>
 8003b02:	6965      	ldr	r5, [r4, #20]
 8003b04:	6909      	ldr	r1, [r1, #16]
 8003b06:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003b0a:	eba3 0901 	sub.w	r9, r3, r1
 8003b0e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003b12:	1c7b      	adds	r3, r7, #1
 8003b14:	444b      	add	r3, r9
 8003b16:	106d      	asrs	r5, r5, #1
 8003b18:	429d      	cmp	r5, r3
 8003b1a:	bf38      	it	cc
 8003b1c:	461d      	movcc	r5, r3
 8003b1e:	0553      	lsls	r3, r2, #21
 8003b20:	d527      	bpl.n	8003b72 <__ssputs_r+0x8e>
 8003b22:	4629      	mov	r1, r5
 8003b24:	f7ff fbac 	bl	8003280 <_malloc_r>
 8003b28:	4606      	mov	r6, r0
 8003b2a:	b360      	cbz	r0, 8003b86 <__ssputs_r+0xa2>
 8003b2c:	6921      	ldr	r1, [r4, #16]
 8003b2e:	464a      	mov	r2, r9
 8003b30:	f000 fc1a 	bl	8004368 <memcpy>
 8003b34:	89a3      	ldrh	r3, [r4, #12]
 8003b36:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003b3a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003b3e:	81a3      	strh	r3, [r4, #12]
 8003b40:	6126      	str	r6, [r4, #16]
 8003b42:	6165      	str	r5, [r4, #20]
 8003b44:	444e      	add	r6, r9
 8003b46:	eba5 0509 	sub.w	r5, r5, r9
 8003b4a:	6026      	str	r6, [r4, #0]
 8003b4c:	60a5      	str	r5, [r4, #8]
 8003b4e:	463e      	mov	r6, r7
 8003b50:	42be      	cmp	r6, r7
 8003b52:	d900      	bls.n	8003b56 <__ssputs_r+0x72>
 8003b54:	463e      	mov	r6, r7
 8003b56:	6820      	ldr	r0, [r4, #0]
 8003b58:	4632      	mov	r2, r6
 8003b5a:	4641      	mov	r1, r8
 8003b5c:	f000 fbc8 	bl	80042f0 <memmove>
 8003b60:	68a3      	ldr	r3, [r4, #8]
 8003b62:	1b9b      	subs	r3, r3, r6
 8003b64:	60a3      	str	r3, [r4, #8]
 8003b66:	6823      	ldr	r3, [r4, #0]
 8003b68:	4433      	add	r3, r6
 8003b6a:	6023      	str	r3, [r4, #0]
 8003b6c:	2000      	movs	r0, #0
 8003b6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003b72:	462a      	mov	r2, r5
 8003b74:	f000 fc0d 	bl	8004392 <_realloc_r>
 8003b78:	4606      	mov	r6, r0
 8003b7a:	2800      	cmp	r0, #0
 8003b7c:	d1e0      	bne.n	8003b40 <__ssputs_r+0x5c>
 8003b7e:	6921      	ldr	r1, [r4, #16]
 8003b80:	4650      	mov	r0, sl
 8003b82:	f7ff ff65 	bl	8003a50 <_free_r>
 8003b86:	230c      	movs	r3, #12
 8003b88:	f8ca 3000 	str.w	r3, [sl]
 8003b8c:	89a3      	ldrh	r3, [r4, #12]
 8003b8e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003b92:	81a3      	strh	r3, [r4, #12]
 8003b94:	f04f 30ff 	mov.w	r0, #4294967295
 8003b98:	e7e9      	b.n	8003b6e <__ssputs_r+0x8a>
	...

08003b9c <_svfiprintf_r>:
 8003b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ba0:	4698      	mov	r8, r3
 8003ba2:	898b      	ldrh	r3, [r1, #12]
 8003ba4:	061b      	lsls	r3, r3, #24
 8003ba6:	b09d      	sub	sp, #116	@ 0x74
 8003ba8:	4607      	mov	r7, r0
 8003baa:	460d      	mov	r5, r1
 8003bac:	4614      	mov	r4, r2
 8003bae:	d510      	bpl.n	8003bd2 <_svfiprintf_r+0x36>
 8003bb0:	690b      	ldr	r3, [r1, #16]
 8003bb2:	b973      	cbnz	r3, 8003bd2 <_svfiprintf_r+0x36>
 8003bb4:	2140      	movs	r1, #64	@ 0x40
 8003bb6:	f7ff fb63 	bl	8003280 <_malloc_r>
 8003bba:	6028      	str	r0, [r5, #0]
 8003bbc:	6128      	str	r0, [r5, #16]
 8003bbe:	b930      	cbnz	r0, 8003bce <_svfiprintf_r+0x32>
 8003bc0:	230c      	movs	r3, #12
 8003bc2:	603b      	str	r3, [r7, #0]
 8003bc4:	f04f 30ff 	mov.w	r0, #4294967295
 8003bc8:	b01d      	add	sp, #116	@ 0x74
 8003bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bce:	2340      	movs	r3, #64	@ 0x40
 8003bd0:	616b      	str	r3, [r5, #20]
 8003bd2:	2300      	movs	r3, #0
 8003bd4:	9309      	str	r3, [sp, #36]	@ 0x24
 8003bd6:	2320      	movs	r3, #32
 8003bd8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003bdc:	f8cd 800c 	str.w	r8, [sp, #12]
 8003be0:	2330      	movs	r3, #48	@ 0x30
 8003be2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003d80 <_svfiprintf_r+0x1e4>
 8003be6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003bea:	f04f 0901 	mov.w	r9, #1
 8003bee:	4623      	mov	r3, r4
 8003bf0:	469a      	mov	sl, r3
 8003bf2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003bf6:	b10a      	cbz	r2, 8003bfc <_svfiprintf_r+0x60>
 8003bf8:	2a25      	cmp	r2, #37	@ 0x25
 8003bfa:	d1f9      	bne.n	8003bf0 <_svfiprintf_r+0x54>
 8003bfc:	ebba 0b04 	subs.w	fp, sl, r4
 8003c00:	d00b      	beq.n	8003c1a <_svfiprintf_r+0x7e>
 8003c02:	465b      	mov	r3, fp
 8003c04:	4622      	mov	r2, r4
 8003c06:	4629      	mov	r1, r5
 8003c08:	4638      	mov	r0, r7
 8003c0a:	f7ff ff6b 	bl	8003ae4 <__ssputs_r>
 8003c0e:	3001      	adds	r0, #1
 8003c10:	f000 80a7 	beq.w	8003d62 <_svfiprintf_r+0x1c6>
 8003c14:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003c16:	445a      	add	r2, fp
 8003c18:	9209      	str	r2, [sp, #36]	@ 0x24
 8003c1a:	f89a 3000 	ldrb.w	r3, [sl]
 8003c1e:	2b00      	cmp	r3, #0
 8003c20:	f000 809f 	beq.w	8003d62 <_svfiprintf_r+0x1c6>
 8003c24:	2300      	movs	r3, #0
 8003c26:	f04f 32ff 	mov.w	r2, #4294967295
 8003c2a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003c2e:	f10a 0a01 	add.w	sl, sl, #1
 8003c32:	9304      	str	r3, [sp, #16]
 8003c34:	9307      	str	r3, [sp, #28]
 8003c36:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003c3a:	931a      	str	r3, [sp, #104]	@ 0x68
 8003c3c:	4654      	mov	r4, sl
 8003c3e:	2205      	movs	r2, #5
 8003c40:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c44:	484e      	ldr	r0, [pc, #312]	@ (8003d80 <_svfiprintf_r+0x1e4>)
 8003c46:	f7fc facb 	bl	80001e0 <memchr>
 8003c4a:	9a04      	ldr	r2, [sp, #16]
 8003c4c:	b9d8      	cbnz	r0, 8003c86 <_svfiprintf_r+0xea>
 8003c4e:	06d0      	lsls	r0, r2, #27
 8003c50:	bf44      	itt	mi
 8003c52:	2320      	movmi	r3, #32
 8003c54:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c58:	0711      	lsls	r1, r2, #28
 8003c5a:	bf44      	itt	mi
 8003c5c:	232b      	movmi	r3, #43	@ 0x2b
 8003c5e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c62:	f89a 3000 	ldrb.w	r3, [sl]
 8003c66:	2b2a      	cmp	r3, #42	@ 0x2a
 8003c68:	d015      	beq.n	8003c96 <_svfiprintf_r+0xfa>
 8003c6a:	9a07      	ldr	r2, [sp, #28]
 8003c6c:	4654      	mov	r4, sl
 8003c6e:	2000      	movs	r0, #0
 8003c70:	f04f 0c0a 	mov.w	ip, #10
 8003c74:	4621      	mov	r1, r4
 8003c76:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003c7a:	3b30      	subs	r3, #48	@ 0x30
 8003c7c:	2b09      	cmp	r3, #9
 8003c7e:	d94b      	bls.n	8003d18 <_svfiprintf_r+0x17c>
 8003c80:	b1b0      	cbz	r0, 8003cb0 <_svfiprintf_r+0x114>
 8003c82:	9207      	str	r2, [sp, #28]
 8003c84:	e014      	b.n	8003cb0 <_svfiprintf_r+0x114>
 8003c86:	eba0 0308 	sub.w	r3, r0, r8
 8003c8a:	fa09 f303 	lsl.w	r3, r9, r3
 8003c8e:	4313      	orrs	r3, r2
 8003c90:	9304      	str	r3, [sp, #16]
 8003c92:	46a2      	mov	sl, r4
 8003c94:	e7d2      	b.n	8003c3c <_svfiprintf_r+0xa0>
 8003c96:	9b03      	ldr	r3, [sp, #12]
 8003c98:	1d19      	adds	r1, r3, #4
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	9103      	str	r1, [sp, #12]
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	bfbb      	ittet	lt
 8003ca2:	425b      	neglt	r3, r3
 8003ca4:	f042 0202 	orrlt.w	r2, r2, #2
 8003ca8:	9307      	strge	r3, [sp, #28]
 8003caa:	9307      	strlt	r3, [sp, #28]
 8003cac:	bfb8      	it	lt
 8003cae:	9204      	strlt	r2, [sp, #16]
 8003cb0:	7823      	ldrb	r3, [r4, #0]
 8003cb2:	2b2e      	cmp	r3, #46	@ 0x2e
 8003cb4:	d10a      	bne.n	8003ccc <_svfiprintf_r+0x130>
 8003cb6:	7863      	ldrb	r3, [r4, #1]
 8003cb8:	2b2a      	cmp	r3, #42	@ 0x2a
 8003cba:	d132      	bne.n	8003d22 <_svfiprintf_r+0x186>
 8003cbc:	9b03      	ldr	r3, [sp, #12]
 8003cbe:	1d1a      	adds	r2, r3, #4
 8003cc0:	681b      	ldr	r3, [r3, #0]
 8003cc2:	9203      	str	r2, [sp, #12]
 8003cc4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003cc8:	3402      	adds	r4, #2
 8003cca:	9305      	str	r3, [sp, #20]
 8003ccc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003d90 <_svfiprintf_r+0x1f4>
 8003cd0:	7821      	ldrb	r1, [r4, #0]
 8003cd2:	2203      	movs	r2, #3
 8003cd4:	4650      	mov	r0, sl
 8003cd6:	f7fc fa83 	bl	80001e0 <memchr>
 8003cda:	b138      	cbz	r0, 8003cec <_svfiprintf_r+0x150>
 8003cdc:	9b04      	ldr	r3, [sp, #16]
 8003cde:	eba0 000a 	sub.w	r0, r0, sl
 8003ce2:	2240      	movs	r2, #64	@ 0x40
 8003ce4:	4082      	lsls	r2, r0
 8003ce6:	4313      	orrs	r3, r2
 8003ce8:	3401      	adds	r4, #1
 8003cea:	9304      	str	r3, [sp, #16]
 8003cec:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003cf0:	4824      	ldr	r0, [pc, #144]	@ (8003d84 <_svfiprintf_r+0x1e8>)
 8003cf2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003cf6:	2206      	movs	r2, #6
 8003cf8:	f7fc fa72 	bl	80001e0 <memchr>
 8003cfc:	2800      	cmp	r0, #0
 8003cfe:	d036      	beq.n	8003d6e <_svfiprintf_r+0x1d2>
 8003d00:	4b21      	ldr	r3, [pc, #132]	@ (8003d88 <_svfiprintf_r+0x1ec>)
 8003d02:	bb1b      	cbnz	r3, 8003d4c <_svfiprintf_r+0x1b0>
 8003d04:	9b03      	ldr	r3, [sp, #12]
 8003d06:	3307      	adds	r3, #7
 8003d08:	f023 0307 	bic.w	r3, r3, #7
 8003d0c:	3308      	adds	r3, #8
 8003d0e:	9303      	str	r3, [sp, #12]
 8003d10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003d12:	4433      	add	r3, r6
 8003d14:	9309      	str	r3, [sp, #36]	@ 0x24
 8003d16:	e76a      	b.n	8003bee <_svfiprintf_r+0x52>
 8003d18:	fb0c 3202 	mla	r2, ip, r2, r3
 8003d1c:	460c      	mov	r4, r1
 8003d1e:	2001      	movs	r0, #1
 8003d20:	e7a8      	b.n	8003c74 <_svfiprintf_r+0xd8>
 8003d22:	2300      	movs	r3, #0
 8003d24:	3401      	adds	r4, #1
 8003d26:	9305      	str	r3, [sp, #20]
 8003d28:	4619      	mov	r1, r3
 8003d2a:	f04f 0c0a 	mov.w	ip, #10
 8003d2e:	4620      	mov	r0, r4
 8003d30:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003d34:	3a30      	subs	r2, #48	@ 0x30
 8003d36:	2a09      	cmp	r2, #9
 8003d38:	d903      	bls.n	8003d42 <_svfiprintf_r+0x1a6>
 8003d3a:	2b00      	cmp	r3, #0
 8003d3c:	d0c6      	beq.n	8003ccc <_svfiprintf_r+0x130>
 8003d3e:	9105      	str	r1, [sp, #20]
 8003d40:	e7c4      	b.n	8003ccc <_svfiprintf_r+0x130>
 8003d42:	fb0c 2101 	mla	r1, ip, r1, r2
 8003d46:	4604      	mov	r4, r0
 8003d48:	2301      	movs	r3, #1
 8003d4a:	e7f0      	b.n	8003d2e <_svfiprintf_r+0x192>
 8003d4c:	ab03      	add	r3, sp, #12
 8003d4e:	9300      	str	r3, [sp, #0]
 8003d50:	462a      	mov	r2, r5
 8003d52:	4b0e      	ldr	r3, [pc, #56]	@ (8003d8c <_svfiprintf_r+0x1f0>)
 8003d54:	a904      	add	r1, sp, #16
 8003d56:	4638      	mov	r0, r7
 8003d58:	f3af 8000 	nop.w
 8003d5c:	1c42      	adds	r2, r0, #1
 8003d5e:	4606      	mov	r6, r0
 8003d60:	d1d6      	bne.n	8003d10 <_svfiprintf_r+0x174>
 8003d62:	89ab      	ldrh	r3, [r5, #12]
 8003d64:	065b      	lsls	r3, r3, #25
 8003d66:	f53f af2d 	bmi.w	8003bc4 <_svfiprintf_r+0x28>
 8003d6a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003d6c:	e72c      	b.n	8003bc8 <_svfiprintf_r+0x2c>
 8003d6e:	ab03      	add	r3, sp, #12
 8003d70:	9300      	str	r3, [sp, #0]
 8003d72:	462a      	mov	r2, r5
 8003d74:	4b05      	ldr	r3, [pc, #20]	@ (8003d8c <_svfiprintf_r+0x1f0>)
 8003d76:	a904      	add	r1, sp, #16
 8003d78:	4638      	mov	r0, r7
 8003d7a:	f000 f879 	bl	8003e70 <_printf_i>
 8003d7e:	e7ed      	b.n	8003d5c <_svfiprintf_r+0x1c0>
 8003d80:	080048f7 	.word	0x080048f7
 8003d84:	08004901 	.word	0x08004901
 8003d88:	00000000 	.word	0x00000000
 8003d8c:	08003ae5 	.word	0x08003ae5
 8003d90:	080048fd 	.word	0x080048fd

08003d94 <_printf_common>:
 8003d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d98:	4616      	mov	r6, r2
 8003d9a:	4698      	mov	r8, r3
 8003d9c:	688a      	ldr	r2, [r1, #8]
 8003d9e:	690b      	ldr	r3, [r1, #16]
 8003da0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8003da4:	4293      	cmp	r3, r2
 8003da6:	bfb8      	it	lt
 8003da8:	4613      	movlt	r3, r2
 8003daa:	6033      	str	r3, [r6, #0]
 8003dac:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8003db0:	4607      	mov	r7, r0
 8003db2:	460c      	mov	r4, r1
 8003db4:	b10a      	cbz	r2, 8003dba <_printf_common+0x26>
 8003db6:	3301      	adds	r3, #1
 8003db8:	6033      	str	r3, [r6, #0]
 8003dba:	6823      	ldr	r3, [r4, #0]
 8003dbc:	0699      	lsls	r1, r3, #26
 8003dbe:	bf42      	ittt	mi
 8003dc0:	6833      	ldrmi	r3, [r6, #0]
 8003dc2:	3302      	addmi	r3, #2
 8003dc4:	6033      	strmi	r3, [r6, #0]
 8003dc6:	6825      	ldr	r5, [r4, #0]
 8003dc8:	f015 0506 	ands.w	r5, r5, #6
 8003dcc:	d106      	bne.n	8003ddc <_printf_common+0x48>
 8003dce:	f104 0a19 	add.w	sl, r4, #25
 8003dd2:	68e3      	ldr	r3, [r4, #12]
 8003dd4:	6832      	ldr	r2, [r6, #0]
 8003dd6:	1a9b      	subs	r3, r3, r2
 8003dd8:	42ab      	cmp	r3, r5
 8003dda:	dc26      	bgt.n	8003e2a <_printf_common+0x96>
 8003ddc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8003de0:	6822      	ldr	r2, [r4, #0]
 8003de2:	3b00      	subs	r3, #0
 8003de4:	bf18      	it	ne
 8003de6:	2301      	movne	r3, #1
 8003de8:	0692      	lsls	r2, r2, #26
 8003dea:	d42b      	bmi.n	8003e44 <_printf_common+0xb0>
 8003dec:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8003df0:	4641      	mov	r1, r8
 8003df2:	4638      	mov	r0, r7
 8003df4:	47c8      	blx	r9
 8003df6:	3001      	adds	r0, #1
 8003df8:	d01e      	beq.n	8003e38 <_printf_common+0xa4>
 8003dfa:	6823      	ldr	r3, [r4, #0]
 8003dfc:	6922      	ldr	r2, [r4, #16]
 8003dfe:	f003 0306 	and.w	r3, r3, #6
 8003e02:	2b04      	cmp	r3, #4
 8003e04:	bf02      	ittt	eq
 8003e06:	68e5      	ldreq	r5, [r4, #12]
 8003e08:	6833      	ldreq	r3, [r6, #0]
 8003e0a:	1aed      	subeq	r5, r5, r3
 8003e0c:	68a3      	ldr	r3, [r4, #8]
 8003e0e:	bf0c      	ite	eq
 8003e10:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003e14:	2500      	movne	r5, #0
 8003e16:	4293      	cmp	r3, r2
 8003e18:	bfc4      	itt	gt
 8003e1a:	1a9b      	subgt	r3, r3, r2
 8003e1c:	18ed      	addgt	r5, r5, r3
 8003e1e:	2600      	movs	r6, #0
 8003e20:	341a      	adds	r4, #26
 8003e22:	42b5      	cmp	r5, r6
 8003e24:	d11a      	bne.n	8003e5c <_printf_common+0xc8>
 8003e26:	2000      	movs	r0, #0
 8003e28:	e008      	b.n	8003e3c <_printf_common+0xa8>
 8003e2a:	2301      	movs	r3, #1
 8003e2c:	4652      	mov	r2, sl
 8003e2e:	4641      	mov	r1, r8
 8003e30:	4638      	mov	r0, r7
 8003e32:	47c8      	blx	r9
 8003e34:	3001      	adds	r0, #1
 8003e36:	d103      	bne.n	8003e40 <_printf_common+0xac>
 8003e38:	f04f 30ff 	mov.w	r0, #4294967295
 8003e3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003e40:	3501      	adds	r5, #1
 8003e42:	e7c6      	b.n	8003dd2 <_printf_common+0x3e>
 8003e44:	18e1      	adds	r1, r4, r3
 8003e46:	1c5a      	adds	r2, r3, #1
 8003e48:	2030      	movs	r0, #48	@ 0x30
 8003e4a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8003e4e:	4422      	add	r2, r4
 8003e50:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8003e54:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8003e58:	3302      	adds	r3, #2
 8003e5a:	e7c7      	b.n	8003dec <_printf_common+0x58>
 8003e5c:	2301      	movs	r3, #1
 8003e5e:	4622      	mov	r2, r4
 8003e60:	4641      	mov	r1, r8
 8003e62:	4638      	mov	r0, r7
 8003e64:	47c8      	blx	r9
 8003e66:	3001      	adds	r0, #1
 8003e68:	d0e6      	beq.n	8003e38 <_printf_common+0xa4>
 8003e6a:	3601      	adds	r6, #1
 8003e6c:	e7d9      	b.n	8003e22 <_printf_common+0x8e>
	...

08003e70 <_printf_i>:
 8003e70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003e74:	7e0f      	ldrb	r7, [r1, #24]
 8003e76:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8003e78:	2f78      	cmp	r7, #120	@ 0x78
 8003e7a:	4691      	mov	r9, r2
 8003e7c:	4680      	mov	r8, r0
 8003e7e:	460c      	mov	r4, r1
 8003e80:	469a      	mov	sl, r3
 8003e82:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8003e86:	d807      	bhi.n	8003e98 <_printf_i+0x28>
 8003e88:	2f62      	cmp	r7, #98	@ 0x62
 8003e8a:	d80a      	bhi.n	8003ea2 <_printf_i+0x32>
 8003e8c:	2f00      	cmp	r7, #0
 8003e8e:	f000 80d2 	beq.w	8004036 <_printf_i+0x1c6>
 8003e92:	2f58      	cmp	r7, #88	@ 0x58
 8003e94:	f000 80b9 	beq.w	800400a <_printf_i+0x19a>
 8003e98:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003e9c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8003ea0:	e03a      	b.n	8003f18 <_printf_i+0xa8>
 8003ea2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8003ea6:	2b15      	cmp	r3, #21
 8003ea8:	d8f6      	bhi.n	8003e98 <_printf_i+0x28>
 8003eaa:	a101      	add	r1, pc, #4	@ (adr r1, 8003eb0 <_printf_i+0x40>)
 8003eac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003eb0:	08003f09 	.word	0x08003f09
 8003eb4:	08003f1d 	.word	0x08003f1d
 8003eb8:	08003e99 	.word	0x08003e99
 8003ebc:	08003e99 	.word	0x08003e99
 8003ec0:	08003e99 	.word	0x08003e99
 8003ec4:	08003e99 	.word	0x08003e99
 8003ec8:	08003f1d 	.word	0x08003f1d
 8003ecc:	08003e99 	.word	0x08003e99
 8003ed0:	08003e99 	.word	0x08003e99
 8003ed4:	08003e99 	.word	0x08003e99
 8003ed8:	08003e99 	.word	0x08003e99
 8003edc:	0800401d 	.word	0x0800401d
 8003ee0:	08003f47 	.word	0x08003f47
 8003ee4:	08003fd7 	.word	0x08003fd7
 8003ee8:	08003e99 	.word	0x08003e99
 8003eec:	08003e99 	.word	0x08003e99
 8003ef0:	0800403f 	.word	0x0800403f
 8003ef4:	08003e99 	.word	0x08003e99
 8003ef8:	08003f47 	.word	0x08003f47
 8003efc:	08003e99 	.word	0x08003e99
 8003f00:	08003e99 	.word	0x08003e99
 8003f04:	08003fdf 	.word	0x08003fdf
 8003f08:	6833      	ldr	r3, [r6, #0]
 8003f0a:	1d1a      	adds	r2, r3, #4
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	6032      	str	r2, [r6, #0]
 8003f10:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003f14:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8003f18:	2301      	movs	r3, #1
 8003f1a:	e09d      	b.n	8004058 <_printf_i+0x1e8>
 8003f1c:	6833      	ldr	r3, [r6, #0]
 8003f1e:	6820      	ldr	r0, [r4, #0]
 8003f20:	1d19      	adds	r1, r3, #4
 8003f22:	6031      	str	r1, [r6, #0]
 8003f24:	0606      	lsls	r6, r0, #24
 8003f26:	d501      	bpl.n	8003f2c <_printf_i+0xbc>
 8003f28:	681d      	ldr	r5, [r3, #0]
 8003f2a:	e003      	b.n	8003f34 <_printf_i+0xc4>
 8003f2c:	0645      	lsls	r5, r0, #25
 8003f2e:	d5fb      	bpl.n	8003f28 <_printf_i+0xb8>
 8003f30:	f9b3 5000 	ldrsh.w	r5, [r3]
 8003f34:	2d00      	cmp	r5, #0
 8003f36:	da03      	bge.n	8003f40 <_printf_i+0xd0>
 8003f38:	232d      	movs	r3, #45	@ 0x2d
 8003f3a:	426d      	negs	r5, r5
 8003f3c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003f40:	4859      	ldr	r0, [pc, #356]	@ (80040a8 <_printf_i+0x238>)
 8003f42:	230a      	movs	r3, #10
 8003f44:	e011      	b.n	8003f6a <_printf_i+0xfa>
 8003f46:	6821      	ldr	r1, [r4, #0]
 8003f48:	6833      	ldr	r3, [r6, #0]
 8003f4a:	0608      	lsls	r0, r1, #24
 8003f4c:	f853 5b04 	ldr.w	r5, [r3], #4
 8003f50:	d402      	bmi.n	8003f58 <_printf_i+0xe8>
 8003f52:	0649      	lsls	r1, r1, #25
 8003f54:	bf48      	it	mi
 8003f56:	b2ad      	uxthmi	r5, r5
 8003f58:	2f6f      	cmp	r7, #111	@ 0x6f
 8003f5a:	4853      	ldr	r0, [pc, #332]	@ (80040a8 <_printf_i+0x238>)
 8003f5c:	6033      	str	r3, [r6, #0]
 8003f5e:	bf14      	ite	ne
 8003f60:	230a      	movne	r3, #10
 8003f62:	2308      	moveq	r3, #8
 8003f64:	2100      	movs	r1, #0
 8003f66:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8003f6a:	6866      	ldr	r6, [r4, #4]
 8003f6c:	60a6      	str	r6, [r4, #8]
 8003f6e:	2e00      	cmp	r6, #0
 8003f70:	bfa2      	ittt	ge
 8003f72:	6821      	ldrge	r1, [r4, #0]
 8003f74:	f021 0104 	bicge.w	r1, r1, #4
 8003f78:	6021      	strge	r1, [r4, #0]
 8003f7a:	b90d      	cbnz	r5, 8003f80 <_printf_i+0x110>
 8003f7c:	2e00      	cmp	r6, #0
 8003f7e:	d04b      	beq.n	8004018 <_printf_i+0x1a8>
 8003f80:	4616      	mov	r6, r2
 8003f82:	fbb5 f1f3 	udiv	r1, r5, r3
 8003f86:	fb03 5711 	mls	r7, r3, r1, r5
 8003f8a:	5dc7      	ldrb	r7, [r0, r7]
 8003f8c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003f90:	462f      	mov	r7, r5
 8003f92:	42bb      	cmp	r3, r7
 8003f94:	460d      	mov	r5, r1
 8003f96:	d9f4      	bls.n	8003f82 <_printf_i+0x112>
 8003f98:	2b08      	cmp	r3, #8
 8003f9a:	d10b      	bne.n	8003fb4 <_printf_i+0x144>
 8003f9c:	6823      	ldr	r3, [r4, #0]
 8003f9e:	07df      	lsls	r7, r3, #31
 8003fa0:	d508      	bpl.n	8003fb4 <_printf_i+0x144>
 8003fa2:	6923      	ldr	r3, [r4, #16]
 8003fa4:	6861      	ldr	r1, [r4, #4]
 8003fa6:	4299      	cmp	r1, r3
 8003fa8:	bfde      	ittt	le
 8003faa:	2330      	movle	r3, #48	@ 0x30
 8003fac:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003fb0:	f106 36ff 	addle.w	r6, r6, #4294967295
 8003fb4:	1b92      	subs	r2, r2, r6
 8003fb6:	6122      	str	r2, [r4, #16]
 8003fb8:	f8cd a000 	str.w	sl, [sp]
 8003fbc:	464b      	mov	r3, r9
 8003fbe:	aa03      	add	r2, sp, #12
 8003fc0:	4621      	mov	r1, r4
 8003fc2:	4640      	mov	r0, r8
 8003fc4:	f7ff fee6 	bl	8003d94 <_printf_common>
 8003fc8:	3001      	adds	r0, #1
 8003fca:	d14a      	bne.n	8004062 <_printf_i+0x1f2>
 8003fcc:	f04f 30ff 	mov.w	r0, #4294967295
 8003fd0:	b004      	add	sp, #16
 8003fd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003fd6:	6823      	ldr	r3, [r4, #0]
 8003fd8:	f043 0320 	orr.w	r3, r3, #32
 8003fdc:	6023      	str	r3, [r4, #0]
 8003fde:	4833      	ldr	r0, [pc, #204]	@ (80040ac <_printf_i+0x23c>)
 8003fe0:	2778      	movs	r7, #120	@ 0x78
 8003fe2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8003fe6:	6823      	ldr	r3, [r4, #0]
 8003fe8:	6831      	ldr	r1, [r6, #0]
 8003fea:	061f      	lsls	r7, r3, #24
 8003fec:	f851 5b04 	ldr.w	r5, [r1], #4
 8003ff0:	d402      	bmi.n	8003ff8 <_printf_i+0x188>
 8003ff2:	065f      	lsls	r7, r3, #25
 8003ff4:	bf48      	it	mi
 8003ff6:	b2ad      	uxthmi	r5, r5
 8003ff8:	6031      	str	r1, [r6, #0]
 8003ffa:	07d9      	lsls	r1, r3, #31
 8003ffc:	bf44      	itt	mi
 8003ffe:	f043 0320 	orrmi.w	r3, r3, #32
 8004002:	6023      	strmi	r3, [r4, #0]
 8004004:	b11d      	cbz	r5, 800400e <_printf_i+0x19e>
 8004006:	2310      	movs	r3, #16
 8004008:	e7ac      	b.n	8003f64 <_printf_i+0xf4>
 800400a:	4827      	ldr	r0, [pc, #156]	@ (80040a8 <_printf_i+0x238>)
 800400c:	e7e9      	b.n	8003fe2 <_printf_i+0x172>
 800400e:	6823      	ldr	r3, [r4, #0]
 8004010:	f023 0320 	bic.w	r3, r3, #32
 8004014:	6023      	str	r3, [r4, #0]
 8004016:	e7f6      	b.n	8004006 <_printf_i+0x196>
 8004018:	4616      	mov	r6, r2
 800401a:	e7bd      	b.n	8003f98 <_printf_i+0x128>
 800401c:	6833      	ldr	r3, [r6, #0]
 800401e:	6825      	ldr	r5, [r4, #0]
 8004020:	6961      	ldr	r1, [r4, #20]
 8004022:	1d18      	adds	r0, r3, #4
 8004024:	6030      	str	r0, [r6, #0]
 8004026:	062e      	lsls	r6, r5, #24
 8004028:	681b      	ldr	r3, [r3, #0]
 800402a:	d501      	bpl.n	8004030 <_printf_i+0x1c0>
 800402c:	6019      	str	r1, [r3, #0]
 800402e:	e002      	b.n	8004036 <_printf_i+0x1c6>
 8004030:	0668      	lsls	r0, r5, #25
 8004032:	d5fb      	bpl.n	800402c <_printf_i+0x1bc>
 8004034:	8019      	strh	r1, [r3, #0]
 8004036:	2300      	movs	r3, #0
 8004038:	6123      	str	r3, [r4, #16]
 800403a:	4616      	mov	r6, r2
 800403c:	e7bc      	b.n	8003fb8 <_printf_i+0x148>
 800403e:	6833      	ldr	r3, [r6, #0]
 8004040:	1d1a      	adds	r2, r3, #4
 8004042:	6032      	str	r2, [r6, #0]
 8004044:	681e      	ldr	r6, [r3, #0]
 8004046:	6862      	ldr	r2, [r4, #4]
 8004048:	2100      	movs	r1, #0
 800404a:	4630      	mov	r0, r6
 800404c:	f7fc f8c8 	bl	80001e0 <memchr>
 8004050:	b108      	cbz	r0, 8004056 <_printf_i+0x1e6>
 8004052:	1b80      	subs	r0, r0, r6
 8004054:	6060      	str	r0, [r4, #4]
 8004056:	6863      	ldr	r3, [r4, #4]
 8004058:	6123      	str	r3, [r4, #16]
 800405a:	2300      	movs	r3, #0
 800405c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004060:	e7aa      	b.n	8003fb8 <_printf_i+0x148>
 8004062:	6923      	ldr	r3, [r4, #16]
 8004064:	4632      	mov	r2, r6
 8004066:	4649      	mov	r1, r9
 8004068:	4640      	mov	r0, r8
 800406a:	47d0      	blx	sl
 800406c:	3001      	adds	r0, #1
 800406e:	d0ad      	beq.n	8003fcc <_printf_i+0x15c>
 8004070:	6823      	ldr	r3, [r4, #0]
 8004072:	079b      	lsls	r3, r3, #30
 8004074:	d413      	bmi.n	800409e <_printf_i+0x22e>
 8004076:	68e0      	ldr	r0, [r4, #12]
 8004078:	9b03      	ldr	r3, [sp, #12]
 800407a:	4298      	cmp	r0, r3
 800407c:	bfb8      	it	lt
 800407e:	4618      	movlt	r0, r3
 8004080:	e7a6      	b.n	8003fd0 <_printf_i+0x160>
 8004082:	2301      	movs	r3, #1
 8004084:	4632      	mov	r2, r6
 8004086:	4649      	mov	r1, r9
 8004088:	4640      	mov	r0, r8
 800408a:	47d0      	blx	sl
 800408c:	3001      	adds	r0, #1
 800408e:	d09d      	beq.n	8003fcc <_printf_i+0x15c>
 8004090:	3501      	adds	r5, #1
 8004092:	68e3      	ldr	r3, [r4, #12]
 8004094:	9903      	ldr	r1, [sp, #12]
 8004096:	1a5b      	subs	r3, r3, r1
 8004098:	42ab      	cmp	r3, r5
 800409a:	dcf2      	bgt.n	8004082 <_printf_i+0x212>
 800409c:	e7eb      	b.n	8004076 <_printf_i+0x206>
 800409e:	2500      	movs	r5, #0
 80040a0:	f104 0619 	add.w	r6, r4, #25
 80040a4:	e7f5      	b.n	8004092 <_printf_i+0x222>
 80040a6:	bf00      	nop
 80040a8:	08004908 	.word	0x08004908
 80040ac:	08004919 	.word	0x08004919

080040b0 <__sflush_r>:
 80040b0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80040b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80040b8:	0716      	lsls	r6, r2, #28
 80040ba:	4605      	mov	r5, r0
 80040bc:	460c      	mov	r4, r1
 80040be:	d454      	bmi.n	800416a <__sflush_r+0xba>
 80040c0:	684b      	ldr	r3, [r1, #4]
 80040c2:	2b00      	cmp	r3, #0
 80040c4:	dc02      	bgt.n	80040cc <__sflush_r+0x1c>
 80040c6:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80040c8:	2b00      	cmp	r3, #0
 80040ca:	dd48      	ble.n	800415e <__sflush_r+0xae>
 80040cc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80040ce:	2e00      	cmp	r6, #0
 80040d0:	d045      	beq.n	800415e <__sflush_r+0xae>
 80040d2:	2300      	movs	r3, #0
 80040d4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80040d8:	682f      	ldr	r7, [r5, #0]
 80040da:	6a21      	ldr	r1, [r4, #32]
 80040dc:	602b      	str	r3, [r5, #0]
 80040de:	d030      	beq.n	8004142 <__sflush_r+0x92>
 80040e0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80040e2:	89a3      	ldrh	r3, [r4, #12]
 80040e4:	0759      	lsls	r1, r3, #29
 80040e6:	d505      	bpl.n	80040f4 <__sflush_r+0x44>
 80040e8:	6863      	ldr	r3, [r4, #4]
 80040ea:	1ad2      	subs	r2, r2, r3
 80040ec:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80040ee:	b10b      	cbz	r3, 80040f4 <__sflush_r+0x44>
 80040f0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80040f2:	1ad2      	subs	r2, r2, r3
 80040f4:	2300      	movs	r3, #0
 80040f6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80040f8:	6a21      	ldr	r1, [r4, #32]
 80040fa:	4628      	mov	r0, r5
 80040fc:	47b0      	blx	r6
 80040fe:	1c43      	adds	r3, r0, #1
 8004100:	89a3      	ldrh	r3, [r4, #12]
 8004102:	d106      	bne.n	8004112 <__sflush_r+0x62>
 8004104:	6829      	ldr	r1, [r5, #0]
 8004106:	291d      	cmp	r1, #29
 8004108:	d82b      	bhi.n	8004162 <__sflush_r+0xb2>
 800410a:	4a2a      	ldr	r2, [pc, #168]	@ (80041b4 <__sflush_r+0x104>)
 800410c:	410a      	asrs	r2, r1
 800410e:	07d6      	lsls	r6, r2, #31
 8004110:	d427      	bmi.n	8004162 <__sflush_r+0xb2>
 8004112:	2200      	movs	r2, #0
 8004114:	6062      	str	r2, [r4, #4]
 8004116:	04d9      	lsls	r1, r3, #19
 8004118:	6922      	ldr	r2, [r4, #16]
 800411a:	6022      	str	r2, [r4, #0]
 800411c:	d504      	bpl.n	8004128 <__sflush_r+0x78>
 800411e:	1c42      	adds	r2, r0, #1
 8004120:	d101      	bne.n	8004126 <__sflush_r+0x76>
 8004122:	682b      	ldr	r3, [r5, #0]
 8004124:	b903      	cbnz	r3, 8004128 <__sflush_r+0x78>
 8004126:	6560      	str	r0, [r4, #84]	@ 0x54
 8004128:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800412a:	602f      	str	r7, [r5, #0]
 800412c:	b1b9      	cbz	r1, 800415e <__sflush_r+0xae>
 800412e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004132:	4299      	cmp	r1, r3
 8004134:	d002      	beq.n	800413c <__sflush_r+0x8c>
 8004136:	4628      	mov	r0, r5
 8004138:	f7ff fc8a 	bl	8003a50 <_free_r>
 800413c:	2300      	movs	r3, #0
 800413e:	6363      	str	r3, [r4, #52]	@ 0x34
 8004140:	e00d      	b.n	800415e <__sflush_r+0xae>
 8004142:	2301      	movs	r3, #1
 8004144:	4628      	mov	r0, r5
 8004146:	47b0      	blx	r6
 8004148:	4602      	mov	r2, r0
 800414a:	1c50      	adds	r0, r2, #1
 800414c:	d1c9      	bne.n	80040e2 <__sflush_r+0x32>
 800414e:	682b      	ldr	r3, [r5, #0]
 8004150:	2b00      	cmp	r3, #0
 8004152:	d0c6      	beq.n	80040e2 <__sflush_r+0x32>
 8004154:	2b1d      	cmp	r3, #29
 8004156:	d001      	beq.n	800415c <__sflush_r+0xac>
 8004158:	2b16      	cmp	r3, #22
 800415a:	d11e      	bne.n	800419a <__sflush_r+0xea>
 800415c:	602f      	str	r7, [r5, #0]
 800415e:	2000      	movs	r0, #0
 8004160:	e022      	b.n	80041a8 <__sflush_r+0xf8>
 8004162:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004166:	b21b      	sxth	r3, r3
 8004168:	e01b      	b.n	80041a2 <__sflush_r+0xf2>
 800416a:	690f      	ldr	r7, [r1, #16]
 800416c:	2f00      	cmp	r7, #0
 800416e:	d0f6      	beq.n	800415e <__sflush_r+0xae>
 8004170:	0793      	lsls	r3, r2, #30
 8004172:	680e      	ldr	r6, [r1, #0]
 8004174:	bf08      	it	eq
 8004176:	694b      	ldreq	r3, [r1, #20]
 8004178:	600f      	str	r7, [r1, #0]
 800417a:	bf18      	it	ne
 800417c:	2300      	movne	r3, #0
 800417e:	eba6 0807 	sub.w	r8, r6, r7
 8004182:	608b      	str	r3, [r1, #8]
 8004184:	f1b8 0f00 	cmp.w	r8, #0
 8004188:	dde9      	ble.n	800415e <__sflush_r+0xae>
 800418a:	6a21      	ldr	r1, [r4, #32]
 800418c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800418e:	4643      	mov	r3, r8
 8004190:	463a      	mov	r2, r7
 8004192:	4628      	mov	r0, r5
 8004194:	47b0      	blx	r6
 8004196:	2800      	cmp	r0, #0
 8004198:	dc08      	bgt.n	80041ac <__sflush_r+0xfc>
 800419a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800419e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80041a2:	81a3      	strh	r3, [r4, #12]
 80041a4:	f04f 30ff 	mov.w	r0, #4294967295
 80041a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041ac:	4407      	add	r7, r0
 80041ae:	eba8 0800 	sub.w	r8, r8, r0
 80041b2:	e7e7      	b.n	8004184 <__sflush_r+0xd4>
 80041b4:	dfbffffe 	.word	0xdfbffffe

080041b8 <_fflush_r>:
 80041b8:	b538      	push	{r3, r4, r5, lr}
 80041ba:	690b      	ldr	r3, [r1, #16]
 80041bc:	4605      	mov	r5, r0
 80041be:	460c      	mov	r4, r1
 80041c0:	b913      	cbnz	r3, 80041c8 <_fflush_r+0x10>
 80041c2:	2500      	movs	r5, #0
 80041c4:	4628      	mov	r0, r5
 80041c6:	bd38      	pop	{r3, r4, r5, pc}
 80041c8:	b118      	cbz	r0, 80041d2 <_fflush_r+0x1a>
 80041ca:	6a03      	ldr	r3, [r0, #32]
 80041cc:	b90b      	cbnz	r3, 80041d2 <_fflush_r+0x1a>
 80041ce:	f7ff f9db 	bl	8003588 <__sinit>
 80041d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	d0f3      	beq.n	80041c2 <_fflush_r+0xa>
 80041da:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80041dc:	07d0      	lsls	r0, r2, #31
 80041de:	d404      	bmi.n	80041ea <_fflush_r+0x32>
 80041e0:	0599      	lsls	r1, r3, #22
 80041e2:	d402      	bmi.n	80041ea <_fflush_r+0x32>
 80041e4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80041e6:	f7ff fc12 	bl	8003a0e <__retarget_lock_acquire_recursive>
 80041ea:	4628      	mov	r0, r5
 80041ec:	4621      	mov	r1, r4
 80041ee:	f7ff ff5f 	bl	80040b0 <__sflush_r>
 80041f2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80041f4:	07da      	lsls	r2, r3, #31
 80041f6:	4605      	mov	r5, r0
 80041f8:	d4e4      	bmi.n	80041c4 <_fflush_r+0xc>
 80041fa:	89a3      	ldrh	r3, [r4, #12]
 80041fc:	059b      	lsls	r3, r3, #22
 80041fe:	d4e1      	bmi.n	80041c4 <_fflush_r+0xc>
 8004200:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004202:	f7ff fc05 	bl	8003a10 <__retarget_lock_release_recursive>
 8004206:	e7dd      	b.n	80041c4 <_fflush_r+0xc>

08004208 <fiprintf>:
 8004208:	b40e      	push	{r1, r2, r3}
 800420a:	b503      	push	{r0, r1, lr}
 800420c:	4601      	mov	r1, r0
 800420e:	ab03      	add	r3, sp, #12
 8004210:	4805      	ldr	r0, [pc, #20]	@ (8004228 <fiprintf+0x20>)
 8004212:	f853 2b04 	ldr.w	r2, [r3], #4
 8004216:	6800      	ldr	r0, [r0, #0]
 8004218:	9301      	str	r3, [sp, #4]
 800421a:	f000 f911 	bl	8004440 <_vfiprintf_r>
 800421e:	b002      	add	sp, #8
 8004220:	f85d eb04 	ldr.w	lr, [sp], #4
 8004224:	b003      	add	sp, #12
 8004226:	4770      	bx	lr
 8004228:	20000038 	.word	0x20000038

0800422c <__swhatbuf_r>:
 800422c:	b570      	push	{r4, r5, r6, lr}
 800422e:	460c      	mov	r4, r1
 8004230:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004234:	2900      	cmp	r1, #0
 8004236:	b096      	sub	sp, #88	@ 0x58
 8004238:	4615      	mov	r5, r2
 800423a:	461e      	mov	r6, r3
 800423c:	da0d      	bge.n	800425a <__swhatbuf_r+0x2e>
 800423e:	89a3      	ldrh	r3, [r4, #12]
 8004240:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004244:	f04f 0100 	mov.w	r1, #0
 8004248:	bf14      	ite	ne
 800424a:	2340      	movne	r3, #64	@ 0x40
 800424c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8004250:	2000      	movs	r0, #0
 8004252:	6031      	str	r1, [r6, #0]
 8004254:	602b      	str	r3, [r5, #0]
 8004256:	b016      	add	sp, #88	@ 0x58
 8004258:	bd70      	pop	{r4, r5, r6, pc}
 800425a:	466a      	mov	r2, sp
 800425c:	f000 f862 	bl	8004324 <_fstat_r>
 8004260:	2800      	cmp	r0, #0
 8004262:	dbec      	blt.n	800423e <__swhatbuf_r+0x12>
 8004264:	9901      	ldr	r1, [sp, #4]
 8004266:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800426a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800426e:	4259      	negs	r1, r3
 8004270:	4159      	adcs	r1, r3
 8004272:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004276:	e7eb      	b.n	8004250 <__swhatbuf_r+0x24>

08004278 <__smakebuf_r>:
 8004278:	898b      	ldrh	r3, [r1, #12]
 800427a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800427c:	079d      	lsls	r5, r3, #30
 800427e:	4606      	mov	r6, r0
 8004280:	460c      	mov	r4, r1
 8004282:	d507      	bpl.n	8004294 <__smakebuf_r+0x1c>
 8004284:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8004288:	6023      	str	r3, [r4, #0]
 800428a:	6123      	str	r3, [r4, #16]
 800428c:	2301      	movs	r3, #1
 800428e:	6163      	str	r3, [r4, #20]
 8004290:	b003      	add	sp, #12
 8004292:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004294:	ab01      	add	r3, sp, #4
 8004296:	466a      	mov	r2, sp
 8004298:	f7ff ffc8 	bl	800422c <__swhatbuf_r>
 800429c:	9f00      	ldr	r7, [sp, #0]
 800429e:	4605      	mov	r5, r0
 80042a0:	4639      	mov	r1, r7
 80042a2:	4630      	mov	r0, r6
 80042a4:	f7fe ffec 	bl	8003280 <_malloc_r>
 80042a8:	b948      	cbnz	r0, 80042be <__smakebuf_r+0x46>
 80042aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042ae:	059a      	lsls	r2, r3, #22
 80042b0:	d4ee      	bmi.n	8004290 <__smakebuf_r+0x18>
 80042b2:	f023 0303 	bic.w	r3, r3, #3
 80042b6:	f043 0302 	orr.w	r3, r3, #2
 80042ba:	81a3      	strh	r3, [r4, #12]
 80042bc:	e7e2      	b.n	8004284 <__smakebuf_r+0xc>
 80042be:	89a3      	ldrh	r3, [r4, #12]
 80042c0:	6020      	str	r0, [r4, #0]
 80042c2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80042c6:	81a3      	strh	r3, [r4, #12]
 80042c8:	9b01      	ldr	r3, [sp, #4]
 80042ca:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80042ce:	b15b      	cbz	r3, 80042e8 <__smakebuf_r+0x70>
 80042d0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80042d4:	4630      	mov	r0, r6
 80042d6:	f000 f837 	bl	8004348 <_isatty_r>
 80042da:	b128      	cbz	r0, 80042e8 <__smakebuf_r+0x70>
 80042dc:	89a3      	ldrh	r3, [r4, #12]
 80042de:	f023 0303 	bic.w	r3, r3, #3
 80042e2:	f043 0301 	orr.w	r3, r3, #1
 80042e6:	81a3      	strh	r3, [r4, #12]
 80042e8:	89a3      	ldrh	r3, [r4, #12]
 80042ea:	431d      	orrs	r5, r3
 80042ec:	81a5      	strh	r5, [r4, #12]
 80042ee:	e7cf      	b.n	8004290 <__smakebuf_r+0x18>

080042f0 <memmove>:
 80042f0:	4288      	cmp	r0, r1
 80042f2:	b510      	push	{r4, lr}
 80042f4:	eb01 0402 	add.w	r4, r1, r2
 80042f8:	d902      	bls.n	8004300 <memmove+0x10>
 80042fa:	4284      	cmp	r4, r0
 80042fc:	4623      	mov	r3, r4
 80042fe:	d807      	bhi.n	8004310 <memmove+0x20>
 8004300:	1e43      	subs	r3, r0, #1
 8004302:	42a1      	cmp	r1, r4
 8004304:	d008      	beq.n	8004318 <memmove+0x28>
 8004306:	f811 2b01 	ldrb.w	r2, [r1], #1
 800430a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800430e:	e7f8      	b.n	8004302 <memmove+0x12>
 8004310:	4402      	add	r2, r0
 8004312:	4601      	mov	r1, r0
 8004314:	428a      	cmp	r2, r1
 8004316:	d100      	bne.n	800431a <memmove+0x2a>
 8004318:	bd10      	pop	{r4, pc}
 800431a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800431e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004322:	e7f7      	b.n	8004314 <memmove+0x24>

08004324 <_fstat_r>:
 8004324:	b538      	push	{r3, r4, r5, lr}
 8004326:	4d07      	ldr	r5, [pc, #28]	@ (8004344 <_fstat_r+0x20>)
 8004328:	2300      	movs	r3, #0
 800432a:	4604      	mov	r4, r0
 800432c:	4608      	mov	r0, r1
 800432e:	4611      	mov	r1, r2
 8004330:	602b      	str	r3, [r5, #0]
 8004332:	f7fd fb1a 	bl	800196a <_fstat>
 8004336:	1c43      	adds	r3, r0, #1
 8004338:	d102      	bne.n	8004340 <_fstat_r+0x1c>
 800433a:	682b      	ldr	r3, [r5, #0]
 800433c:	b103      	cbz	r3, 8004340 <_fstat_r+0x1c>
 800433e:	6023      	str	r3, [r4, #0]
 8004340:	bd38      	pop	{r3, r4, r5, pc}
 8004342:	bf00      	nop
 8004344:	20000280 	.word	0x20000280

08004348 <_isatty_r>:
 8004348:	b538      	push	{r3, r4, r5, lr}
 800434a:	4d06      	ldr	r5, [pc, #24]	@ (8004364 <_isatty_r+0x1c>)
 800434c:	2300      	movs	r3, #0
 800434e:	4604      	mov	r4, r0
 8004350:	4608      	mov	r0, r1
 8004352:	602b      	str	r3, [r5, #0]
 8004354:	f7fd fb19 	bl	800198a <_isatty>
 8004358:	1c43      	adds	r3, r0, #1
 800435a:	d102      	bne.n	8004362 <_isatty_r+0x1a>
 800435c:	682b      	ldr	r3, [r5, #0]
 800435e:	b103      	cbz	r3, 8004362 <_isatty_r+0x1a>
 8004360:	6023      	str	r3, [r4, #0]
 8004362:	bd38      	pop	{r3, r4, r5, pc}
 8004364:	20000280 	.word	0x20000280

08004368 <memcpy>:
 8004368:	440a      	add	r2, r1
 800436a:	4291      	cmp	r1, r2
 800436c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004370:	d100      	bne.n	8004374 <memcpy+0xc>
 8004372:	4770      	bx	lr
 8004374:	b510      	push	{r4, lr}
 8004376:	f811 4b01 	ldrb.w	r4, [r1], #1
 800437a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800437e:	4291      	cmp	r1, r2
 8004380:	d1f9      	bne.n	8004376 <memcpy+0xe>
 8004382:	bd10      	pop	{r4, pc}

08004384 <abort>:
 8004384:	b508      	push	{r3, lr}
 8004386:	2006      	movs	r0, #6
 8004388:	f000 f99a 	bl	80046c0 <raise>
 800438c:	2001      	movs	r0, #1
 800438e:	f7fd fa9c 	bl	80018ca <_exit>

08004392 <_realloc_r>:
 8004392:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004396:	4680      	mov	r8, r0
 8004398:	4615      	mov	r5, r2
 800439a:	460c      	mov	r4, r1
 800439c:	b921      	cbnz	r1, 80043a8 <_realloc_r+0x16>
 800439e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80043a2:	4611      	mov	r1, r2
 80043a4:	f7fe bf6c 	b.w	8003280 <_malloc_r>
 80043a8:	b92a      	cbnz	r2, 80043b6 <_realloc_r+0x24>
 80043aa:	f7ff fb51 	bl	8003a50 <_free_r>
 80043ae:	2400      	movs	r4, #0
 80043b0:	4620      	mov	r0, r4
 80043b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80043b6:	f000 f99f 	bl	80046f8 <_malloc_usable_size_r>
 80043ba:	4285      	cmp	r5, r0
 80043bc:	4606      	mov	r6, r0
 80043be:	d802      	bhi.n	80043c6 <_realloc_r+0x34>
 80043c0:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80043c4:	d8f4      	bhi.n	80043b0 <_realloc_r+0x1e>
 80043c6:	4629      	mov	r1, r5
 80043c8:	4640      	mov	r0, r8
 80043ca:	f7fe ff59 	bl	8003280 <_malloc_r>
 80043ce:	4607      	mov	r7, r0
 80043d0:	2800      	cmp	r0, #0
 80043d2:	d0ec      	beq.n	80043ae <_realloc_r+0x1c>
 80043d4:	42b5      	cmp	r5, r6
 80043d6:	462a      	mov	r2, r5
 80043d8:	4621      	mov	r1, r4
 80043da:	bf28      	it	cs
 80043dc:	4632      	movcs	r2, r6
 80043de:	f7ff ffc3 	bl	8004368 <memcpy>
 80043e2:	4621      	mov	r1, r4
 80043e4:	4640      	mov	r0, r8
 80043e6:	f7ff fb33 	bl	8003a50 <_free_r>
 80043ea:	463c      	mov	r4, r7
 80043ec:	e7e0      	b.n	80043b0 <_realloc_r+0x1e>

080043ee <__sfputc_r>:
 80043ee:	6893      	ldr	r3, [r2, #8]
 80043f0:	3b01      	subs	r3, #1
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	b410      	push	{r4}
 80043f6:	6093      	str	r3, [r2, #8]
 80043f8:	da08      	bge.n	800440c <__sfputc_r+0x1e>
 80043fa:	6994      	ldr	r4, [r2, #24]
 80043fc:	42a3      	cmp	r3, r4
 80043fe:	db01      	blt.n	8004404 <__sfputc_r+0x16>
 8004400:	290a      	cmp	r1, #10
 8004402:	d103      	bne.n	800440c <__sfputc_r+0x1e>
 8004404:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004408:	f7ff b9b5 	b.w	8003776 <__swbuf_r>
 800440c:	6813      	ldr	r3, [r2, #0]
 800440e:	1c58      	adds	r0, r3, #1
 8004410:	6010      	str	r0, [r2, #0]
 8004412:	7019      	strb	r1, [r3, #0]
 8004414:	4608      	mov	r0, r1
 8004416:	f85d 4b04 	ldr.w	r4, [sp], #4
 800441a:	4770      	bx	lr

0800441c <__sfputs_r>:
 800441c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800441e:	4606      	mov	r6, r0
 8004420:	460f      	mov	r7, r1
 8004422:	4614      	mov	r4, r2
 8004424:	18d5      	adds	r5, r2, r3
 8004426:	42ac      	cmp	r4, r5
 8004428:	d101      	bne.n	800442e <__sfputs_r+0x12>
 800442a:	2000      	movs	r0, #0
 800442c:	e007      	b.n	800443e <__sfputs_r+0x22>
 800442e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004432:	463a      	mov	r2, r7
 8004434:	4630      	mov	r0, r6
 8004436:	f7ff ffda 	bl	80043ee <__sfputc_r>
 800443a:	1c43      	adds	r3, r0, #1
 800443c:	d1f3      	bne.n	8004426 <__sfputs_r+0xa>
 800443e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004440 <_vfiprintf_r>:
 8004440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004444:	460d      	mov	r5, r1
 8004446:	b09d      	sub	sp, #116	@ 0x74
 8004448:	4614      	mov	r4, r2
 800444a:	4698      	mov	r8, r3
 800444c:	4606      	mov	r6, r0
 800444e:	b118      	cbz	r0, 8004458 <_vfiprintf_r+0x18>
 8004450:	6a03      	ldr	r3, [r0, #32]
 8004452:	b90b      	cbnz	r3, 8004458 <_vfiprintf_r+0x18>
 8004454:	f7ff f898 	bl	8003588 <__sinit>
 8004458:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800445a:	07d9      	lsls	r1, r3, #31
 800445c:	d405      	bmi.n	800446a <_vfiprintf_r+0x2a>
 800445e:	89ab      	ldrh	r3, [r5, #12]
 8004460:	059a      	lsls	r2, r3, #22
 8004462:	d402      	bmi.n	800446a <_vfiprintf_r+0x2a>
 8004464:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004466:	f7ff fad2 	bl	8003a0e <__retarget_lock_acquire_recursive>
 800446a:	89ab      	ldrh	r3, [r5, #12]
 800446c:	071b      	lsls	r3, r3, #28
 800446e:	d501      	bpl.n	8004474 <_vfiprintf_r+0x34>
 8004470:	692b      	ldr	r3, [r5, #16]
 8004472:	b99b      	cbnz	r3, 800449c <_vfiprintf_r+0x5c>
 8004474:	4629      	mov	r1, r5
 8004476:	4630      	mov	r0, r6
 8004478:	f7ff f9bc 	bl	80037f4 <__swsetup_r>
 800447c:	b170      	cbz	r0, 800449c <_vfiprintf_r+0x5c>
 800447e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004480:	07dc      	lsls	r4, r3, #31
 8004482:	d504      	bpl.n	800448e <_vfiprintf_r+0x4e>
 8004484:	f04f 30ff 	mov.w	r0, #4294967295
 8004488:	b01d      	add	sp, #116	@ 0x74
 800448a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800448e:	89ab      	ldrh	r3, [r5, #12]
 8004490:	0598      	lsls	r0, r3, #22
 8004492:	d4f7      	bmi.n	8004484 <_vfiprintf_r+0x44>
 8004494:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004496:	f7ff fabb 	bl	8003a10 <__retarget_lock_release_recursive>
 800449a:	e7f3      	b.n	8004484 <_vfiprintf_r+0x44>
 800449c:	2300      	movs	r3, #0
 800449e:	9309      	str	r3, [sp, #36]	@ 0x24
 80044a0:	2320      	movs	r3, #32
 80044a2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80044a6:	f8cd 800c 	str.w	r8, [sp, #12]
 80044aa:	2330      	movs	r3, #48	@ 0x30
 80044ac:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800465c <_vfiprintf_r+0x21c>
 80044b0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80044b4:	f04f 0901 	mov.w	r9, #1
 80044b8:	4623      	mov	r3, r4
 80044ba:	469a      	mov	sl, r3
 80044bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80044c0:	b10a      	cbz	r2, 80044c6 <_vfiprintf_r+0x86>
 80044c2:	2a25      	cmp	r2, #37	@ 0x25
 80044c4:	d1f9      	bne.n	80044ba <_vfiprintf_r+0x7a>
 80044c6:	ebba 0b04 	subs.w	fp, sl, r4
 80044ca:	d00b      	beq.n	80044e4 <_vfiprintf_r+0xa4>
 80044cc:	465b      	mov	r3, fp
 80044ce:	4622      	mov	r2, r4
 80044d0:	4629      	mov	r1, r5
 80044d2:	4630      	mov	r0, r6
 80044d4:	f7ff ffa2 	bl	800441c <__sfputs_r>
 80044d8:	3001      	adds	r0, #1
 80044da:	f000 80a7 	beq.w	800462c <_vfiprintf_r+0x1ec>
 80044de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80044e0:	445a      	add	r2, fp
 80044e2:	9209      	str	r2, [sp, #36]	@ 0x24
 80044e4:	f89a 3000 	ldrb.w	r3, [sl]
 80044e8:	2b00      	cmp	r3, #0
 80044ea:	f000 809f 	beq.w	800462c <_vfiprintf_r+0x1ec>
 80044ee:	2300      	movs	r3, #0
 80044f0:	f04f 32ff 	mov.w	r2, #4294967295
 80044f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80044f8:	f10a 0a01 	add.w	sl, sl, #1
 80044fc:	9304      	str	r3, [sp, #16]
 80044fe:	9307      	str	r3, [sp, #28]
 8004500:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004504:	931a      	str	r3, [sp, #104]	@ 0x68
 8004506:	4654      	mov	r4, sl
 8004508:	2205      	movs	r2, #5
 800450a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800450e:	4853      	ldr	r0, [pc, #332]	@ (800465c <_vfiprintf_r+0x21c>)
 8004510:	f7fb fe66 	bl	80001e0 <memchr>
 8004514:	9a04      	ldr	r2, [sp, #16]
 8004516:	b9d8      	cbnz	r0, 8004550 <_vfiprintf_r+0x110>
 8004518:	06d1      	lsls	r1, r2, #27
 800451a:	bf44      	itt	mi
 800451c:	2320      	movmi	r3, #32
 800451e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004522:	0713      	lsls	r3, r2, #28
 8004524:	bf44      	itt	mi
 8004526:	232b      	movmi	r3, #43	@ 0x2b
 8004528:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800452c:	f89a 3000 	ldrb.w	r3, [sl]
 8004530:	2b2a      	cmp	r3, #42	@ 0x2a
 8004532:	d015      	beq.n	8004560 <_vfiprintf_r+0x120>
 8004534:	9a07      	ldr	r2, [sp, #28]
 8004536:	4654      	mov	r4, sl
 8004538:	2000      	movs	r0, #0
 800453a:	f04f 0c0a 	mov.w	ip, #10
 800453e:	4621      	mov	r1, r4
 8004540:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004544:	3b30      	subs	r3, #48	@ 0x30
 8004546:	2b09      	cmp	r3, #9
 8004548:	d94b      	bls.n	80045e2 <_vfiprintf_r+0x1a2>
 800454a:	b1b0      	cbz	r0, 800457a <_vfiprintf_r+0x13a>
 800454c:	9207      	str	r2, [sp, #28]
 800454e:	e014      	b.n	800457a <_vfiprintf_r+0x13a>
 8004550:	eba0 0308 	sub.w	r3, r0, r8
 8004554:	fa09 f303 	lsl.w	r3, r9, r3
 8004558:	4313      	orrs	r3, r2
 800455a:	9304      	str	r3, [sp, #16]
 800455c:	46a2      	mov	sl, r4
 800455e:	e7d2      	b.n	8004506 <_vfiprintf_r+0xc6>
 8004560:	9b03      	ldr	r3, [sp, #12]
 8004562:	1d19      	adds	r1, r3, #4
 8004564:	681b      	ldr	r3, [r3, #0]
 8004566:	9103      	str	r1, [sp, #12]
 8004568:	2b00      	cmp	r3, #0
 800456a:	bfbb      	ittet	lt
 800456c:	425b      	neglt	r3, r3
 800456e:	f042 0202 	orrlt.w	r2, r2, #2
 8004572:	9307      	strge	r3, [sp, #28]
 8004574:	9307      	strlt	r3, [sp, #28]
 8004576:	bfb8      	it	lt
 8004578:	9204      	strlt	r2, [sp, #16]
 800457a:	7823      	ldrb	r3, [r4, #0]
 800457c:	2b2e      	cmp	r3, #46	@ 0x2e
 800457e:	d10a      	bne.n	8004596 <_vfiprintf_r+0x156>
 8004580:	7863      	ldrb	r3, [r4, #1]
 8004582:	2b2a      	cmp	r3, #42	@ 0x2a
 8004584:	d132      	bne.n	80045ec <_vfiprintf_r+0x1ac>
 8004586:	9b03      	ldr	r3, [sp, #12]
 8004588:	1d1a      	adds	r2, r3, #4
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	9203      	str	r2, [sp, #12]
 800458e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004592:	3402      	adds	r4, #2
 8004594:	9305      	str	r3, [sp, #20]
 8004596:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800466c <_vfiprintf_r+0x22c>
 800459a:	7821      	ldrb	r1, [r4, #0]
 800459c:	2203      	movs	r2, #3
 800459e:	4650      	mov	r0, sl
 80045a0:	f7fb fe1e 	bl	80001e0 <memchr>
 80045a4:	b138      	cbz	r0, 80045b6 <_vfiprintf_r+0x176>
 80045a6:	9b04      	ldr	r3, [sp, #16]
 80045a8:	eba0 000a 	sub.w	r0, r0, sl
 80045ac:	2240      	movs	r2, #64	@ 0x40
 80045ae:	4082      	lsls	r2, r0
 80045b0:	4313      	orrs	r3, r2
 80045b2:	3401      	adds	r4, #1
 80045b4:	9304      	str	r3, [sp, #16]
 80045b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045ba:	4829      	ldr	r0, [pc, #164]	@ (8004660 <_vfiprintf_r+0x220>)
 80045bc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80045c0:	2206      	movs	r2, #6
 80045c2:	f7fb fe0d 	bl	80001e0 <memchr>
 80045c6:	2800      	cmp	r0, #0
 80045c8:	d03f      	beq.n	800464a <_vfiprintf_r+0x20a>
 80045ca:	4b26      	ldr	r3, [pc, #152]	@ (8004664 <_vfiprintf_r+0x224>)
 80045cc:	bb1b      	cbnz	r3, 8004616 <_vfiprintf_r+0x1d6>
 80045ce:	9b03      	ldr	r3, [sp, #12]
 80045d0:	3307      	adds	r3, #7
 80045d2:	f023 0307 	bic.w	r3, r3, #7
 80045d6:	3308      	adds	r3, #8
 80045d8:	9303      	str	r3, [sp, #12]
 80045da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80045dc:	443b      	add	r3, r7
 80045de:	9309      	str	r3, [sp, #36]	@ 0x24
 80045e0:	e76a      	b.n	80044b8 <_vfiprintf_r+0x78>
 80045e2:	fb0c 3202 	mla	r2, ip, r2, r3
 80045e6:	460c      	mov	r4, r1
 80045e8:	2001      	movs	r0, #1
 80045ea:	e7a8      	b.n	800453e <_vfiprintf_r+0xfe>
 80045ec:	2300      	movs	r3, #0
 80045ee:	3401      	adds	r4, #1
 80045f0:	9305      	str	r3, [sp, #20]
 80045f2:	4619      	mov	r1, r3
 80045f4:	f04f 0c0a 	mov.w	ip, #10
 80045f8:	4620      	mov	r0, r4
 80045fa:	f810 2b01 	ldrb.w	r2, [r0], #1
 80045fe:	3a30      	subs	r2, #48	@ 0x30
 8004600:	2a09      	cmp	r2, #9
 8004602:	d903      	bls.n	800460c <_vfiprintf_r+0x1cc>
 8004604:	2b00      	cmp	r3, #0
 8004606:	d0c6      	beq.n	8004596 <_vfiprintf_r+0x156>
 8004608:	9105      	str	r1, [sp, #20]
 800460a:	e7c4      	b.n	8004596 <_vfiprintf_r+0x156>
 800460c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004610:	4604      	mov	r4, r0
 8004612:	2301      	movs	r3, #1
 8004614:	e7f0      	b.n	80045f8 <_vfiprintf_r+0x1b8>
 8004616:	ab03      	add	r3, sp, #12
 8004618:	9300      	str	r3, [sp, #0]
 800461a:	462a      	mov	r2, r5
 800461c:	4b12      	ldr	r3, [pc, #72]	@ (8004668 <_vfiprintf_r+0x228>)
 800461e:	a904      	add	r1, sp, #16
 8004620:	4630      	mov	r0, r6
 8004622:	f3af 8000 	nop.w
 8004626:	4607      	mov	r7, r0
 8004628:	1c78      	adds	r0, r7, #1
 800462a:	d1d6      	bne.n	80045da <_vfiprintf_r+0x19a>
 800462c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800462e:	07d9      	lsls	r1, r3, #31
 8004630:	d405      	bmi.n	800463e <_vfiprintf_r+0x1fe>
 8004632:	89ab      	ldrh	r3, [r5, #12]
 8004634:	059a      	lsls	r2, r3, #22
 8004636:	d402      	bmi.n	800463e <_vfiprintf_r+0x1fe>
 8004638:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800463a:	f7ff f9e9 	bl	8003a10 <__retarget_lock_release_recursive>
 800463e:	89ab      	ldrh	r3, [r5, #12]
 8004640:	065b      	lsls	r3, r3, #25
 8004642:	f53f af1f 	bmi.w	8004484 <_vfiprintf_r+0x44>
 8004646:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004648:	e71e      	b.n	8004488 <_vfiprintf_r+0x48>
 800464a:	ab03      	add	r3, sp, #12
 800464c:	9300      	str	r3, [sp, #0]
 800464e:	462a      	mov	r2, r5
 8004650:	4b05      	ldr	r3, [pc, #20]	@ (8004668 <_vfiprintf_r+0x228>)
 8004652:	a904      	add	r1, sp, #16
 8004654:	4630      	mov	r0, r6
 8004656:	f7ff fc0b 	bl	8003e70 <_printf_i>
 800465a:	e7e4      	b.n	8004626 <_vfiprintf_r+0x1e6>
 800465c:	080048f7 	.word	0x080048f7
 8004660:	08004901 	.word	0x08004901
 8004664:	00000000 	.word	0x00000000
 8004668:	0800441d 	.word	0x0800441d
 800466c:	080048fd 	.word	0x080048fd

08004670 <_raise_r>:
 8004670:	291f      	cmp	r1, #31
 8004672:	b538      	push	{r3, r4, r5, lr}
 8004674:	4605      	mov	r5, r0
 8004676:	460c      	mov	r4, r1
 8004678:	d904      	bls.n	8004684 <_raise_r+0x14>
 800467a:	2316      	movs	r3, #22
 800467c:	6003      	str	r3, [r0, #0]
 800467e:	f04f 30ff 	mov.w	r0, #4294967295
 8004682:	bd38      	pop	{r3, r4, r5, pc}
 8004684:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004686:	b112      	cbz	r2, 800468e <_raise_r+0x1e>
 8004688:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800468c:	b94b      	cbnz	r3, 80046a2 <_raise_r+0x32>
 800468e:	4628      	mov	r0, r5
 8004690:	f000 f830 	bl	80046f4 <_getpid_r>
 8004694:	4622      	mov	r2, r4
 8004696:	4601      	mov	r1, r0
 8004698:	4628      	mov	r0, r5
 800469a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800469e:	f000 b817 	b.w	80046d0 <_kill_r>
 80046a2:	2b01      	cmp	r3, #1
 80046a4:	d00a      	beq.n	80046bc <_raise_r+0x4c>
 80046a6:	1c59      	adds	r1, r3, #1
 80046a8:	d103      	bne.n	80046b2 <_raise_r+0x42>
 80046aa:	2316      	movs	r3, #22
 80046ac:	6003      	str	r3, [r0, #0]
 80046ae:	2001      	movs	r0, #1
 80046b0:	e7e7      	b.n	8004682 <_raise_r+0x12>
 80046b2:	2100      	movs	r1, #0
 80046b4:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80046b8:	4620      	mov	r0, r4
 80046ba:	4798      	blx	r3
 80046bc:	2000      	movs	r0, #0
 80046be:	e7e0      	b.n	8004682 <_raise_r+0x12>

080046c0 <raise>:
 80046c0:	4b02      	ldr	r3, [pc, #8]	@ (80046cc <raise+0xc>)
 80046c2:	4601      	mov	r1, r0
 80046c4:	6818      	ldr	r0, [r3, #0]
 80046c6:	f7ff bfd3 	b.w	8004670 <_raise_r>
 80046ca:	bf00      	nop
 80046cc:	20000038 	.word	0x20000038

080046d0 <_kill_r>:
 80046d0:	b538      	push	{r3, r4, r5, lr}
 80046d2:	4d07      	ldr	r5, [pc, #28]	@ (80046f0 <_kill_r+0x20>)
 80046d4:	2300      	movs	r3, #0
 80046d6:	4604      	mov	r4, r0
 80046d8:	4608      	mov	r0, r1
 80046da:	4611      	mov	r1, r2
 80046dc:	602b      	str	r3, [r5, #0]
 80046de:	f7fd f8e4 	bl	80018aa <_kill>
 80046e2:	1c43      	adds	r3, r0, #1
 80046e4:	d102      	bne.n	80046ec <_kill_r+0x1c>
 80046e6:	682b      	ldr	r3, [r5, #0]
 80046e8:	b103      	cbz	r3, 80046ec <_kill_r+0x1c>
 80046ea:	6023      	str	r3, [r4, #0]
 80046ec:	bd38      	pop	{r3, r4, r5, pc}
 80046ee:	bf00      	nop
 80046f0:	20000280 	.word	0x20000280

080046f4 <_getpid_r>:
 80046f4:	f7fd b8d1 	b.w	800189a <_getpid>

080046f8 <_malloc_usable_size_r>:
 80046f8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80046fc:	1f18      	subs	r0, r3, #4
 80046fe:	2b00      	cmp	r3, #0
 8004700:	bfbc      	itt	lt
 8004702:	580b      	ldrlt	r3, [r1, r0]
 8004704:	18c0      	addlt	r0, r0, r3
 8004706:	4770      	bx	lr

08004708 <_gettimeofday>:
 8004708:	4b02      	ldr	r3, [pc, #8]	@ (8004714 <_gettimeofday+0xc>)
 800470a:	2258      	movs	r2, #88	@ 0x58
 800470c:	601a      	str	r2, [r3, #0]
 800470e:	f04f 30ff 	mov.w	r0, #4294967295
 8004712:	4770      	bx	lr
 8004714:	20000280 	.word	0x20000280

08004718 <_init>:
 8004718:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800471a:	bf00      	nop
 800471c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800471e:	bc08      	pop	{r3}
 8004720:	469e      	mov	lr, r3
 8004722:	4770      	bx	lr

08004724 <_fini>:
 8004724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004726:	bf00      	nop
 8004728:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800472a:	bc08      	pop	{r3}
 800472c:	469e      	mov	lr, r3
 800472e:	4770      	bx	lr
